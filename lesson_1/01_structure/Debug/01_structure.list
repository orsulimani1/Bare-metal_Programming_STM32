
01_structure.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010ec  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  0800128c  0800128c  0000228c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001350  08001350  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001350  08001350  00002350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001358  08001358  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001358  08001358  00002358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800135c  0800135c  0000235c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001360  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080013bc  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080013bc  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000cac  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004b3  00000000  00000000  00003d32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00000395  00000000  00000000  000041e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  00004580  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000dd  00000000  00000000  000046c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d2c  00000000  00000000  000047a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001983  00000000  00000000  000074d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000994d  00000000  00000000  00008e54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000127a1  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a10  00000000  00000000  000127e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000063  00000000  00000000  000131f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001274 	.word	0x08001274

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001274 	.word	0x08001274

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ITM_SendChar>:
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 8000280:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8000284:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	@ 0xdfc
 8000288:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800028c:	f8c2 3dfc 	str.w	r3, [r2, #3580]	@ 0xdfc

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000290:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000294:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8000298:	f043 0301 	orr.w	r3, r3, #1
 800029c:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 80002a0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f013 0f01 	tst.w	r3, #1
 80002aa:	d0f9      	beq.n	80002a0 <ITM_SendChar+0x20>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 80002ac:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002b0:	6018      	str	r0, [r3, #0]
}
 80002b2:	4770      	bx	lr

080002b4 <_write>:

int _write(int file, char *ptr, int len)
{
 80002b4:	b570      	push	{r4, r5, r6, lr}
 80002b6:	460c      	mov	r4, r1
 80002b8:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ba:	2500      	movs	r5, #0
 80002bc:	e004      	b.n	80002c8 <_write+0x14>
  {
	  ITM_SendChar(*ptr++);
 80002be:	f814 0b01 	ldrb.w	r0, [r4], #1
 80002c2:	f7ff ffdd 	bl	8000280 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c6:	3501      	adds	r5, #1
 80002c8:	42b5      	cmp	r5, r6
 80002ca:	dbf8      	blt.n	80002be <_write+0xa>
  }
  return len;
}
 80002cc:	4630      	mov	r0, r6
 80002ce:	bd70      	pop	{r4, r5, r6, pc}

080002d0 <modify_sensor1_data>:
    uint8_t status;
    int16_t pressure;
};

void modify_sensor1_data(struct sensor_data *s1){
	s1->status = 0x3;
 80002d0:	2303      	movs	r3, #3
 80002d2:	7103      	strb	r3, [r0, #4]
//	 80002d0: 2303       movs	r3, #3
//	 80002d2: 7103       strb	r3, [r0, #4]
	s1->pressure = 1225;
 80002d4:	f240 43c9 	movw	r3, #1225	@ 0x4c9
 80002d8:	80c3      	strh	r3, [r0, #6]
//	 80002d4: f44f 63c9  mov.w r3, #1225
//	 80002d8: 8143       strh	r3, [r0, #6]
}
 80002da:	4770      	bx	lr

080002dc <modify_sensor2_data>:

void modify_sensor2_data(struct sensor_data_packed *s2){
	s2->status = 0x3;
 80002dc:	2303      	movs	r3, #3
 80002de:	7103      	strb	r3, [r0, #4]
//	 80002dc: 2303       movs	r3, #3
//	 80002de: 7103       strb	r3, [r0, #4]
	s2->pressure = 1225;
 80002e0:	f06f 0336 	mvn.w	r3, #54	@ 0x36
 80002e4:	7143      	strb	r3, [r0, #5]
 80002e6:	2304      	movs	r3, #4
 80002e8:	7183      	strb	r3, [r0, #6]
//	 80002e0:  f44f 63c9  mov.w r3, #1225
//	 80002e2: 7103       strb	r3, [r0, #5]
//	 80002e0: 0b1b       lsrs	r3, r3, #8
//	 80002e2: 7143       strb	r3, [r0, #5]
}
 80002ea:	4770      	bx	lr

080002ec <main>:


int main(void) {
 80002ec:	b500      	push	{lr}
 80002ee:	b087      	sub	sp, #28
    struct sensor_data sensor1 = {25, 0x01, 1013};
 80002f0:	4b14      	ldr	r3, [pc, #80]	@ (8000344 <main+0x58>)
 80002f2:	ac04      	add	r4, sp, #16
 80002f4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80002f8:	e884 0003 	stmia.w	r4, {r0, r1}

    struct sensor_data_packed sensor2 = {.temperature = 25,
 80002fc:	3308      	adds	r3, #8
 80002fe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8000302:	9002      	str	r0, [sp, #8]
 8000304:	f8ad 100c 	strh.w	r1, [sp, #12]
 8000308:	0c09      	lsrs	r1, r1, #16
 800030a:	f88d 100e 	strb.w	r1, [sp, #14]
    									 .pressure = 1012,
										 .status = 0x01 };

    printf("sensor1: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes\n",
 800030e:	2308      	movs	r3, #8
 8000310:	9300      	str	r3, [sp, #0]
 8000312:	2301      	movs	r3, #1
 8000314:	f240 32f5 	movw	r2, #1013	@ 0x3f5
 8000318:	2119      	movs	r1, #25
 800031a:	480b      	ldr	r0, [pc, #44]	@ (8000348 <main+0x5c>)
 800031c:	f000 f944 	bl	80005a8 <iprintf>
           sensor1.temperature,
           sensor1.pressure,
           sensor1.status,
		   sizeof(sensor1));

    printf("sensor2: Temp = %ld, Press = %d, Status = 0x%X sizeof %d bytes \n",
 8000320:	2307      	movs	r3, #7
 8000322:	9300      	str	r3, [sp, #0]
 8000324:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8000328:	f9bd 200d 	ldrsh.w	r2, [sp, #13]
 800032c:	9902      	ldr	r1, [sp, #8]
 800032e:	4807      	ldr	r0, [pc, #28]	@ (800034c <main+0x60>)
 8000330:	f000 f93a 	bl	80005a8 <iprintf>
    		sensor2.temperature,
			sensor2.pressure,
			sensor2.status,
		    sizeof(sensor2));
    modify_sensor1_data(&sensor1);
 8000334:	4620      	mov	r0, r4
 8000336:	f7ff ffcb 	bl	80002d0 <modify_sensor1_data>
    modify_sensor2_data(&sensor2);
 800033a:	a802      	add	r0, sp, #8
 800033c:	f7ff ffce 	bl	80002dc <modify_sensor2_data>
	for(;;);
 8000340:	e7fe      	b.n	8000340 <main+0x54>
 8000342:	bf00      	nop
 8000344:	0800128c 	.word	0x0800128c
 8000348:	0800129c 	.word	0x0800129c
 800034c:	080012dc 	.word	0x080012dc

08000350 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	460c      	mov	r4, r1
 8000354:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	2500      	movs	r5, #0
 8000358:	e006      	b.n	8000368 <_read+0x18>
  {
    *ptr++ = __io_getchar();
 800035a:	f3af 8000 	nop.w
 800035e:	4621      	mov	r1, r4
 8000360:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000364:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 8000366:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000368:	42b5      	cmp	r5, r6
 800036a:	dbf6      	blt.n	800035a <_read+0xa>
  }

  return len;
}
 800036c:	4630      	mov	r0, r6
 800036e:	bd70      	pop	{r4, r5, r6, pc}

08000370 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000370:	f04f 30ff 	mov.w	r0, #4294967295
 8000374:	4770      	bx	lr

08000376 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000376:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800037a:	604b      	str	r3, [r1, #4]
  return 0;
}
 800037c:	2000      	movs	r0, #0
 800037e:	4770      	bx	lr

08000380 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000380:	2001      	movs	r0, #1
 8000382:	4770      	bx	lr

08000384 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000384:	2000      	movs	r0, #0
 8000386:	4770      	bx	lr

08000388 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000388:	b510      	push	{r4, lr}
 800038a:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800038c:	4a0c      	ldr	r2, [pc, #48]	@ (80003c0 <_sbrk+0x38>)
 800038e:	490d      	ldr	r1, [pc, #52]	@ (80003c4 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000390:	480d      	ldr	r0, [pc, #52]	@ (80003c8 <_sbrk+0x40>)
 8000392:	6800      	ldr	r0, [r0, #0]
 8000394:	b140      	cbz	r0, 80003a8 <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000396:	480c      	ldr	r0, [pc, #48]	@ (80003c8 <_sbrk+0x40>)
 8000398:	6800      	ldr	r0, [r0, #0]
 800039a:	4403      	add	r3, r0
 800039c:	1a52      	subs	r2, r2, r1
 800039e:	4293      	cmp	r3, r2
 80003a0:	d806      	bhi.n	80003b0 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80003a2:	4a09      	ldr	r2, [pc, #36]	@ (80003c8 <_sbrk+0x40>)
 80003a4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 80003a6:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80003a8:	4807      	ldr	r0, [pc, #28]	@ (80003c8 <_sbrk+0x40>)
 80003aa:	4c08      	ldr	r4, [pc, #32]	@ (80003cc <_sbrk+0x44>)
 80003ac:	6004      	str	r4, [r0, #0]
 80003ae:	e7f2      	b.n	8000396 <_sbrk+0xe>
    errno = ENOMEM;
 80003b0:	f000 f99e 	bl	80006f0 <__errno>
 80003b4:	230c      	movs	r3, #12
 80003b6:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80003b8:	f04f 30ff 	mov.w	r0, #4294967295
 80003bc:	e7f3      	b.n	80003a6 <_sbrk+0x1e>
 80003be:	bf00      	nop
 80003c0:	20020000 	.word	0x20020000
 80003c4:	00000400 	.word	0x00000400
 80003c8:	20000078 	.word	0x20000078
 80003cc:	200001c8 	.word	0x200001c8

080003d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003d0:	480d      	ldr	r0, [pc, #52]	@ (8000408 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003d8:	480c      	ldr	r0, [pc, #48]	@ (800040c <LoopForever+0x6>)
  ldr r1, =_edata
 80003da:	490d      	ldr	r1, [pc, #52]	@ (8000410 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003dc:	4a0d      	ldr	r2, [pc, #52]	@ (8000414 <LoopForever+0xe>)
  movs r3, #0
 80003de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e0:	e002      	b.n	80003e8 <LoopCopyDataInit>

080003e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003e6:	3304      	adds	r3, #4

080003e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003ec:	d3f9      	bcc.n	80003e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ee:	4a0a      	ldr	r2, [pc, #40]	@ (8000418 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003f0:	4c0a      	ldr	r4, [pc, #40]	@ (800041c <LoopForever+0x16>)
  movs r3, #0
 80003f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f4:	e001      	b.n	80003fa <LoopFillZerobss>

080003f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003f8:	3204      	adds	r2, #4

080003fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003fc:	d3fb      	bcc.n	80003f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003fe:	f000 f97d 	bl	80006fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000402:	f7ff ff73 	bl	80002ec <main>

08000406 <LoopForever>:

LoopForever:
  b LoopForever
 8000406:	e7fe      	b.n	8000406 <LoopForever>
  ldr   r0, =_estack
 8000408:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800040c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000410:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000414:	08001360 	.word	0x08001360
  ldr r2, =_sbss
 8000418:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800041c:	200001c8 	.word	0x200001c8

08000420 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000420:	e7fe      	b.n	8000420 <ADC_IRQHandler>
	...

08000424 <std>:
 8000424:	2300      	movs	r3, #0
 8000426:	b510      	push	{r4, lr}
 8000428:	4604      	mov	r4, r0
 800042a:	e9c0 3300 	strd	r3, r3, [r0]
 800042e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000432:	6083      	str	r3, [r0, #8]
 8000434:	8181      	strh	r1, [r0, #12]
 8000436:	6643      	str	r3, [r0, #100]	@ 0x64
 8000438:	81c2      	strh	r2, [r0, #14]
 800043a:	6183      	str	r3, [r0, #24]
 800043c:	4619      	mov	r1, r3
 800043e:	2208      	movs	r2, #8
 8000440:	305c      	adds	r0, #92	@ 0x5c
 8000442:	f000 f906 	bl	8000652 <memset>
 8000446:	4b0d      	ldr	r3, [pc, #52]	@ (800047c <std+0x58>)
 8000448:	6263      	str	r3, [r4, #36]	@ 0x24
 800044a:	4b0d      	ldr	r3, [pc, #52]	@ (8000480 <std+0x5c>)
 800044c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800044e:	4b0d      	ldr	r3, [pc, #52]	@ (8000484 <std+0x60>)
 8000450:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000452:	4b0d      	ldr	r3, [pc, #52]	@ (8000488 <std+0x64>)
 8000454:	6323      	str	r3, [r4, #48]	@ 0x30
 8000456:	4b0d      	ldr	r3, [pc, #52]	@ (800048c <std+0x68>)
 8000458:	6224      	str	r4, [r4, #32]
 800045a:	429c      	cmp	r4, r3
 800045c:	d006      	beq.n	800046c <std+0x48>
 800045e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000462:	4294      	cmp	r4, r2
 8000464:	d002      	beq.n	800046c <std+0x48>
 8000466:	33d0      	adds	r3, #208	@ 0xd0
 8000468:	429c      	cmp	r4, r3
 800046a:	d105      	bne.n	8000478 <std+0x54>
 800046c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000474:	f000 b966 	b.w	8000744 <__retarget_lock_init_recursive>
 8000478:	bd10      	pop	{r4, pc}
 800047a:	bf00      	nop
 800047c:	080005cd 	.word	0x080005cd
 8000480:	080005ef 	.word	0x080005ef
 8000484:	08000627 	.word	0x08000627
 8000488:	0800064b 	.word	0x0800064b
 800048c:	2000007c 	.word	0x2000007c

08000490 <stdio_exit_handler>:
 8000490:	4a02      	ldr	r2, [pc, #8]	@ (800049c <stdio_exit_handler+0xc>)
 8000492:	4903      	ldr	r1, [pc, #12]	@ (80004a0 <stdio_exit_handler+0x10>)
 8000494:	4803      	ldr	r0, [pc, #12]	@ (80004a4 <stdio_exit_handler+0x14>)
 8000496:	f000 b869 	b.w	800056c <_fwalk_sglue>
 800049a:	bf00      	nop
 800049c:	20000000 	.word	0x20000000
 80004a0:	08000fd5 	.word	0x08000fd5
 80004a4:	20000010 	.word	0x20000010

080004a8 <cleanup_stdio>:
 80004a8:	6841      	ldr	r1, [r0, #4]
 80004aa:	4b0c      	ldr	r3, [pc, #48]	@ (80004dc <cleanup_stdio+0x34>)
 80004ac:	4299      	cmp	r1, r3
 80004ae:	b510      	push	{r4, lr}
 80004b0:	4604      	mov	r4, r0
 80004b2:	d001      	beq.n	80004b8 <cleanup_stdio+0x10>
 80004b4:	f000 fd8e 	bl	8000fd4 <_fflush_r>
 80004b8:	68a1      	ldr	r1, [r4, #8]
 80004ba:	4b09      	ldr	r3, [pc, #36]	@ (80004e0 <cleanup_stdio+0x38>)
 80004bc:	4299      	cmp	r1, r3
 80004be:	d002      	beq.n	80004c6 <cleanup_stdio+0x1e>
 80004c0:	4620      	mov	r0, r4
 80004c2:	f000 fd87 	bl	8000fd4 <_fflush_r>
 80004c6:	68e1      	ldr	r1, [r4, #12]
 80004c8:	4b06      	ldr	r3, [pc, #24]	@ (80004e4 <cleanup_stdio+0x3c>)
 80004ca:	4299      	cmp	r1, r3
 80004cc:	d004      	beq.n	80004d8 <cleanup_stdio+0x30>
 80004ce:	4620      	mov	r0, r4
 80004d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004d4:	f000 bd7e 	b.w	8000fd4 <_fflush_r>
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	bf00      	nop
 80004dc:	2000007c 	.word	0x2000007c
 80004e0:	200000e4 	.word	0x200000e4
 80004e4:	2000014c 	.word	0x2000014c

080004e8 <global_stdio_init.part.0>:
 80004e8:	b510      	push	{r4, lr}
 80004ea:	4b0b      	ldr	r3, [pc, #44]	@ (8000518 <global_stdio_init.part.0+0x30>)
 80004ec:	4c0b      	ldr	r4, [pc, #44]	@ (800051c <global_stdio_init.part.0+0x34>)
 80004ee:	4a0c      	ldr	r2, [pc, #48]	@ (8000520 <global_stdio_init.part.0+0x38>)
 80004f0:	601a      	str	r2, [r3, #0]
 80004f2:	4620      	mov	r0, r4
 80004f4:	2200      	movs	r2, #0
 80004f6:	2104      	movs	r1, #4
 80004f8:	f7ff ff94 	bl	8000424 <std>
 80004fc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000500:	2201      	movs	r2, #1
 8000502:	2109      	movs	r1, #9
 8000504:	f7ff ff8e 	bl	8000424 <std>
 8000508:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800050c:	2202      	movs	r2, #2
 800050e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000512:	2112      	movs	r1, #18
 8000514:	f7ff bf86 	b.w	8000424 <std>
 8000518:	200001b4 	.word	0x200001b4
 800051c:	2000007c 	.word	0x2000007c
 8000520:	08000491 	.word	0x08000491

08000524 <__sfp_lock_acquire>:
 8000524:	4801      	ldr	r0, [pc, #4]	@ (800052c <__sfp_lock_acquire+0x8>)
 8000526:	f000 b90e 	b.w	8000746 <__retarget_lock_acquire_recursive>
 800052a:	bf00      	nop
 800052c:	200001bd 	.word	0x200001bd

08000530 <__sfp_lock_release>:
 8000530:	4801      	ldr	r0, [pc, #4]	@ (8000538 <__sfp_lock_release+0x8>)
 8000532:	f000 b909 	b.w	8000748 <__retarget_lock_release_recursive>
 8000536:	bf00      	nop
 8000538:	200001bd 	.word	0x200001bd

0800053c <__sinit>:
 800053c:	b510      	push	{r4, lr}
 800053e:	4604      	mov	r4, r0
 8000540:	f7ff fff0 	bl	8000524 <__sfp_lock_acquire>
 8000544:	6a23      	ldr	r3, [r4, #32]
 8000546:	b11b      	cbz	r3, 8000550 <__sinit+0x14>
 8000548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054c:	f7ff bff0 	b.w	8000530 <__sfp_lock_release>
 8000550:	4b04      	ldr	r3, [pc, #16]	@ (8000564 <__sinit+0x28>)
 8000552:	6223      	str	r3, [r4, #32]
 8000554:	4b04      	ldr	r3, [pc, #16]	@ (8000568 <__sinit+0x2c>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	2b00      	cmp	r3, #0
 800055a:	d1f5      	bne.n	8000548 <__sinit+0xc>
 800055c:	f7ff ffc4 	bl	80004e8 <global_stdio_init.part.0>
 8000560:	e7f2      	b.n	8000548 <__sinit+0xc>
 8000562:	bf00      	nop
 8000564:	080004a9 	.word	0x080004a9
 8000568:	200001b4 	.word	0x200001b4

0800056c <_fwalk_sglue>:
 800056c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000570:	4607      	mov	r7, r0
 8000572:	4688      	mov	r8, r1
 8000574:	4614      	mov	r4, r2
 8000576:	2600      	movs	r6, #0
 8000578:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800057c:	f1b9 0901 	subs.w	r9, r9, #1
 8000580:	d505      	bpl.n	800058e <_fwalk_sglue+0x22>
 8000582:	6824      	ldr	r4, [r4, #0]
 8000584:	2c00      	cmp	r4, #0
 8000586:	d1f7      	bne.n	8000578 <_fwalk_sglue+0xc>
 8000588:	4630      	mov	r0, r6
 800058a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800058e:	89ab      	ldrh	r3, [r5, #12]
 8000590:	2b01      	cmp	r3, #1
 8000592:	d907      	bls.n	80005a4 <_fwalk_sglue+0x38>
 8000594:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000598:	3301      	adds	r3, #1
 800059a:	d003      	beq.n	80005a4 <_fwalk_sglue+0x38>
 800059c:	4629      	mov	r1, r5
 800059e:	4638      	mov	r0, r7
 80005a0:	47c0      	blx	r8
 80005a2:	4306      	orrs	r6, r0
 80005a4:	3568      	adds	r5, #104	@ 0x68
 80005a6:	e7e9      	b.n	800057c <_fwalk_sglue+0x10>

080005a8 <iprintf>:
 80005a8:	b40f      	push	{r0, r1, r2, r3}
 80005aa:	b507      	push	{r0, r1, r2, lr}
 80005ac:	4906      	ldr	r1, [pc, #24]	@ (80005c8 <iprintf+0x20>)
 80005ae:	ab04      	add	r3, sp, #16
 80005b0:	6808      	ldr	r0, [r1, #0]
 80005b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80005b6:	6881      	ldr	r1, [r0, #8]
 80005b8:	9301      	str	r3, [sp, #4]
 80005ba:	f000 f9e7 	bl	800098c <_vfiprintf_r>
 80005be:	b003      	add	sp, #12
 80005c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005c4:	b004      	add	sp, #16
 80005c6:	4770      	bx	lr
 80005c8:	2000000c 	.word	0x2000000c

080005cc <__sread>:
 80005cc:	b510      	push	{r4, lr}
 80005ce:	460c      	mov	r4, r1
 80005d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005d4:	f000 f868 	bl	80006a8 <_read_r>
 80005d8:	2800      	cmp	r0, #0
 80005da:	bfab      	itete	ge
 80005dc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80005de:	89a3      	ldrhlt	r3, [r4, #12]
 80005e0:	181b      	addge	r3, r3, r0
 80005e2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80005e6:	bfac      	ite	ge
 80005e8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80005ea:	81a3      	strhlt	r3, [r4, #12]
 80005ec:	bd10      	pop	{r4, pc}

080005ee <__swrite>:
 80005ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005f2:	461f      	mov	r7, r3
 80005f4:	898b      	ldrh	r3, [r1, #12]
 80005f6:	05db      	lsls	r3, r3, #23
 80005f8:	4605      	mov	r5, r0
 80005fa:	460c      	mov	r4, r1
 80005fc:	4616      	mov	r6, r2
 80005fe:	d505      	bpl.n	800060c <__swrite+0x1e>
 8000600:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000604:	2302      	movs	r3, #2
 8000606:	2200      	movs	r2, #0
 8000608:	f000 f83c 	bl	8000684 <_lseek_r>
 800060c:	89a3      	ldrh	r3, [r4, #12]
 800060e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000612:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000616:	81a3      	strh	r3, [r4, #12]
 8000618:	4632      	mov	r2, r6
 800061a:	463b      	mov	r3, r7
 800061c:	4628      	mov	r0, r5
 800061e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000622:	f000 b853 	b.w	80006cc <_write_r>

08000626 <__sseek>:
 8000626:	b510      	push	{r4, lr}
 8000628:	460c      	mov	r4, r1
 800062a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800062e:	f000 f829 	bl	8000684 <_lseek_r>
 8000632:	1c43      	adds	r3, r0, #1
 8000634:	89a3      	ldrh	r3, [r4, #12]
 8000636:	bf15      	itete	ne
 8000638:	6560      	strne	r0, [r4, #84]	@ 0x54
 800063a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800063e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000642:	81a3      	strheq	r3, [r4, #12]
 8000644:	bf18      	it	ne
 8000646:	81a3      	strhne	r3, [r4, #12]
 8000648:	bd10      	pop	{r4, pc}

0800064a <__sclose>:
 800064a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800064e:	f000 b809 	b.w	8000664 <_close_r>

08000652 <memset>:
 8000652:	4402      	add	r2, r0
 8000654:	4603      	mov	r3, r0
 8000656:	4293      	cmp	r3, r2
 8000658:	d100      	bne.n	800065c <memset+0xa>
 800065a:	4770      	bx	lr
 800065c:	f803 1b01 	strb.w	r1, [r3], #1
 8000660:	e7f9      	b.n	8000656 <memset+0x4>
	...

08000664 <_close_r>:
 8000664:	b538      	push	{r3, r4, r5, lr}
 8000666:	4d06      	ldr	r5, [pc, #24]	@ (8000680 <_close_r+0x1c>)
 8000668:	2300      	movs	r3, #0
 800066a:	4604      	mov	r4, r0
 800066c:	4608      	mov	r0, r1
 800066e:	602b      	str	r3, [r5, #0]
 8000670:	f7ff fe7e 	bl	8000370 <_close>
 8000674:	1c43      	adds	r3, r0, #1
 8000676:	d102      	bne.n	800067e <_close_r+0x1a>
 8000678:	682b      	ldr	r3, [r5, #0]
 800067a:	b103      	cbz	r3, 800067e <_close_r+0x1a>
 800067c:	6023      	str	r3, [r4, #0]
 800067e:	bd38      	pop	{r3, r4, r5, pc}
 8000680:	200001b8 	.word	0x200001b8

08000684 <_lseek_r>:
 8000684:	b538      	push	{r3, r4, r5, lr}
 8000686:	4d07      	ldr	r5, [pc, #28]	@ (80006a4 <_lseek_r+0x20>)
 8000688:	4604      	mov	r4, r0
 800068a:	4608      	mov	r0, r1
 800068c:	4611      	mov	r1, r2
 800068e:	2200      	movs	r2, #0
 8000690:	602a      	str	r2, [r5, #0]
 8000692:	461a      	mov	r2, r3
 8000694:	f7ff fe76 	bl	8000384 <_lseek>
 8000698:	1c43      	adds	r3, r0, #1
 800069a:	d102      	bne.n	80006a2 <_lseek_r+0x1e>
 800069c:	682b      	ldr	r3, [r5, #0]
 800069e:	b103      	cbz	r3, 80006a2 <_lseek_r+0x1e>
 80006a0:	6023      	str	r3, [r4, #0]
 80006a2:	bd38      	pop	{r3, r4, r5, pc}
 80006a4:	200001b8 	.word	0x200001b8

080006a8 <_read_r>:
 80006a8:	b538      	push	{r3, r4, r5, lr}
 80006aa:	4d07      	ldr	r5, [pc, #28]	@ (80006c8 <_read_r+0x20>)
 80006ac:	4604      	mov	r4, r0
 80006ae:	4608      	mov	r0, r1
 80006b0:	4611      	mov	r1, r2
 80006b2:	2200      	movs	r2, #0
 80006b4:	602a      	str	r2, [r5, #0]
 80006b6:	461a      	mov	r2, r3
 80006b8:	f7ff fe4a 	bl	8000350 <_read>
 80006bc:	1c43      	adds	r3, r0, #1
 80006be:	d102      	bne.n	80006c6 <_read_r+0x1e>
 80006c0:	682b      	ldr	r3, [r5, #0]
 80006c2:	b103      	cbz	r3, 80006c6 <_read_r+0x1e>
 80006c4:	6023      	str	r3, [r4, #0]
 80006c6:	bd38      	pop	{r3, r4, r5, pc}
 80006c8:	200001b8 	.word	0x200001b8

080006cc <_write_r>:
 80006cc:	b538      	push	{r3, r4, r5, lr}
 80006ce:	4d07      	ldr	r5, [pc, #28]	@ (80006ec <_write_r+0x20>)
 80006d0:	4604      	mov	r4, r0
 80006d2:	4608      	mov	r0, r1
 80006d4:	4611      	mov	r1, r2
 80006d6:	2200      	movs	r2, #0
 80006d8:	602a      	str	r2, [r5, #0]
 80006da:	461a      	mov	r2, r3
 80006dc:	f7ff fdea 	bl	80002b4 <_write>
 80006e0:	1c43      	adds	r3, r0, #1
 80006e2:	d102      	bne.n	80006ea <_write_r+0x1e>
 80006e4:	682b      	ldr	r3, [r5, #0]
 80006e6:	b103      	cbz	r3, 80006ea <_write_r+0x1e>
 80006e8:	6023      	str	r3, [r4, #0]
 80006ea:	bd38      	pop	{r3, r4, r5, pc}
 80006ec:	200001b8 	.word	0x200001b8

080006f0 <__errno>:
 80006f0:	4b01      	ldr	r3, [pc, #4]	@ (80006f8 <__errno+0x8>)
 80006f2:	6818      	ldr	r0, [r3, #0]
 80006f4:	4770      	bx	lr
 80006f6:	bf00      	nop
 80006f8:	2000000c 	.word	0x2000000c

080006fc <__libc_init_array>:
 80006fc:	b570      	push	{r4, r5, r6, lr}
 80006fe:	4d0d      	ldr	r5, [pc, #52]	@ (8000734 <__libc_init_array+0x38>)
 8000700:	4c0d      	ldr	r4, [pc, #52]	@ (8000738 <__libc_init_array+0x3c>)
 8000702:	1b64      	subs	r4, r4, r5
 8000704:	10a4      	asrs	r4, r4, #2
 8000706:	2600      	movs	r6, #0
 8000708:	42a6      	cmp	r6, r4
 800070a:	d109      	bne.n	8000720 <__libc_init_array+0x24>
 800070c:	4d0b      	ldr	r5, [pc, #44]	@ (800073c <__libc_init_array+0x40>)
 800070e:	4c0c      	ldr	r4, [pc, #48]	@ (8000740 <__libc_init_array+0x44>)
 8000710:	f000 fdb0 	bl	8001274 <_init>
 8000714:	1b64      	subs	r4, r4, r5
 8000716:	10a4      	asrs	r4, r4, #2
 8000718:	2600      	movs	r6, #0
 800071a:	42a6      	cmp	r6, r4
 800071c:	d105      	bne.n	800072a <__libc_init_array+0x2e>
 800071e:	bd70      	pop	{r4, r5, r6, pc}
 8000720:	f855 3b04 	ldr.w	r3, [r5], #4
 8000724:	4798      	blx	r3
 8000726:	3601      	adds	r6, #1
 8000728:	e7ee      	b.n	8000708 <__libc_init_array+0xc>
 800072a:	f855 3b04 	ldr.w	r3, [r5], #4
 800072e:	4798      	blx	r3
 8000730:	3601      	adds	r6, #1
 8000732:	e7f2      	b.n	800071a <__libc_init_array+0x1e>
 8000734:	08001358 	.word	0x08001358
 8000738:	08001358 	.word	0x08001358
 800073c:	08001358 	.word	0x08001358
 8000740:	0800135c 	.word	0x0800135c

08000744 <__retarget_lock_init_recursive>:
 8000744:	4770      	bx	lr

08000746 <__retarget_lock_acquire_recursive>:
 8000746:	4770      	bx	lr

08000748 <__retarget_lock_release_recursive>:
 8000748:	4770      	bx	lr
	...

0800074c <_free_r>:
 800074c:	b538      	push	{r3, r4, r5, lr}
 800074e:	4605      	mov	r5, r0
 8000750:	2900      	cmp	r1, #0
 8000752:	d041      	beq.n	80007d8 <_free_r+0x8c>
 8000754:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000758:	1f0c      	subs	r4, r1, #4
 800075a:	2b00      	cmp	r3, #0
 800075c:	bfb8      	it	lt
 800075e:	18e4      	addlt	r4, r4, r3
 8000760:	f000 f8e0 	bl	8000924 <__malloc_lock>
 8000764:	4a1d      	ldr	r2, [pc, #116]	@ (80007dc <_free_r+0x90>)
 8000766:	6813      	ldr	r3, [r2, #0]
 8000768:	b933      	cbnz	r3, 8000778 <_free_r+0x2c>
 800076a:	6063      	str	r3, [r4, #4]
 800076c:	6014      	str	r4, [r2, #0]
 800076e:	4628      	mov	r0, r5
 8000770:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000774:	f000 b8dc 	b.w	8000930 <__malloc_unlock>
 8000778:	42a3      	cmp	r3, r4
 800077a:	d908      	bls.n	800078e <_free_r+0x42>
 800077c:	6820      	ldr	r0, [r4, #0]
 800077e:	1821      	adds	r1, r4, r0
 8000780:	428b      	cmp	r3, r1
 8000782:	bf01      	itttt	eq
 8000784:	6819      	ldreq	r1, [r3, #0]
 8000786:	685b      	ldreq	r3, [r3, #4]
 8000788:	1809      	addeq	r1, r1, r0
 800078a:	6021      	streq	r1, [r4, #0]
 800078c:	e7ed      	b.n	800076a <_free_r+0x1e>
 800078e:	461a      	mov	r2, r3
 8000790:	685b      	ldr	r3, [r3, #4]
 8000792:	b10b      	cbz	r3, 8000798 <_free_r+0x4c>
 8000794:	42a3      	cmp	r3, r4
 8000796:	d9fa      	bls.n	800078e <_free_r+0x42>
 8000798:	6811      	ldr	r1, [r2, #0]
 800079a:	1850      	adds	r0, r2, r1
 800079c:	42a0      	cmp	r0, r4
 800079e:	d10b      	bne.n	80007b8 <_free_r+0x6c>
 80007a0:	6820      	ldr	r0, [r4, #0]
 80007a2:	4401      	add	r1, r0
 80007a4:	1850      	adds	r0, r2, r1
 80007a6:	4283      	cmp	r3, r0
 80007a8:	6011      	str	r1, [r2, #0]
 80007aa:	d1e0      	bne.n	800076e <_free_r+0x22>
 80007ac:	6818      	ldr	r0, [r3, #0]
 80007ae:	685b      	ldr	r3, [r3, #4]
 80007b0:	6053      	str	r3, [r2, #4]
 80007b2:	4408      	add	r0, r1
 80007b4:	6010      	str	r0, [r2, #0]
 80007b6:	e7da      	b.n	800076e <_free_r+0x22>
 80007b8:	d902      	bls.n	80007c0 <_free_r+0x74>
 80007ba:	230c      	movs	r3, #12
 80007bc:	602b      	str	r3, [r5, #0]
 80007be:	e7d6      	b.n	800076e <_free_r+0x22>
 80007c0:	6820      	ldr	r0, [r4, #0]
 80007c2:	1821      	adds	r1, r4, r0
 80007c4:	428b      	cmp	r3, r1
 80007c6:	bf04      	itt	eq
 80007c8:	6819      	ldreq	r1, [r3, #0]
 80007ca:	685b      	ldreq	r3, [r3, #4]
 80007cc:	6063      	str	r3, [r4, #4]
 80007ce:	bf04      	itt	eq
 80007d0:	1809      	addeq	r1, r1, r0
 80007d2:	6021      	streq	r1, [r4, #0]
 80007d4:	6054      	str	r4, [r2, #4]
 80007d6:	e7ca      	b.n	800076e <_free_r+0x22>
 80007d8:	bd38      	pop	{r3, r4, r5, pc}
 80007da:	bf00      	nop
 80007dc:	200001c4 	.word	0x200001c4

080007e0 <sbrk_aligned>:
 80007e0:	b570      	push	{r4, r5, r6, lr}
 80007e2:	4e0f      	ldr	r6, [pc, #60]	@ (8000820 <sbrk_aligned+0x40>)
 80007e4:	460c      	mov	r4, r1
 80007e6:	6831      	ldr	r1, [r6, #0]
 80007e8:	4605      	mov	r5, r0
 80007ea:	b911      	cbnz	r1, 80007f2 <sbrk_aligned+0x12>
 80007ec:	f000 fcae 	bl	800114c <_sbrk_r>
 80007f0:	6030      	str	r0, [r6, #0]
 80007f2:	4621      	mov	r1, r4
 80007f4:	4628      	mov	r0, r5
 80007f6:	f000 fca9 	bl	800114c <_sbrk_r>
 80007fa:	1c43      	adds	r3, r0, #1
 80007fc:	d103      	bne.n	8000806 <sbrk_aligned+0x26>
 80007fe:	f04f 34ff 	mov.w	r4, #4294967295
 8000802:	4620      	mov	r0, r4
 8000804:	bd70      	pop	{r4, r5, r6, pc}
 8000806:	1cc4      	adds	r4, r0, #3
 8000808:	f024 0403 	bic.w	r4, r4, #3
 800080c:	42a0      	cmp	r0, r4
 800080e:	d0f8      	beq.n	8000802 <sbrk_aligned+0x22>
 8000810:	1a21      	subs	r1, r4, r0
 8000812:	4628      	mov	r0, r5
 8000814:	f000 fc9a 	bl	800114c <_sbrk_r>
 8000818:	3001      	adds	r0, #1
 800081a:	d1f2      	bne.n	8000802 <sbrk_aligned+0x22>
 800081c:	e7ef      	b.n	80007fe <sbrk_aligned+0x1e>
 800081e:	bf00      	nop
 8000820:	200001c0 	.word	0x200001c0

08000824 <_malloc_r>:
 8000824:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000828:	1ccd      	adds	r5, r1, #3
 800082a:	f025 0503 	bic.w	r5, r5, #3
 800082e:	3508      	adds	r5, #8
 8000830:	2d0c      	cmp	r5, #12
 8000832:	bf38      	it	cc
 8000834:	250c      	movcc	r5, #12
 8000836:	2d00      	cmp	r5, #0
 8000838:	4606      	mov	r6, r0
 800083a:	db01      	blt.n	8000840 <_malloc_r+0x1c>
 800083c:	42a9      	cmp	r1, r5
 800083e:	d904      	bls.n	800084a <_malloc_r+0x26>
 8000840:	230c      	movs	r3, #12
 8000842:	6033      	str	r3, [r6, #0]
 8000844:	2000      	movs	r0, #0
 8000846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800084a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000920 <_malloc_r+0xfc>
 800084e:	f000 f869 	bl	8000924 <__malloc_lock>
 8000852:	f8d8 3000 	ldr.w	r3, [r8]
 8000856:	461c      	mov	r4, r3
 8000858:	bb44      	cbnz	r4, 80008ac <_malloc_r+0x88>
 800085a:	4629      	mov	r1, r5
 800085c:	4630      	mov	r0, r6
 800085e:	f7ff ffbf 	bl	80007e0 <sbrk_aligned>
 8000862:	1c43      	adds	r3, r0, #1
 8000864:	4604      	mov	r4, r0
 8000866:	d158      	bne.n	800091a <_malloc_r+0xf6>
 8000868:	f8d8 4000 	ldr.w	r4, [r8]
 800086c:	4627      	mov	r7, r4
 800086e:	2f00      	cmp	r7, #0
 8000870:	d143      	bne.n	80008fa <_malloc_r+0xd6>
 8000872:	2c00      	cmp	r4, #0
 8000874:	d04b      	beq.n	800090e <_malloc_r+0xea>
 8000876:	6823      	ldr	r3, [r4, #0]
 8000878:	4639      	mov	r1, r7
 800087a:	4630      	mov	r0, r6
 800087c:	eb04 0903 	add.w	r9, r4, r3
 8000880:	f000 fc64 	bl	800114c <_sbrk_r>
 8000884:	4581      	cmp	r9, r0
 8000886:	d142      	bne.n	800090e <_malloc_r+0xea>
 8000888:	6821      	ldr	r1, [r4, #0]
 800088a:	1a6d      	subs	r5, r5, r1
 800088c:	4629      	mov	r1, r5
 800088e:	4630      	mov	r0, r6
 8000890:	f7ff ffa6 	bl	80007e0 <sbrk_aligned>
 8000894:	3001      	adds	r0, #1
 8000896:	d03a      	beq.n	800090e <_malloc_r+0xea>
 8000898:	6823      	ldr	r3, [r4, #0]
 800089a:	442b      	add	r3, r5
 800089c:	6023      	str	r3, [r4, #0]
 800089e:	f8d8 3000 	ldr.w	r3, [r8]
 80008a2:	685a      	ldr	r2, [r3, #4]
 80008a4:	bb62      	cbnz	r2, 8000900 <_malloc_r+0xdc>
 80008a6:	f8c8 7000 	str.w	r7, [r8]
 80008aa:	e00f      	b.n	80008cc <_malloc_r+0xa8>
 80008ac:	6822      	ldr	r2, [r4, #0]
 80008ae:	1b52      	subs	r2, r2, r5
 80008b0:	d420      	bmi.n	80008f4 <_malloc_r+0xd0>
 80008b2:	2a0b      	cmp	r2, #11
 80008b4:	d917      	bls.n	80008e6 <_malloc_r+0xc2>
 80008b6:	1961      	adds	r1, r4, r5
 80008b8:	42a3      	cmp	r3, r4
 80008ba:	6025      	str	r5, [r4, #0]
 80008bc:	bf18      	it	ne
 80008be:	6059      	strne	r1, [r3, #4]
 80008c0:	6863      	ldr	r3, [r4, #4]
 80008c2:	bf08      	it	eq
 80008c4:	f8c8 1000 	streq.w	r1, [r8]
 80008c8:	5162      	str	r2, [r4, r5]
 80008ca:	604b      	str	r3, [r1, #4]
 80008cc:	4630      	mov	r0, r6
 80008ce:	f000 f82f 	bl	8000930 <__malloc_unlock>
 80008d2:	f104 000b 	add.w	r0, r4, #11
 80008d6:	1d23      	adds	r3, r4, #4
 80008d8:	f020 0007 	bic.w	r0, r0, #7
 80008dc:	1ac2      	subs	r2, r0, r3
 80008de:	bf1c      	itt	ne
 80008e0:	1a1b      	subne	r3, r3, r0
 80008e2:	50a3      	strne	r3, [r4, r2]
 80008e4:	e7af      	b.n	8000846 <_malloc_r+0x22>
 80008e6:	6862      	ldr	r2, [r4, #4]
 80008e8:	42a3      	cmp	r3, r4
 80008ea:	bf0c      	ite	eq
 80008ec:	f8c8 2000 	streq.w	r2, [r8]
 80008f0:	605a      	strne	r2, [r3, #4]
 80008f2:	e7eb      	b.n	80008cc <_malloc_r+0xa8>
 80008f4:	4623      	mov	r3, r4
 80008f6:	6864      	ldr	r4, [r4, #4]
 80008f8:	e7ae      	b.n	8000858 <_malloc_r+0x34>
 80008fa:	463c      	mov	r4, r7
 80008fc:	687f      	ldr	r7, [r7, #4]
 80008fe:	e7b6      	b.n	800086e <_malloc_r+0x4a>
 8000900:	461a      	mov	r2, r3
 8000902:	685b      	ldr	r3, [r3, #4]
 8000904:	42a3      	cmp	r3, r4
 8000906:	d1fb      	bne.n	8000900 <_malloc_r+0xdc>
 8000908:	2300      	movs	r3, #0
 800090a:	6053      	str	r3, [r2, #4]
 800090c:	e7de      	b.n	80008cc <_malloc_r+0xa8>
 800090e:	230c      	movs	r3, #12
 8000910:	6033      	str	r3, [r6, #0]
 8000912:	4630      	mov	r0, r6
 8000914:	f000 f80c 	bl	8000930 <__malloc_unlock>
 8000918:	e794      	b.n	8000844 <_malloc_r+0x20>
 800091a:	6005      	str	r5, [r0, #0]
 800091c:	e7d6      	b.n	80008cc <_malloc_r+0xa8>
 800091e:	bf00      	nop
 8000920:	200001c4 	.word	0x200001c4

08000924 <__malloc_lock>:
 8000924:	4801      	ldr	r0, [pc, #4]	@ (800092c <__malloc_lock+0x8>)
 8000926:	f7ff bf0e 	b.w	8000746 <__retarget_lock_acquire_recursive>
 800092a:	bf00      	nop
 800092c:	200001bc 	.word	0x200001bc

08000930 <__malloc_unlock>:
 8000930:	4801      	ldr	r0, [pc, #4]	@ (8000938 <__malloc_unlock+0x8>)
 8000932:	f7ff bf09 	b.w	8000748 <__retarget_lock_release_recursive>
 8000936:	bf00      	nop
 8000938:	200001bc 	.word	0x200001bc

0800093c <__sfputc_r>:
 800093c:	6893      	ldr	r3, [r2, #8]
 800093e:	3b01      	subs	r3, #1
 8000940:	2b00      	cmp	r3, #0
 8000942:	b410      	push	{r4}
 8000944:	6093      	str	r3, [r2, #8]
 8000946:	da07      	bge.n	8000958 <__sfputc_r+0x1c>
 8000948:	6994      	ldr	r4, [r2, #24]
 800094a:	42a3      	cmp	r3, r4
 800094c:	db01      	blt.n	8000952 <__sfputc_r+0x16>
 800094e:	290a      	cmp	r1, #10
 8000950:	d102      	bne.n	8000958 <__sfputc_r+0x1c>
 8000952:	bc10      	pop	{r4}
 8000954:	f000 bb66 	b.w	8001024 <__swbuf_r>
 8000958:	6813      	ldr	r3, [r2, #0]
 800095a:	1c58      	adds	r0, r3, #1
 800095c:	6010      	str	r0, [r2, #0]
 800095e:	7019      	strb	r1, [r3, #0]
 8000960:	4608      	mov	r0, r1
 8000962:	bc10      	pop	{r4}
 8000964:	4770      	bx	lr

08000966 <__sfputs_r>:
 8000966:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000968:	4606      	mov	r6, r0
 800096a:	460f      	mov	r7, r1
 800096c:	4614      	mov	r4, r2
 800096e:	18d5      	adds	r5, r2, r3
 8000970:	42ac      	cmp	r4, r5
 8000972:	d101      	bne.n	8000978 <__sfputs_r+0x12>
 8000974:	2000      	movs	r0, #0
 8000976:	e007      	b.n	8000988 <__sfputs_r+0x22>
 8000978:	f814 1b01 	ldrb.w	r1, [r4], #1
 800097c:	463a      	mov	r2, r7
 800097e:	4630      	mov	r0, r6
 8000980:	f7ff ffdc 	bl	800093c <__sfputc_r>
 8000984:	1c43      	adds	r3, r0, #1
 8000986:	d1f3      	bne.n	8000970 <__sfputs_r+0xa>
 8000988:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800098c <_vfiprintf_r>:
 800098c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000990:	460d      	mov	r5, r1
 8000992:	b09d      	sub	sp, #116	@ 0x74
 8000994:	4614      	mov	r4, r2
 8000996:	4698      	mov	r8, r3
 8000998:	4606      	mov	r6, r0
 800099a:	b118      	cbz	r0, 80009a4 <_vfiprintf_r+0x18>
 800099c:	6a03      	ldr	r3, [r0, #32]
 800099e:	b90b      	cbnz	r3, 80009a4 <_vfiprintf_r+0x18>
 80009a0:	f7ff fdcc 	bl	800053c <__sinit>
 80009a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009a6:	07d9      	lsls	r1, r3, #31
 80009a8:	d405      	bmi.n	80009b6 <_vfiprintf_r+0x2a>
 80009aa:	89ab      	ldrh	r3, [r5, #12]
 80009ac:	059a      	lsls	r2, r3, #22
 80009ae:	d402      	bmi.n	80009b6 <_vfiprintf_r+0x2a>
 80009b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009b2:	f7ff fec8 	bl	8000746 <__retarget_lock_acquire_recursive>
 80009b6:	89ab      	ldrh	r3, [r5, #12]
 80009b8:	071b      	lsls	r3, r3, #28
 80009ba:	d501      	bpl.n	80009c0 <_vfiprintf_r+0x34>
 80009bc:	692b      	ldr	r3, [r5, #16]
 80009be:	b99b      	cbnz	r3, 80009e8 <_vfiprintf_r+0x5c>
 80009c0:	4629      	mov	r1, r5
 80009c2:	4630      	mov	r0, r6
 80009c4:	f000 fb6c 	bl	80010a0 <__swsetup_r>
 80009c8:	b170      	cbz	r0, 80009e8 <_vfiprintf_r+0x5c>
 80009ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009cc:	07dc      	lsls	r4, r3, #31
 80009ce:	d504      	bpl.n	80009da <_vfiprintf_r+0x4e>
 80009d0:	f04f 30ff 	mov.w	r0, #4294967295
 80009d4:	b01d      	add	sp, #116	@ 0x74
 80009d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009da:	89ab      	ldrh	r3, [r5, #12]
 80009dc:	0598      	lsls	r0, r3, #22
 80009de:	d4f7      	bmi.n	80009d0 <_vfiprintf_r+0x44>
 80009e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009e2:	f7ff feb1 	bl	8000748 <__retarget_lock_release_recursive>
 80009e6:	e7f3      	b.n	80009d0 <_vfiprintf_r+0x44>
 80009e8:	2300      	movs	r3, #0
 80009ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80009ec:	2320      	movs	r3, #32
 80009ee:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80009f2:	f8cd 800c 	str.w	r8, [sp, #12]
 80009f6:	2330      	movs	r3, #48	@ 0x30
 80009f8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ba8 <_vfiprintf_r+0x21c>
 80009fc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a00:	f04f 0901 	mov.w	r9, #1
 8000a04:	4623      	mov	r3, r4
 8000a06:	469a      	mov	sl, r3
 8000a08:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a0c:	b10a      	cbz	r2, 8000a12 <_vfiprintf_r+0x86>
 8000a0e:	2a25      	cmp	r2, #37	@ 0x25
 8000a10:	d1f9      	bne.n	8000a06 <_vfiprintf_r+0x7a>
 8000a12:	ebba 0b04 	subs.w	fp, sl, r4
 8000a16:	d00b      	beq.n	8000a30 <_vfiprintf_r+0xa4>
 8000a18:	465b      	mov	r3, fp
 8000a1a:	4622      	mov	r2, r4
 8000a1c:	4629      	mov	r1, r5
 8000a1e:	4630      	mov	r0, r6
 8000a20:	f7ff ffa1 	bl	8000966 <__sfputs_r>
 8000a24:	3001      	adds	r0, #1
 8000a26:	f000 80a7 	beq.w	8000b78 <_vfiprintf_r+0x1ec>
 8000a2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000a2c:	445a      	add	r2, fp
 8000a2e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a30:	f89a 3000 	ldrb.w	r3, [sl]
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	f000 809f 	beq.w	8000b78 <_vfiprintf_r+0x1ec>
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	f04f 32ff 	mov.w	r2, #4294967295
 8000a40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a44:	f10a 0a01 	add.w	sl, sl, #1
 8000a48:	9304      	str	r3, [sp, #16]
 8000a4a:	9307      	str	r3, [sp, #28]
 8000a4c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000a50:	931a      	str	r3, [sp, #104]	@ 0x68
 8000a52:	4654      	mov	r4, sl
 8000a54:	2205      	movs	r2, #5
 8000a56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a5a:	4853      	ldr	r0, [pc, #332]	@ (8000ba8 <_vfiprintf_r+0x21c>)
 8000a5c:	f7ff fbc0 	bl	80001e0 <memchr>
 8000a60:	9a04      	ldr	r2, [sp, #16]
 8000a62:	b9d8      	cbnz	r0, 8000a9c <_vfiprintf_r+0x110>
 8000a64:	06d1      	lsls	r1, r2, #27
 8000a66:	bf44      	itt	mi
 8000a68:	2320      	movmi	r3, #32
 8000a6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a6e:	0713      	lsls	r3, r2, #28
 8000a70:	bf44      	itt	mi
 8000a72:	232b      	movmi	r3, #43	@ 0x2b
 8000a74:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a78:	f89a 3000 	ldrb.w	r3, [sl]
 8000a7c:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a7e:	d015      	beq.n	8000aac <_vfiprintf_r+0x120>
 8000a80:	9a07      	ldr	r2, [sp, #28]
 8000a82:	4654      	mov	r4, sl
 8000a84:	2000      	movs	r0, #0
 8000a86:	f04f 0c0a 	mov.w	ip, #10
 8000a8a:	4621      	mov	r1, r4
 8000a8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a90:	3b30      	subs	r3, #48	@ 0x30
 8000a92:	2b09      	cmp	r3, #9
 8000a94:	d94b      	bls.n	8000b2e <_vfiprintf_r+0x1a2>
 8000a96:	b1b0      	cbz	r0, 8000ac6 <_vfiprintf_r+0x13a>
 8000a98:	9207      	str	r2, [sp, #28]
 8000a9a:	e014      	b.n	8000ac6 <_vfiprintf_r+0x13a>
 8000a9c:	eba0 0308 	sub.w	r3, r0, r8
 8000aa0:	fa09 f303 	lsl.w	r3, r9, r3
 8000aa4:	4313      	orrs	r3, r2
 8000aa6:	9304      	str	r3, [sp, #16]
 8000aa8:	46a2      	mov	sl, r4
 8000aaa:	e7d2      	b.n	8000a52 <_vfiprintf_r+0xc6>
 8000aac:	9b03      	ldr	r3, [sp, #12]
 8000aae:	1d19      	adds	r1, r3, #4
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	9103      	str	r1, [sp, #12]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	bfbb      	ittet	lt
 8000ab8:	425b      	neglt	r3, r3
 8000aba:	f042 0202 	orrlt.w	r2, r2, #2
 8000abe:	9307      	strge	r3, [sp, #28]
 8000ac0:	9307      	strlt	r3, [sp, #28]
 8000ac2:	bfb8      	it	lt
 8000ac4:	9204      	strlt	r2, [sp, #16]
 8000ac6:	7823      	ldrb	r3, [r4, #0]
 8000ac8:	2b2e      	cmp	r3, #46	@ 0x2e
 8000aca:	d10a      	bne.n	8000ae2 <_vfiprintf_r+0x156>
 8000acc:	7863      	ldrb	r3, [r4, #1]
 8000ace:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ad0:	d132      	bne.n	8000b38 <_vfiprintf_r+0x1ac>
 8000ad2:	9b03      	ldr	r3, [sp, #12]
 8000ad4:	1d1a      	adds	r2, r3, #4
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	9203      	str	r2, [sp, #12]
 8000ada:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000ade:	3402      	adds	r4, #2
 8000ae0:	9305      	str	r3, [sp, #20]
 8000ae2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000bac <_vfiprintf_r+0x220>
 8000ae6:	7821      	ldrb	r1, [r4, #0]
 8000ae8:	2203      	movs	r2, #3
 8000aea:	4650      	mov	r0, sl
 8000aec:	f7ff fb78 	bl	80001e0 <memchr>
 8000af0:	b138      	cbz	r0, 8000b02 <_vfiprintf_r+0x176>
 8000af2:	9b04      	ldr	r3, [sp, #16]
 8000af4:	eba0 000a 	sub.w	r0, r0, sl
 8000af8:	2240      	movs	r2, #64	@ 0x40
 8000afa:	4082      	lsls	r2, r0
 8000afc:	4313      	orrs	r3, r2
 8000afe:	3401      	adds	r4, #1
 8000b00:	9304      	str	r3, [sp, #16]
 8000b02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b06:	482a      	ldr	r0, [pc, #168]	@ (8000bb0 <_vfiprintf_r+0x224>)
 8000b08:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b0c:	2206      	movs	r2, #6
 8000b0e:	f7ff fb67 	bl	80001e0 <memchr>
 8000b12:	2800      	cmp	r0, #0
 8000b14:	d03f      	beq.n	8000b96 <_vfiprintf_r+0x20a>
 8000b16:	4b27      	ldr	r3, [pc, #156]	@ (8000bb4 <_vfiprintf_r+0x228>)
 8000b18:	bb1b      	cbnz	r3, 8000b62 <_vfiprintf_r+0x1d6>
 8000b1a:	9b03      	ldr	r3, [sp, #12]
 8000b1c:	3307      	adds	r3, #7
 8000b1e:	f023 0307 	bic.w	r3, r3, #7
 8000b22:	3308      	adds	r3, #8
 8000b24:	9303      	str	r3, [sp, #12]
 8000b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000b28:	443b      	add	r3, r7
 8000b2a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b2c:	e76a      	b.n	8000a04 <_vfiprintf_r+0x78>
 8000b2e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b32:	460c      	mov	r4, r1
 8000b34:	2001      	movs	r0, #1
 8000b36:	e7a8      	b.n	8000a8a <_vfiprintf_r+0xfe>
 8000b38:	2300      	movs	r3, #0
 8000b3a:	3401      	adds	r4, #1
 8000b3c:	9305      	str	r3, [sp, #20]
 8000b3e:	4619      	mov	r1, r3
 8000b40:	f04f 0c0a 	mov.w	ip, #10
 8000b44:	4620      	mov	r0, r4
 8000b46:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b4a:	3a30      	subs	r2, #48	@ 0x30
 8000b4c:	2a09      	cmp	r2, #9
 8000b4e:	d903      	bls.n	8000b58 <_vfiprintf_r+0x1cc>
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d0c6      	beq.n	8000ae2 <_vfiprintf_r+0x156>
 8000b54:	9105      	str	r1, [sp, #20]
 8000b56:	e7c4      	b.n	8000ae2 <_vfiprintf_r+0x156>
 8000b58:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b5c:	4604      	mov	r4, r0
 8000b5e:	2301      	movs	r3, #1
 8000b60:	e7f0      	b.n	8000b44 <_vfiprintf_r+0x1b8>
 8000b62:	ab03      	add	r3, sp, #12
 8000b64:	9300      	str	r3, [sp, #0]
 8000b66:	462a      	mov	r2, r5
 8000b68:	4b13      	ldr	r3, [pc, #76]	@ (8000bb8 <_vfiprintf_r+0x22c>)
 8000b6a:	a904      	add	r1, sp, #16
 8000b6c:	4630      	mov	r0, r6
 8000b6e:	f3af 8000 	nop.w
 8000b72:	4607      	mov	r7, r0
 8000b74:	1c78      	adds	r0, r7, #1
 8000b76:	d1d6      	bne.n	8000b26 <_vfiprintf_r+0x19a>
 8000b78:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b7a:	07d9      	lsls	r1, r3, #31
 8000b7c:	d405      	bmi.n	8000b8a <_vfiprintf_r+0x1fe>
 8000b7e:	89ab      	ldrh	r3, [r5, #12]
 8000b80:	059a      	lsls	r2, r3, #22
 8000b82:	d402      	bmi.n	8000b8a <_vfiprintf_r+0x1fe>
 8000b84:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b86:	f7ff fddf 	bl	8000748 <__retarget_lock_release_recursive>
 8000b8a:	89ab      	ldrh	r3, [r5, #12]
 8000b8c:	065b      	lsls	r3, r3, #25
 8000b8e:	f53f af1f 	bmi.w	80009d0 <_vfiprintf_r+0x44>
 8000b92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b94:	e71e      	b.n	80009d4 <_vfiprintf_r+0x48>
 8000b96:	ab03      	add	r3, sp, #12
 8000b98:	9300      	str	r3, [sp, #0]
 8000b9a:	462a      	mov	r2, r5
 8000b9c:	4b06      	ldr	r3, [pc, #24]	@ (8000bb8 <_vfiprintf_r+0x22c>)
 8000b9e:	a904      	add	r1, sp, #16
 8000ba0:	4630      	mov	r0, r6
 8000ba2:	f000 f879 	bl	8000c98 <_printf_i>
 8000ba6:	e7e4      	b.n	8000b72 <_vfiprintf_r+0x1e6>
 8000ba8:	0800131d 	.word	0x0800131d
 8000bac:	08001323 	.word	0x08001323
 8000bb0:	08001327 	.word	0x08001327
 8000bb4:	00000000 	.word	0x00000000
 8000bb8:	08000967 	.word	0x08000967

08000bbc <_printf_common>:
 8000bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc0:	4616      	mov	r6, r2
 8000bc2:	4698      	mov	r8, r3
 8000bc4:	688a      	ldr	r2, [r1, #8]
 8000bc6:	690b      	ldr	r3, [r1, #16]
 8000bc8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000bcc:	4293      	cmp	r3, r2
 8000bce:	bfb8      	it	lt
 8000bd0:	4613      	movlt	r3, r2
 8000bd2:	6033      	str	r3, [r6, #0]
 8000bd4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000bd8:	4607      	mov	r7, r0
 8000bda:	460c      	mov	r4, r1
 8000bdc:	b10a      	cbz	r2, 8000be2 <_printf_common+0x26>
 8000bde:	3301      	adds	r3, #1
 8000be0:	6033      	str	r3, [r6, #0]
 8000be2:	6823      	ldr	r3, [r4, #0]
 8000be4:	0699      	lsls	r1, r3, #26
 8000be6:	bf42      	ittt	mi
 8000be8:	6833      	ldrmi	r3, [r6, #0]
 8000bea:	3302      	addmi	r3, #2
 8000bec:	6033      	strmi	r3, [r6, #0]
 8000bee:	6825      	ldr	r5, [r4, #0]
 8000bf0:	f015 0506 	ands.w	r5, r5, #6
 8000bf4:	d106      	bne.n	8000c04 <_printf_common+0x48>
 8000bf6:	f104 0a19 	add.w	sl, r4, #25
 8000bfa:	68e3      	ldr	r3, [r4, #12]
 8000bfc:	6832      	ldr	r2, [r6, #0]
 8000bfe:	1a9b      	subs	r3, r3, r2
 8000c00:	42ab      	cmp	r3, r5
 8000c02:	dc26      	bgt.n	8000c52 <_printf_common+0x96>
 8000c04:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c08:	6822      	ldr	r2, [r4, #0]
 8000c0a:	3b00      	subs	r3, #0
 8000c0c:	bf18      	it	ne
 8000c0e:	2301      	movne	r3, #1
 8000c10:	0692      	lsls	r2, r2, #26
 8000c12:	d42b      	bmi.n	8000c6c <_printf_common+0xb0>
 8000c14:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c18:	4641      	mov	r1, r8
 8000c1a:	4638      	mov	r0, r7
 8000c1c:	47c8      	blx	r9
 8000c1e:	3001      	adds	r0, #1
 8000c20:	d01e      	beq.n	8000c60 <_printf_common+0xa4>
 8000c22:	6823      	ldr	r3, [r4, #0]
 8000c24:	6922      	ldr	r2, [r4, #16]
 8000c26:	f003 0306 	and.w	r3, r3, #6
 8000c2a:	2b04      	cmp	r3, #4
 8000c2c:	bf02      	ittt	eq
 8000c2e:	68e5      	ldreq	r5, [r4, #12]
 8000c30:	6833      	ldreq	r3, [r6, #0]
 8000c32:	1aed      	subeq	r5, r5, r3
 8000c34:	68a3      	ldr	r3, [r4, #8]
 8000c36:	bf0c      	ite	eq
 8000c38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c3c:	2500      	movne	r5, #0
 8000c3e:	4293      	cmp	r3, r2
 8000c40:	bfc4      	itt	gt
 8000c42:	1a9b      	subgt	r3, r3, r2
 8000c44:	18ed      	addgt	r5, r5, r3
 8000c46:	2600      	movs	r6, #0
 8000c48:	341a      	adds	r4, #26
 8000c4a:	42b5      	cmp	r5, r6
 8000c4c:	d11a      	bne.n	8000c84 <_printf_common+0xc8>
 8000c4e:	2000      	movs	r0, #0
 8000c50:	e008      	b.n	8000c64 <_printf_common+0xa8>
 8000c52:	2301      	movs	r3, #1
 8000c54:	4652      	mov	r2, sl
 8000c56:	4641      	mov	r1, r8
 8000c58:	4638      	mov	r0, r7
 8000c5a:	47c8      	blx	r9
 8000c5c:	3001      	adds	r0, #1
 8000c5e:	d103      	bne.n	8000c68 <_printf_common+0xac>
 8000c60:	f04f 30ff 	mov.w	r0, #4294967295
 8000c64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c68:	3501      	adds	r5, #1
 8000c6a:	e7c6      	b.n	8000bfa <_printf_common+0x3e>
 8000c6c:	18e1      	adds	r1, r4, r3
 8000c6e:	1c5a      	adds	r2, r3, #1
 8000c70:	2030      	movs	r0, #48	@ 0x30
 8000c72:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c76:	4422      	add	r2, r4
 8000c78:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c7c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c80:	3302      	adds	r3, #2
 8000c82:	e7c7      	b.n	8000c14 <_printf_common+0x58>
 8000c84:	2301      	movs	r3, #1
 8000c86:	4622      	mov	r2, r4
 8000c88:	4641      	mov	r1, r8
 8000c8a:	4638      	mov	r0, r7
 8000c8c:	47c8      	blx	r9
 8000c8e:	3001      	adds	r0, #1
 8000c90:	d0e6      	beq.n	8000c60 <_printf_common+0xa4>
 8000c92:	3601      	adds	r6, #1
 8000c94:	e7d9      	b.n	8000c4a <_printf_common+0x8e>
	...

08000c98 <_printf_i>:
 8000c98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c9c:	7e0f      	ldrb	r7, [r1, #24]
 8000c9e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000ca0:	2f78      	cmp	r7, #120	@ 0x78
 8000ca2:	4691      	mov	r9, r2
 8000ca4:	4680      	mov	r8, r0
 8000ca6:	460c      	mov	r4, r1
 8000ca8:	469a      	mov	sl, r3
 8000caa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000cae:	d807      	bhi.n	8000cc0 <_printf_i+0x28>
 8000cb0:	2f62      	cmp	r7, #98	@ 0x62
 8000cb2:	d80a      	bhi.n	8000cca <_printf_i+0x32>
 8000cb4:	2f00      	cmp	r7, #0
 8000cb6:	f000 80d1 	beq.w	8000e5c <_printf_i+0x1c4>
 8000cba:	2f58      	cmp	r7, #88	@ 0x58
 8000cbc:	f000 80b8 	beq.w	8000e30 <_printf_i+0x198>
 8000cc0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cc4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000cc8:	e03a      	b.n	8000d40 <_printf_i+0xa8>
 8000cca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000cce:	2b15      	cmp	r3, #21
 8000cd0:	d8f6      	bhi.n	8000cc0 <_printf_i+0x28>
 8000cd2:	a101      	add	r1, pc, #4	@ (adr r1, 8000cd8 <_printf_i+0x40>)
 8000cd4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cd8:	08000d31 	.word	0x08000d31
 8000cdc:	08000d45 	.word	0x08000d45
 8000ce0:	08000cc1 	.word	0x08000cc1
 8000ce4:	08000cc1 	.word	0x08000cc1
 8000ce8:	08000cc1 	.word	0x08000cc1
 8000cec:	08000cc1 	.word	0x08000cc1
 8000cf0:	08000d45 	.word	0x08000d45
 8000cf4:	08000cc1 	.word	0x08000cc1
 8000cf8:	08000cc1 	.word	0x08000cc1
 8000cfc:	08000cc1 	.word	0x08000cc1
 8000d00:	08000cc1 	.word	0x08000cc1
 8000d04:	08000e43 	.word	0x08000e43
 8000d08:	08000d6f 	.word	0x08000d6f
 8000d0c:	08000dfd 	.word	0x08000dfd
 8000d10:	08000cc1 	.word	0x08000cc1
 8000d14:	08000cc1 	.word	0x08000cc1
 8000d18:	08000e65 	.word	0x08000e65
 8000d1c:	08000cc1 	.word	0x08000cc1
 8000d20:	08000d6f 	.word	0x08000d6f
 8000d24:	08000cc1 	.word	0x08000cc1
 8000d28:	08000cc1 	.word	0x08000cc1
 8000d2c:	08000e05 	.word	0x08000e05
 8000d30:	6833      	ldr	r3, [r6, #0]
 8000d32:	1d1a      	adds	r2, r3, #4
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	6032      	str	r2, [r6, #0]
 8000d38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d3c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000d40:	2301      	movs	r3, #1
 8000d42:	e09c      	b.n	8000e7e <_printf_i+0x1e6>
 8000d44:	6833      	ldr	r3, [r6, #0]
 8000d46:	6820      	ldr	r0, [r4, #0]
 8000d48:	1d19      	adds	r1, r3, #4
 8000d4a:	6031      	str	r1, [r6, #0]
 8000d4c:	0606      	lsls	r6, r0, #24
 8000d4e:	d501      	bpl.n	8000d54 <_printf_i+0xbc>
 8000d50:	681d      	ldr	r5, [r3, #0]
 8000d52:	e003      	b.n	8000d5c <_printf_i+0xc4>
 8000d54:	0645      	lsls	r5, r0, #25
 8000d56:	d5fb      	bpl.n	8000d50 <_printf_i+0xb8>
 8000d58:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d5c:	2d00      	cmp	r5, #0
 8000d5e:	da03      	bge.n	8000d68 <_printf_i+0xd0>
 8000d60:	232d      	movs	r3, #45	@ 0x2d
 8000d62:	426d      	negs	r5, r5
 8000d64:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d68:	4858      	ldr	r0, [pc, #352]	@ (8000ecc <_printf_i+0x234>)
 8000d6a:	230a      	movs	r3, #10
 8000d6c:	e011      	b.n	8000d92 <_printf_i+0xfa>
 8000d6e:	6821      	ldr	r1, [r4, #0]
 8000d70:	6833      	ldr	r3, [r6, #0]
 8000d72:	0608      	lsls	r0, r1, #24
 8000d74:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d78:	d402      	bmi.n	8000d80 <_printf_i+0xe8>
 8000d7a:	0649      	lsls	r1, r1, #25
 8000d7c:	bf48      	it	mi
 8000d7e:	b2ad      	uxthmi	r5, r5
 8000d80:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d82:	4852      	ldr	r0, [pc, #328]	@ (8000ecc <_printf_i+0x234>)
 8000d84:	6033      	str	r3, [r6, #0]
 8000d86:	bf14      	ite	ne
 8000d88:	230a      	movne	r3, #10
 8000d8a:	2308      	moveq	r3, #8
 8000d8c:	2100      	movs	r1, #0
 8000d8e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d92:	6866      	ldr	r6, [r4, #4]
 8000d94:	60a6      	str	r6, [r4, #8]
 8000d96:	2e00      	cmp	r6, #0
 8000d98:	db05      	blt.n	8000da6 <_printf_i+0x10e>
 8000d9a:	6821      	ldr	r1, [r4, #0]
 8000d9c:	432e      	orrs	r6, r5
 8000d9e:	f021 0104 	bic.w	r1, r1, #4
 8000da2:	6021      	str	r1, [r4, #0]
 8000da4:	d04b      	beq.n	8000e3e <_printf_i+0x1a6>
 8000da6:	4616      	mov	r6, r2
 8000da8:	fbb5 f1f3 	udiv	r1, r5, r3
 8000dac:	fb03 5711 	mls	r7, r3, r1, r5
 8000db0:	5dc7      	ldrb	r7, [r0, r7]
 8000db2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000db6:	462f      	mov	r7, r5
 8000db8:	42bb      	cmp	r3, r7
 8000dba:	460d      	mov	r5, r1
 8000dbc:	d9f4      	bls.n	8000da8 <_printf_i+0x110>
 8000dbe:	2b08      	cmp	r3, #8
 8000dc0:	d10b      	bne.n	8000dda <_printf_i+0x142>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	07df      	lsls	r7, r3, #31
 8000dc6:	d508      	bpl.n	8000dda <_printf_i+0x142>
 8000dc8:	6923      	ldr	r3, [r4, #16]
 8000dca:	6861      	ldr	r1, [r4, #4]
 8000dcc:	4299      	cmp	r1, r3
 8000dce:	bfde      	ittt	le
 8000dd0:	2330      	movle	r3, #48	@ 0x30
 8000dd2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000dd6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000dda:	1b92      	subs	r2, r2, r6
 8000ddc:	6122      	str	r2, [r4, #16]
 8000dde:	f8cd a000 	str.w	sl, [sp]
 8000de2:	464b      	mov	r3, r9
 8000de4:	aa03      	add	r2, sp, #12
 8000de6:	4621      	mov	r1, r4
 8000de8:	4640      	mov	r0, r8
 8000dea:	f7ff fee7 	bl	8000bbc <_printf_common>
 8000dee:	3001      	adds	r0, #1
 8000df0:	d14a      	bne.n	8000e88 <_printf_i+0x1f0>
 8000df2:	f04f 30ff 	mov.w	r0, #4294967295
 8000df6:	b004      	add	sp, #16
 8000df8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dfc:	6823      	ldr	r3, [r4, #0]
 8000dfe:	f043 0320 	orr.w	r3, r3, #32
 8000e02:	6023      	str	r3, [r4, #0]
 8000e04:	4832      	ldr	r0, [pc, #200]	@ (8000ed0 <_printf_i+0x238>)
 8000e06:	2778      	movs	r7, #120	@ 0x78
 8000e08:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e0c:	6823      	ldr	r3, [r4, #0]
 8000e0e:	6831      	ldr	r1, [r6, #0]
 8000e10:	061f      	lsls	r7, r3, #24
 8000e12:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e16:	d402      	bmi.n	8000e1e <_printf_i+0x186>
 8000e18:	065f      	lsls	r7, r3, #25
 8000e1a:	bf48      	it	mi
 8000e1c:	b2ad      	uxthmi	r5, r5
 8000e1e:	6031      	str	r1, [r6, #0]
 8000e20:	07d9      	lsls	r1, r3, #31
 8000e22:	bf44      	itt	mi
 8000e24:	f043 0320 	orrmi.w	r3, r3, #32
 8000e28:	6023      	strmi	r3, [r4, #0]
 8000e2a:	b11d      	cbz	r5, 8000e34 <_printf_i+0x19c>
 8000e2c:	2310      	movs	r3, #16
 8000e2e:	e7ad      	b.n	8000d8c <_printf_i+0xf4>
 8000e30:	4826      	ldr	r0, [pc, #152]	@ (8000ecc <_printf_i+0x234>)
 8000e32:	e7e9      	b.n	8000e08 <_printf_i+0x170>
 8000e34:	6823      	ldr	r3, [r4, #0]
 8000e36:	f023 0320 	bic.w	r3, r3, #32
 8000e3a:	6023      	str	r3, [r4, #0]
 8000e3c:	e7f6      	b.n	8000e2c <_printf_i+0x194>
 8000e3e:	4616      	mov	r6, r2
 8000e40:	e7bd      	b.n	8000dbe <_printf_i+0x126>
 8000e42:	6833      	ldr	r3, [r6, #0]
 8000e44:	6825      	ldr	r5, [r4, #0]
 8000e46:	6961      	ldr	r1, [r4, #20]
 8000e48:	1d18      	adds	r0, r3, #4
 8000e4a:	6030      	str	r0, [r6, #0]
 8000e4c:	062e      	lsls	r6, r5, #24
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	d501      	bpl.n	8000e56 <_printf_i+0x1be>
 8000e52:	6019      	str	r1, [r3, #0]
 8000e54:	e002      	b.n	8000e5c <_printf_i+0x1c4>
 8000e56:	0668      	lsls	r0, r5, #25
 8000e58:	d5fb      	bpl.n	8000e52 <_printf_i+0x1ba>
 8000e5a:	8019      	strh	r1, [r3, #0]
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	6123      	str	r3, [r4, #16]
 8000e60:	4616      	mov	r6, r2
 8000e62:	e7bc      	b.n	8000dde <_printf_i+0x146>
 8000e64:	6833      	ldr	r3, [r6, #0]
 8000e66:	1d1a      	adds	r2, r3, #4
 8000e68:	6032      	str	r2, [r6, #0]
 8000e6a:	681e      	ldr	r6, [r3, #0]
 8000e6c:	6862      	ldr	r2, [r4, #4]
 8000e6e:	2100      	movs	r1, #0
 8000e70:	4630      	mov	r0, r6
 8000e72:	f7ff f9b5 	bl	80001e0 <memchr>
 8000e76:	b108      	cbz	r0, 8000e7c <_printf_i+0x1e4>
 8000e78:	1b80      	subs	r0, r0, r6
 8000e7a:	6060      	str	r0, [r4, #4]
 8000e7c:	6863      	ldr	r3, [r4, #4]
 8000e7e:	6123      	str	r3, [r4, #16]
 8000e80:	2300      	movs	r3, #0
 8000e82:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e86:	e7aa      	b.n	8000dde <_printf_i+0x146>
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	4632      	mov	r2, r6
 8000e8c:	4649      	mov	r1, r9
 8000e8e:	4640      	mov	r0, r8
 8000e90:	47d0      	blx	sl
 8000e92:	3001      	adds	r0, #1
 8000e94:	d0ad      	beq.n	8000df2 <_printf_i+0x15a>
 8000e96:	6823      	ldr	r3, [r4, #0]
 8000e98:	079b      	lsls	r3, r3, #30
 8000e9a:	d413      	bmi.n	8000ec4 <_printf_i+0x22c>
 8000e9c:	68e0      	ldr	r0, [r4, #12]
 8000e9e:	9b03      	ldr	r3, [sp, #12]
 8000ea0:	4298      	cmp	r0, r3
 8000ea2:	bfb8      	it	lt
 8000ea4:	4618      	movlt	r0, r3
 8000ea6:	e7a6      	b.n	8000df6 <_printf_i+0x15e>
 8000ea8:	2301      	movs	r3, #1
 8000eaa:	4632      	mov	r2, r6
 8000eac:	4649      	mov	r1, r9
 8000eae:	4640      	mov	r0, r8
 8000eb0:	47d0      	blx	sl
 8000eb2:	3001      	adds	r0, #1
 8000eb4:	d09d      	beq.n	8000df2 <_printf_i+0x15a>
 8000eb6:	3501      	adds	r5, #1
 8000eb8:	68e3      	ldr	r3, [r4, #12]
 8000eba:	9903      	ldr	r1, [sp, #12]
 8000ebc:	1a5b      	subs	r3, r3, r1
 8000ebe:	42ab      	cmp	r3, r5
 8000ec0:	dcf2      	bgt.n	8000ea8 <_printf_i+0x210>
 8000ec2:	e7eb      	b.n	8000e9c <_printf_i+0x204>
 8000ec4:	2500      	movs	r5, #0
 8000ec6:	f104 0619 	add.w	r6, r4, #25
 8000eca:	e7f5      	b.n	8000eb8 <_printf_i+0x220>
 8000ecc:	0800132e 	.word	0x0800132e
 8000ed0:	0800133f 	.word	0x0800133f

08000ed4 <__sflush_r>:
 8000ed4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000eda:	0716      	lsls	r6, r2, #28
 8000edc:	4605      	mov	r5, r0
 8000ede:	460c      	mov	r4, r1
 8000ee0:	d454      	bmi.n	8000f8c <__sflush_r+0xb8>
 8000ee2:	684b      	ldr	r3, [r1, #4]
 8000ee4:	2b00      	cmp	r3, #0
 8000ee6:	dc02      	bgt.n	8000eee <__sflush_r+0x1a>
 8000ee8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	dd48      	ble.n	8000f80 <__sflush_r+0xac>
 8000eee:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ef0:	2e00      	cmp	r6, #0
 8000ef2:	d045      	beq.n	8000f80 <__sflush_r+0xac>
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000efa:	682f      	ldr	r7, [r5, #0]
 8000efc:	6a21      	ldr	r1, [r4, #32]
 8000efe:	602b      	str	r3, [r5, #0]
 8000f00:	d030      	beq.n	8000f64 <__sflush_r+0x90>
 8000f02:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f04:	89a3      	ldrh	r3, [r4, #12]
 8000f06:	0759      	lsls	r1, r3, #29
 8000f08:	d505      	bpl.n	8000f16 <__sflush_r+0x42>
 8000f0a:	6863      	ldr	r3, [r4, #4]
 8000f0c:	1ad2      	subs	r2, r2, r3
 8000f0e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f10:	b10b      	cbz	r3, 8000f16 <__sflush_r+0x42>
 8000f12:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f14:	1ad2      	subs	r2, r2, r3
 8000f16:	2300      	movs	r3, #0
 8000f18:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f1a:	6a21      	ldr	r1, [r4, #32]
 8000f1c:	4628      	mov	r0, r5
 8000f1e:	47b0      	blx	r6
 8000f20:	1c43      	adds	r3, r0, #1
 8000f22:	89a3      	ldrh	r3, [r4, #12]
 8000f24:	d106      	bne.n	8000f34 <__sflush_r+0x60>
 8000f26:	6829      	ldr	r1, [r5, #0]
 8000f28:	291d      	cmp	r1, #29
 8000f2a:	d82b      	bhi.n	8000f84 <__sflush_r+0xb0>
 8000f2c:	4a28      	ldr	r2, [pc, #160]	@ (8000fd0 <__sflush_r+0xfc>)
 8000f2e:	40ca      	lsrs	r2, r1
 8000f30:	07d6      	lsls	r6, r2, #31
 8000f32:	d527      	bpl.n	8000f84 <__sflush_r+0xb0>
 8000f34:	2200      	movs	r2, #0
 8000f36:	6062      	str	r2, [r4, #4]
 8000f38:	04d9      	lsls	r1, r3, #19
 8000f3a:	6922      	ldr	r2, [r4, #16]
 8000f3c:	6022      	str	r2, [r4, #0]
 8000f3e:	d504      	bpl.n	8000f4a <__sflush_r+0x76>
 8000f40:	1c42      	adds	r2, r0, #1
 8000f42:	d101      	bne.n	8000f48 <__sflush_r+0x74>
 8000f44:	682b      	ldr	r3, [r5, #0]
 8000f46:	b903      	cbnz	r3, 8000f4a <__sflush_r+0x76>
 8000f48:	6560      	str	r0, [r4, #84]	@ 0x54
 8000f4a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000f4c:	602f      	str	r7, [r5, #0]
 8000f4e:	b1b9      	cbz	r1, 8000f80 <__sflush_r+0xac>
 8000f50:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000f54:	4299      	cmp	r1, r3
 8000f56:	d002      	beq.n	8000f5e <__sflush_r+0x8a>
 8000f58:	4628      	mov	r0, r5
 8000f5a:	f7ff fbf7 	bl	800074c <_free_r>
 8000f5e:	2300      	movs	r3, #0
 8000f60:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f62:	e00d      	b.n	8000f80 <__sflush_r+0xac>
 8000f64:	2301      	movs	r3, #1
 8000f66:	4628      	mov	r0, r5
 8000f68:	47b0      	blx	r6
 8000f6a:	4602      	mov	r2, r0
 8000f6c:	1c50      	adds	r0, r2, #1
 8000f6e:	d1c9      	bne.n	8000f04 <__sflush_r+0x30>
 8000f70:	682b      	ldr	r3, [r5, #0]
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d0c6      	beq.n	8000f04 <__sflush_r+0x30>
 8000f76:	2b1d      	cmp	r3, #29
 8000f78:	d001      	beq.n	8000f7e <__sflush_r+0xaa>
 8000f7a:	2b16      	cmp	r3, #22
 8000f7c:	d11d      	bne.n	8000fba <__sflush_r+0xe6>
 8000f7e:	602f      	str	r7, [r5, #0]
 8000f80:	2000      	movs	r0, #0
 8000f82:	e021      	b.n	8000fc8 <__sflush_r+0xf4>
 8000f84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f88:	b21b      	sxth	r3, r3
 8000f8a:	e01a      	b.n	8000fc2 <__sflush_r+0xee>
 8000f8c:	690f      	ldr	r7, [r1, #16]
 8000f8e:	2f00      	cmp	r7, #0
 8000f90:	d0f6      	beq.n	8000f80 <__sflush_r+0xac>
 8000f92:	0793      	lsls	r3, r2, #30
 8000f94:	680e      	ldr	r6, [r1, #0]
 8000f96:	bf08      	it	eq
 8000f98:	694b      	ldreq	r3, [r1, #20]
 8000f9a:	600f      	str	r7, [r1, #0]
 8000f9c:	bf18      	it	ne
 8000f9e:	2300      	movne	r3, #0
 8000fa0:	1bf6      	subs	r6, r6, r7
 8000fa2:	608b      	str	r3, [r1, #8]
 8000fa4:	2e00      	cmp	r6, #0
 8000fa6:	ddeb      	ble.n	8000f80 <__sflush_r+0xac>
 8000fa8:	6a21      	ldr	r1, [r4, #32]
 8000faa:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000fae:	4633      	mov	r3, r6
 8000fb0:	463a      	mov	r2, r7
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	47e0      	blx	ip
 8000fb6:	2800      	cmp	r0, #0
 8000fb8:	dc07      	bgt.n	8000fca <__sflush_r+0xf6>
 8000fba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fbe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fc2:	81a3      	strh	r3, [r4, #12]
 8000fc4:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fca:	4407      	add	r7, r0
 8000fcc:	1a36      	subs	r6, r6, r0
 8000fce:	e7e9      	b.n	8000fa4 <__sflush_r+0xd0>
 8000fd0:	20400001 	.word	0x20400001

08000fd4 <_fflush_r>:
 8000fd4:	b538      	push	{r3, r4, r5, lr}
 8000fd6:	690b      	ldr	r3, [r1, #16]
 8000fd8:	4605      	mov	r5, r0
 8000fda:	460c      	mov	r4, r1
 8000fdc:	b913      	cbnz	r3, 8000fe4 <_fflush_r+0x10>
 8000fde:	2500      	movs	r5, #0
 8000fe0:	4628      	mov	r0, r5
 8000fe2:	bd38      	pop	{r3, r4, r5, pc}
 8000fe4:	b118      	cbz	r0, 8000fee <_fflush_r+0x1a>
 8000fe6:	6a03      	ldr	r3, [r0, #32]
 8000fe8:	b90b      	cbnz	r3, 8000fee <_fflush_r+0x1a>
 8000fea:	f7ff faa7 	bl	800053c <__sinit>
 8000fee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d0f3      	beq.n	8000fde <_fflush_r+0xa>
 8000ff6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000ff8:	07d0      	lsls	r0, r2, #31
 8000ffa:	d404      	bmi.n	8001006 <_fflush_r+0x32>
 8000ffc:	0599      	lsls	r1, r3, #22
 8000ffe:	d402      	bmi.n	8001006 <_fflush_r+0x32>
 8001000:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001002:	f7ff fba0 	bl	8000746 <__retarget_lock_acquire_recursive>
 8001006:	4628      	mov	r0, r5
 8001008:	4621      	mov	r1, r4
 800100a:	f7ff ff63 	bl	8000ed4 <__sflush_r>
 800100e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001010:	07da      	lsls	r2, r3, #31
 8001012:	4605      	mov	r5, r0
 8001014:	d4e4      	bmi.n	8000fe0 <_fflush_r+0xc>
 8001016:	89a3      	ldrh	r3, [r4, #12]
 8001018:	059b      	lsls	r3, r3, #22
 800101a:	d4e1      	bmi.n	8000fe0 <_fflush_r+0xc>
 800101c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800101e:	f7ff fb93 	bl	8000748 <__retarget_lock_release_recursive>
 8001022:	e7dd      	b.n	8000fe0 <_fflush_r+0xc>

08001024 <__swbuf_r>:
 8001024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001026:	460e      	mov	r6, r1
 8001028:	4614      	mov	r4, r2
 800102a:	4605      	mov	r5, r0
 800102c:	b118      	cbz	r0, 8001036 <__swbuf_r+0x12>
 800102e:	6a03      	ldr	r3, [r0, #32]
 8001030:	b90b      	cbnz	r3, 8001036 <__swbuf_r+0x12>
 8001032:	f7ff fa83 	bl	800053c <__sinit>
 8001036:	69a3      	ldr	r3, [r4, #24]
 8001038:	60a3      	str	r3, [r4, #8]
 800103a:	89a3      	ldrh	r3, [r4, #12]
 800103c:	071a      	lsls	r2, r3, #28
 800103e:	d501      	bpl.n	8001044 <__swbuf_r+0x20>
 8001040:	6923      	ldr	r3, [r4, #16]
 8001042:	b943      	cbnz	r3, 8001056 <__swbuf_r+0x32>
 8001044:	4621      	mov	r1, r4
 8001046:	4628      	mov	r0, r5
 8001048:	f000 f82a 	bl	80010a0 <__swsetup_r>
 800104c:	b118      	cbz	r0, 8001056 <__swbuf_r+0x32>
 800104e:	f04f 37ff 	mov.w	r7, #4294967295
 8001052:	4638      	mov	r0, r7
 8001054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001056:	6823      	ldr	r3, [r4, #0]
 8001058:	6922      	ldr	r2, [r4, #16]
 800105a:	1a98      	subs	r0, r3, r2
 800105c:	6963      	ldr	r3, [r4, #20]
 800105e:	b2f6      	uxtb	r6, r6
 8001060:	4283      	cmp	r3, r0
 8001062:	4637      	mov	r7, r6
 8001064:	dc05      	bgt.n	8001072 <__swbuf_r+0x4e>
 8001066:	4621      	mov	r1, r4
 8001068:	4628      	mov	r0, r5
 800106a:	f7ff ffb3 	bl	8000fd4 <_fflush_r>
 800106e:	2800      	cmp	r0, #0
 8001070:	d1ed      	bne.n	800104e <__swbuf_r+0x2a>
 8001072:	68a3      	ldr	r3, [r4, #8]
 8001074:	3b01      	subs	r3, #1
 8001076:	60a3      	str	r3, [r4, #8]
 8001078:	6823      	ldr	r3, [r4, #0]
 800107a:	1c5a      	adds	r2, r3, #1
 800107c:	6022      	str	r2, [r4, #0]
 800107e:	701e      	strb	r6, [r3, #0]
 8001080:	6962      	ldr	r2, [r4, #20]
 8001082:	1c43      	adds	r3, r0, #1
 8001084:	429a      	cmp	r2, r3
 8001086:	d004      	beq.n	8001092 <__swbuf_r+0x6e>
 8001088:	89a3      	ldrh	r3, [r4, #12]
 800108a:	07db      	lsls	r3, r3, #31
 800108c:	d5e1      	bpl.n	8001052 <__swbuf_r+0x2e>
 800108e:	2e0a      	cmp	r6, #10
 8001090:	d1df      	bne.n	8001052 <__swbuf_r+0x2e>
 8001092:	4621      	mov	r1, r4
 8001094:	4628      	mov	r0, r5
 8001096:	f7ff ff9d 	bl	8000fd4 <_fflush_r>
 800109a:	2800      	cmp	r0, #0
 800109c:	d0d9      	beq.n	8001052 <__swbuf_r+0x2e>
 800109e:	e7d6      	b.n	800104e <__swbuf_r+0x2a>

080010a0 <__swsetup_r>:
 80010a0:	b538      	push	{r3, r4, r5, lr}
 80010a2:	4b29      	ldr	r3, [pc, #164]	@ (8001148 <__swsetup_r+0xa8>)
 80010a4:	4605      	mov	r5, r0
 80010a6:	6818      	ldr	r0, [r3, #0]
 80010a8:	460c      	mov	r4, r1
 80010aa:	b118      	cbz	r0, 80010b4 <__swsetup_r+0x14>
 80010ac:	6a03      	ldr	r3, [r0, #32]
 80010ae:	b90b      	cbnz	r3, 80010b4 <__swsetup_r+0x14>
 80010b0:	f7ff fa44 	bl	800053c <__sinit>
 80010b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b8:	0719      	lsls	r1, r3, #28
 80010ba:	d422      	bmi.n	8001102 <__swsetup_r+0x62>
 80010bc:	06da      	lsls	r2, r3, #27
 80010be:	d407      	bmi.n	80010d0 <__swsetup_r+0x30>
 80010c0:	2209      	movs	r2, #9
 80010c2:	602a      	str	r2, [r5, #0]
 80010c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010c8:	81a3      	strh	r3, [r4, #12]
 80010ca:	f04f 30ff 	mov.w	r0, #4294967295
 80010ce:	e033      	b.n	8001138 <__swsetup_r+0x98>
 80010d0:	0758      	lsls	r0, r3, #29
 80010d2:	d512      	bpl.n	80010fa <__swsetup_r+0x5a>
 80010d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010d6:	b141      	cbz	r1, 80010ea <__swsetup_r+0x4a>
 80010d8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010dc:	4299      	cmp	r1, r3
 80010de:	d002      	beq.n	80010e6 <__swsetup_r+0x46>
 80010e0:	4628      	mov	r0, r5
 80010e2:	f7ff fb33 	bl	800074c <_free_r>
 80010e6:	2300      	movs	r3, #0
 80010e8:	6363      	str	r3, [r4, #52]	@ 0x34
 80010ea:	89a3      	ldrh	r3, [r4, #12]
 80010ec:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80010f0:	81a3      	strh	r3, [r4, #12]
 80010f2:	2300      	movs	r3, #0
 80010f4:	6063      	str	r3, [r4, #4]
 80010f6:	6923      	ldr	r3, [r4, #16]
 80010f8:	6023      	str	r3, [r4, #0]
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	f043 0308 	orr.w	r3, r3, #8
 8001100:	81a3      	strh	r3, [r4, #12]
 8001102:	6923      	ldr	r3, [r4, #16]
 8001104:	b94b      	cbnz	r3, 800111a <__swsetup_r+0x7a>
 8001106:	89a3      	ldrh	r3, [r4, #12]
 8001108:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800110c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001110:	d003      	beq.n	800111a <__swsetup_r+0x7a>
 8001112:	4621      	mov	r1, r4
 8001114:	4628      	mov	r0, r5
 8001116:	f000 f84f 	bl	80011b8 <__smakebuf_r>
 800111a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800111e:	f013 0201 	ands.w	r2, r3, #1
 8001122:	d00a      	beq.n	800113a <__swsetup_r+0x9a>
 8001124:	2200      	movs	r2, #0
 8001126:	60a2      	str	r2, [r4, #8]
 8001128:	6962      	ldr	r2, [r4, #20]
 800112a:	4252      	negs	r2, r2
 800112c:	61a2      	str	r2, [r4, #24]
 800112e:	6922      	ldr	r2, [r4, #16]
 8001130:	b942      	cbnz	r2, 8001144 <__swsetup_r+0xa4>
 8001132:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001136:	d1c5      	bne.n	80010c4 <__swsetup_r+0x24>
 8001138:	bd38      	pop	{r3, r4, r5, pc}
 800113a:	0799      	lsls	r1, r3, #30
 800113c:	bf58      	it	pl
 800113e:	6962      	ldrpl	r2, [r4, #20]
 8001140:	60a2      	str	r2, [r4, #8]
 8001142:	e7f4      	b.n	800112e <__swsetup_r+0x8e>
 8001144:	2000      	movs	r0, #0
 8001146:	e7f7      	b.n	8001138 <__swsetup_r+0x98>
 8001148:	2000000c 	.word	0x2000000c

0800114c <_sbrk_r>:
 800114c:	b538      	push	{r3, r4, r5, lr}
 800114e:	4d06      	ldr	r5, [pc, #24]	@ (8001168 <_sbrk_r+0x1c>)
 8001150:	2300      	movs	r3, #0
 8001152:	4604      	mov	r4, r0
 8001154:	4608      	mov	r0, r1
 8001156:	602b      	str	r3, [r5, #0]
 8001158:	f7ff f916 	bl	8000388 <_sbrk>
 800115c:	1c43      	adds	r3, r0, #1
 800115e:	d102      	bne.n	8001166 <_sbrk_r+0x1a>
 8001160:	682b      	ldr	r3, [r5, #0]
 8001162:	b103      	cbz	r3, 8001166 <_sbrk_r+0x1a>
 8001164:	6023      	str	r3, [r4, #0]
 8001166:	bd38      	pop	{r3, r4, r5, pc}
 8001168:	200001b8 	.word	0x200001b8

0800116c <__swhatbuf_r>:
 800116c:	b570      	push	{r4, r5, r6, lr}
 800116e:	460c      	mov	r4, r1
 8001170:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001174:	2900      	cmp	r1, #0
 8001176:	b096      	sub	sp, #88	@ 0x58
 8001178:	4615      	mov	r5, r2
 800117a:	461e      	mov	r6, r3
 800117c:	da0d      	bge.n	800119a <__swhatbuf_r+0x2e>
 800117e:	89a3      	ldrh	r3, [r4, #12]
 8001180:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001184:	f04f 0100 	mov.w	r1, #0
 8001188:	bf14      	ite	ne
 800118a:	2340      	movne	r3, #64	@ 0x40
 800118c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001190:	2000      	movs	r0, #0
 8001192:	6031      	str	r1, [r6, #0]
 8001194:	602b      	str	r3, [r5, #0]
 8001196:	b016      	add	sp, #88	@ 0x58
 8001198:	bd70      	pop	{r4, r5, r6, pc}
 800119a:	466a      	mov	r2, sp
 800119c:	f000 f848 	bl	8001230 <_fstat_r>
 80011a0:	2800      	cmp	r0, #0
 80011a2:	dbec      	blt.n	800117e <__swhatbuf_r+0x12>
 80011a4:	9901      	ldr	r1, [sp, #4]
 80011a6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80011aa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80011ae:	4259      	negs	r1, r3
 80011b0:	4159      	adcs	r1, r3
 80011b2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011b6:	e7eb      	b.n	8001190 <__swhatbuf_r+0x24>

080011b8 <__smakebuf_r>:
 80011b8:	898b      	ldrh	r3, [r1, #12]
 80011ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011bc:	079d      	lsls	r5, r3, #30
 80011be:	4606      	mov	r6, r0
 80011c0:	460c      	mov	r4, r1
 80011c2:	d507      	bpl.n	80011d4 <__smakebuf_r+0x1c>
 80011c4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80011c8:	6023      	str	r3, [r4, #0]
 80011ca:	6123      	str	r3, [r4, #16]
 80011cc:	2301      	movs	r3, #1
 80011ce:	6163      	str	r3, [r4, #20]
 80011d0:	b003      	add	sp, #12
 80011d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011d4:	ab01      	add	r3, sp, #4
 80011d6:	466a      	mov	r2, sp
 80011d8:	f7ff ffc8 	bl	800116c <__swhatbuf_r>
 80011dc:	9f00      	ldr	r7, [sp, #0]
 80011de:	4605      	mov	r5, r0
 80011e0:	4639      	mov	r1, r7
 80011e2:	4630      	mov	r0, r6
 80011e4:	f7ff fb1e 	bl	8000824 <_malloc_r>
 80011e8:	b948      	cbnz	r0, 80011fe <__smakebuf_r+0x46>
 80011ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011ee:	059a      	lsls	r2, r3, #22
 80011f0:	d4ee      	bmi.n	80011d0 <__smakebuf_r+0x18>
 80011f2:	f023 0303 	bic.w	r3, r3, #3
 80011f6:	f043 0302 	orr.w	r3, r3, #2
 80011fa:	81a3      	strh	r3, [r4, #12]
 80011fc:	e7e2      	b.n	80011c4 <__smakebuf_r+0xc>
 80011fe:	89a3      	ldrh	r3, [r4, #12]
 8001200:	6020      	str	r0, [r4, #0]
 8001202:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001206:	81a3      	strh	r3, [r4, #12]
 8001208:	9b01      	ldr	r3, [sp, #4]
 800120a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800120e:	b15b      	cbz	r3, 8001228 <__smakebuf_r+0x70>
 8001210:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001214:	4630      	mov	r0, r6
 8001216:	f000 f81d 	bl	8001254 <_isatty_r>
 800121a:	b128      	cbz	r0, 8001228 <__smakebuf_r+0x70>
 800121c:	89a3      	ldrh	r3, [r4, #12]
 800121e:	f023 0303 	bic.w	r3, r3, #3
 8001222:	f043 0301 	orr.w	r3, r3, #1
 8001226:	81a3      	strh	r3, [r4, #12]
 8001228:	89a3      	ldrh	r3, [r4, #12]
 800122a:	431d      	orrs	r5, r3
 800122c:	81a5      	strh	r5, [r4, #12]
 800122e:	e7cf      	b.n	80011d0 <__smakebuf_r+0x18>

08001230 <_fstat_r>:
 8001230:	b538      	push	{r3, r4, r5, lr}
 8001232:	4d07      	ldr	r5, [pc, #28]	@ (8001250 <_fstat_r+0x20>)
 8001234:	2300      	movs	r3, #0
 8001236:	4604      	mov	r4, r0
 8001238:	4608      	mov	r0, r1
 800123a:	4611      	mov	r1, r2
 800123c:	602b      	str	r3, [r5, #0]
 800123e:	f7ff f89a 	bl	8000376 <_fstat>
 8001242:	1c43      	adds	r3, r0, #1
 8001244:	d102      	bne.n	800124c <_fstat_r+0x1c>
 8001246:	682b      	ldr	r3, [r5, #0]
 8001248:	b103      	cbz	r3, 800124c <_fstat_r+0x1c>
 800124a:	6023      	str	r3, [r4, #0]
 800124c:	bd38      	pop	{r3, r4, r5, pc}
 800124e:	bf00      	nop
 8001250:	200001b8 	.word	0x200001b8

08001254 <_isatty_r>:
 8001254:	b538      	push	{r3, r4, r5, lr}
 8001256:	4d06      	ldr	r5, [pc, #24]	@ (8001270 <_isatty_r+0x1c>)
 8001258:	2300      	movs	r3, #0
 800125a:	4604      	mov	r4, r0
 800125c:	4608      	mov	r0, r1
 800125e:	602b      	str	r3, [r5, #0]
 8001260:	f7ff f88e 	bl	8000380 <_isatty>
 8001264:	1c43      	adds	r3, r0, #1
 8001266:	d102      	bne.n	800126e <_isatty_r+0x1a>
 8001268:	682b      	ldr	r3, [r5, #0]
 800126a:	b103      	cbz	r3, 800126e <_isatty_r+0x1a>
 800126c:	6023      	str	r3, [r4, #0]
 800126e:	bd38      	pop	{r3, r4, r5, pc}
 8001270:	200001b8 	.word	0x200001b8

08001274 <_init>:
 8001274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001276:	bf00      	nop
 8001278:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800127a:	bc08      	pop	{r3}
 800127c:	469e      	mov	lr, r3
 800127e:	4770      	bx	lr

08001280 <_fini>:
 8001280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001282:	bf00      	nop
 8001284:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001286:	bc08      	pop	{r3}
 8001288:	469e      	mov	lr, r3
 800128a:	4770      	bx	lr
