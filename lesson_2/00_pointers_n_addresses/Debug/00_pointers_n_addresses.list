
00_pointers_n_addresses.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000116c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  0800130c  0800130c  0000230c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001368  08001368  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001368  08001368  00002368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001370  08001370  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001370  08001370  00002370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001374  08001374  00002374  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001378  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080013d4  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080013d4  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a3c  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003e3  00000000  00000000  00003ac2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003ea8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d1  00000000  00000000  00003fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d93  00000000  00000000  000040b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001887  00000000  00000000  00006e44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000098df  00000000  00000000  000086cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011faa  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b40  00000000  00000000  00011ff0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  00012b30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080012f4 	.word	0x080012f4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080012f4 	.word	0x080012f4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
/* ITM Trace Enable Register */
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
    // Enable TRCENA (Trace Enable)
    DEMCR |= (1 << 24);
 800028a:	4b0e      	ldr	r3, [pc, #56]	@ (80002c4 <ITM_SendChar+0x44>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	4a0d      	ldr	r2, [pc, #52]	@ (80002c4 <ITM_SendChar+0x44>)
 8000290:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000294:	6013      	str	r3, [r2, #0]

    // Enable stimulus port 0
    ITM_TRACE_EN |= (1 << 0);
 8000296:	4b0c      	ldr	r3, [pc, #48]	@ (80002c8 <ITM_SendChar+0x48>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	4a0b      	ldr	r2, [pc, #44]	@ (80002c8 <ITM_SendChar+0x48>)
 800029c:	f043 0301 	orr.w	r3, r3, #1
 80002a0:	6013      	str	r3, [r2, #0]

    // Wait until FIFO is ready in bit [0]
    while (!(ITM_STIMULUS_PORT0 & 1));
 80002a2:	bf00      	nop
 80002a4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	f003 0301 	and.w	r3, r3, #1
 80002ae:	2b00      	cmp	r3, #0
 80002b0:	d0f8      	beq.n	80002a4 <ITM_SendChar+0x24>

    // Write to ITM stimulus port 0
    ITM_STIMULUS_PORT0 = ch;
 80002b2:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002b6:	79fb      	ldrb	r3, [r7, #7]
 80002b8:	6013      	str	r3, [r2, #0]
}
 80002ba:	bf00      	nop
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	bc80      	pop	{r7}
 80002c2:	4770      	bx	lr
 80002c4:	e000edfc 	.word	0xe000edfc
 80002c8:	e0000e00 	.word	0xe0000e00

080002cc <_write>:

int _write(int file, char *ptr, int len)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b086      	sub	sp, #24
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	60f8      	str	r0, [r7, #12]
 80002d4:	60b9      	str	r1, [r7, #8]
 80002d6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d8:	2300      	movs	r3, #0
 80002da:	617b      	str	r3, [r7, #20]
 80002dc:	e009      	b.n	80002f2 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 80002de:	68bb      	ldr	r3, [r7, #8]
 80002e0:	1c5a      	adds	r2, r3, #1
 80002e2:	60ba      	str	r2, [r7, #8]
 80002e4:	781b      	ldrb	r3, [r3, #0]
 80002e6:	4618      	mov	r0, r3
 80002e8:	f7ff ffca 	bl	8000280 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ec:	697b      	ldr	r3, [r7, #20]
 80002ee:	3301      	adds	r3, #1
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	697a      	ldr	r2, [r7, #20]
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	429a      	cmp	r2, r3
 80002f8:	dbf1      	blt.n	80002de <_write+0x12>
  }
  return len;
 80002fa:	687b      	ldr	r3, [r7, #4]
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	3718      	adds	r7, #24
 8000300:	46bd      	mov	sp, r7
 8000302:	bd80      	pop	{r7, pc}

08000304 <main>:

#include <stdint.h>
#include <stdio.h>

int main(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b084      	sub	sp, #16
 8000308:	af02      	add	r7, sp, #8
	int value = 42;
 800030a:	232a      	movs	r3, #42	@ 0x2a
 800030c:	603b      	str	r3, [r7, #0]
	int *ptr = &value;
 800030e:	463b      	mov	r3, r7
 8000310:	607b      	str	r3, [r7, #4]
	printf("value %d ,&value 0x%x,\t*ptr %d ptr 0x%x\n", value, &value, *ptr, ptr);
 8000312:	6839      	ldr	r1, [r7, #0]
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	6818      	ldr	r0, [r3, #0]
 8000318:	463a      	mov	r2, r7
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	9300      	str	r3, [sp, #0]
 800031e:	4603      	mov	r3, r0
 8000320:	4808      	ldr	r0, [pc, #32]	@ (8000344 <main+0x40>)
 8000322:	f000 f981 	bl	8000628 <iprintf>
	*ptr = 100;    // Changes value to 100 through the pointer
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	2264      	movs	r2, #100	@ 0x64
 800032a:	601a      	str	r2, [r3, #0]
	printf("value %d ,&value 0x%x,\t*ptr %d ptr 0x%x\n", value, &value, *ptr, ptr); // Prints 100
 800032c:	6839      	ldr	r1, [r7, #0]
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	6818      	ldr	r0, [r3, #0]
 8000332:	463a      	mov	r2, r7
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	9300      	str	r3, [sp, #0]
 8000338:	4603      	mov	r3, r0
 800033a:	4802      	ldr	r0, [pc, #8]	@ (8000344 <main+0x40>)
 800033c:	f000 f974 	bl	8000628 <iprintf>
	for(;;);
 8000340:	bf00      	nop
 8000342:	e7fd      	b.n	8000340 <main+0x3c>
 8000344:	0800130c 	.word	0x0800130c

08000348 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000348:	b580      	push	{r7, lr}
 800034a:	b086      	sub	sp, #24
 800034c:	af00      	add	r7, sp, #0
 800034e:	60f8      	str	r0, [r7, #12]
 8000350:	60b9      	str	r1, [r7, #8]
 8000352:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000354:	2300      	movs	r3, #0
 8000356:	617b      	str	r3, [r7, #20]
 8000358:	e00a      	b.n	8000370 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800035a:	f3af 8000 	nop.w
 800035e:	4601      	mov	r1, r0
 8000360:	68bb      	ldr	r3, [r7, #8]
 8000362:	1c5a      	adds	r2, r3, #1
 8000364:	60ba      	str	r2, [r7, #8]
 8000366:	b2ca      	uxtb	r2, r1
 8000368:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	697b      	ldr	r3, [r7, #20]
 800036c:	3301      	adds	r3, #1
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	697a      	ldr	r2, [r7, #20]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	429a      	cmp	r2, r3
 8000376:	dbf0      	blt.n	800035a <_read+0x12>
  }

  return len;
 8000378:	687b      	ldr	r3, [r7, #4]
}
 800037a:	4618      	mov	r0, r3
 800037c:	3718      	adds	r7, #24
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}

08000382 <_close>:
  }
  return len;
}

int _close(int file)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800038a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800038e:	4618      	mov	r0, r3
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	bc80      	pop	{r7}
 8000396:	4770      	bx	lr

08000398 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
 80003a0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003a2:	683b      	ldr	r3, [r7, #0]
 80003a4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003a8:	605a      	str	r2, [r3, #4]
  return 0;
 80003aa:	2300      	movs	r3, #0
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	bc80      	pop	{r7}
 80003b4:	4770      	bx	lr

080003b6 <_isatty>:

int _isatty(int file)
{
 80003b6:	b480      	push	{r7}
 80003b8:	b083      	sub	sp, #12
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003be:	2301      	movs	r3, #1
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr

080003ca <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b085      	sub	sp, #20
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	60f8      	str	r0, [r7, #12]
 80003d2:	60b9      	str	r1, [r7, #8]
 80003d4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003d6:	2300      	movs	r3, #0
}
 80003d8:	4618      	mov	r0, r3
 80003da:	3714      	adds	r7, #20
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
	...

080003e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003ec:	4a14      	ldr	r2, [pc, #80]	@ (8000440 <_sbrk+0x5c>)
 80003ee:	4b15      	ldr	r3, [pc, #84]	@ (8000444 <_sbrk+0x60>)
 80003f0:	1ad3      	subs	r3, r2, r3
 80003f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f4:	697b      	ldr	r3, [r7, #20]
 80003f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f8:	4b13      	ldr	r3, [pc, #76]	@ (8000448 <_sbrk+0x64>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d102      	bne.n	8000406 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000400:	4b11      	ldr	r3, [pc, #68]	@ (8000448 <_sbrk+0x64>)
 8000402:	4a12      	ldr	r2, [pc, #72]	@ (800044c <_sbrk+0x68>)
 8000404:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000406:	4b10      	ldr	r3, [pc, #64]	@ (8000448 <_sbrk+0x64>)
 8000408:	681a      	ldr	r2, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	693a      	ldr	r2, [r7, #16]
 8000410:	429a      	cmp	r2, r3
 8000412:	d207      	bcs.n	8000424 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000414:	f000 f9ac 	bl	8000770 <__errno>
 8000418:	4603      	mov	r3, r0
 800041a:	220c      	movs	r2, #12
 800041c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800041e:	f04f 33ff 	mov.w	r3, #4294967295
 8000422:	e009      	b.n	8000438 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000424:	4b08      	ldr	r3, [pc, #32]	@ (8000448 <_sbrk+0x64>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800042a:	4b07      	ldr	r3, [pc, #28]	@ (8000448 <_sbrk+0x64>)
 800042c:	681a      	ldr	r2, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	4a05      	ldr	r2, [pc, #20]	@ (8000448 <_sbrk+0x64>)
 8000434:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000436:	68fb      	ldr	r3, [r7, #12]
}
 8000438:	4618      	mov	r0, r3
 800043a:	3718      	adds	r7, #24
 800043c:	46bd      	mov	sp, r7
 800043e:	bd80      	pop	{r7, pc}
 8000440:	20020000 	.word	0x20020000
 8000444:	00000400 	.word	0x00000400
 8000448:	20000078 	.word	0x20000078
 800044c:	200001c8 	.word	0x200001c8

08000450 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000450:	480d      	ldr	r0, [pc, #52]	@ (8000488 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000452:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000454:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000458:	480c      	ldr	r0, [pc, #48]	@ (800048c <LoopForever+0x6>)
  ldr r1, =_edata
 800045a:	490d      	ldr	r1, [pc, #52]	@ (8000490 <LoopForever+0xa>)
  ldr r2, =_sidata
 800045c:	4a0d      	ldr	r2, [pc, #52]	@ (8000494 <LoopForever+0xe>)
  movs r3, #0
 800045e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000460:	e002      	b.n	8000468 <LoopCopyDataInit>

08000462 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000462:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000464:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000466:	3304      	adds	r3, #4

08000468 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000468:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800046a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800046c:	d3f9      	bcc.n	8000462 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800046e:	4a0a      	ldr	r2, [pc, #40]	@ (8000498 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000470:	4c0a      	ldr	r4, [pc, #40]	@ (800049c <LoopForever+0x16>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000474:	e001      	b.n	800047a <LoopFillZerobss>

08000476 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000476:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000478:	3204      	adds	r2, #4

0800047a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800047a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800047c:	d3fb      	bcc.n	8000476 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800047e:	f000 f97d 	bl	800077c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000482:	f7ff ff3f 	bl	8000304 <main>

08000486 <LoopForever>:

LoopForever:
  b LoopForever
 8000486:	e7fe      	b.n	8000486 <LoopForever>
  ldr   r0, =_estack
 8000488:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800048c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000490:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000494:	08001378 	.word	0x08001378
  ldr r2, =_sbss
 8000498:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800049c:	200001c8 	.word	0x200001c8

080004a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a0:	e7fe      	b.n	80004a0 <ADC_IRQHandler>
	...

080004a4 <std>:
 80004a4:	2300      	movs	r3, #0
 80004a6:	b510      	push	{r4, lr}
 80004a8:	4604      	mov	r4, r0
 80004aa:	e9c0 3300 	strd	r3, r3, [r0]
 80004ae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004b2:	6083      	str	r3, [r0, #8]
 80004b4:	8181      	strh	r1, [r0, #12]
 80004b6:	6643      	str	r3, [r0, #100]	@ 0x64
 80004b8:	81c2      	strh	r2, [r0, #14]
 80004ba:	6183      	str	r3, [r0, #24]
 80004bc:	4619      	mov	r1, r3
 80004be:	2208      	movs	r2, #8
 80004c0:	305c      	adds	r0, #92	@ 0x5c
 80004c2:	f000 f906 	bl	80006d2 <memset>
 80004c6:	4b0d      	ldr	r3, [pc, #52]	@ (80004fc <std+0x58>)
 80004c8:	6263      	str	r3, [r4, #36]	@ 0x24
 80004ca:	4b0d      	ldr	r3, [pc, #52]	@ (8000500 <std+0x5c>)
 80004cc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000504 <std+0x60>)
 80004d0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004d2:	4b0d      	ldr	r3, [pc, #52]	@ (8000508 <std+0x64>)
 80004d4:	6323      	str	r3, [r4, #48]	@ 0x30
 80004d6:	4b0d      	ldr	r3, [pc, #52]	@ (800050c <std+0x68>)
 80004d8:	6224      	str	r4, [r4, #32]
 80004da:	429c      	cmp	r4, r3
 80004dc:	d006      	beq.n	80004ec <std+0x48>
 80004de:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004e2:	4294      	cmp	r4, r2
 80004e4:	d002      	beq.n	80004ec <std+0x48>
 80004e6:	33d0      	adds	r3, #208	@ 0xd0
 80004e8:	429c      	cmp	r4, r3
 80004ea:	d105      	bne.n	80004f8 <std+0x54>
 80004ec:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f4:	f000 b966 	b.w	80007c4 <__retarget_lock_init_recursive>
 80004f8:	bd10      	pop	{r4, pc}
 80004fa:	bf00      	nop
 80004fc:	0800064d 	.word	0x0800064d
 8000500:	0800066f 	.word	0x0800066f
 8000504:	080006a7 	.word	0x080006a7
 8000508:	080006cb 	.word	0x080006cb
 800050c:	2000007c 	.word	0x2000007c

08000510 <stdio_exit_handler>:
 8000510:	4a02      	ldr	r2, [pc, #8]	@ (800051c <stdio_exit_handler+0xc>)
 8000512:	4903      	ldr	r1, [pc, #12]	@ (8000520 <stdio_exit_handler+0x10>)
 8000514:	4803      	ldr	r0, [pc, #12]	@ (8000524 <stdio_exit_handler+0x14>)
 8000516:	f000 b869 	b.w	80005ec <_fwalk_sglue>
 800051a:	bf00      	nop
 800051c:	20000000 	.word	0x20000000
 8000520:	08001055 	.word	0x08001055
 8000524:	20000010 	.word	0x20000010

08000528 <cleanup_stdio>:
 8000528:	6841      	ldr	r1, [r0, #4]
 800052a:	4b0c      	ldr	r3, [pc, #48]	@ (800055c <cleanup_stdio+0x34>)
 800052c:	4299      	cmp	r1, r3
 800052e:	b510      	push	{r4, lr}
 8000530:	4604      	mov	r4, r0
 8000532:	d001      	beq.n	8000538 <cleanup_stdio+0x10>
 8000534:	f000 fd8e 	bl	8001054 <_fflush_r>
 8000538:	68a1      	ldr	r1, [r4, #8]
 800053a:	4b09      	ldr	r3, [pc, #36]	@ (8000560 <cleanup_stdio+0x38>)
 800053c:	4299      	cmp	r1, r3
 800053e:	d002      	beq.n	8000546 <cleanup_stdio+0x1e>
 8000540:	4620      	mov	r0, r4
 8000542:	f000 fd87 	bl	8001054 <_fflush_r>
 8000546:	68e1      	ldr	r1, [r4, #12]
 8000548:	4b06      	ldr	r3, [pc, #24]	@ (8000564 <cleanup_stdio+0x3c>)
 800054a:	4299      	cmp	r1, r3
 800054c:	d004      	beq.n	8000558 <cleanup_stdio+0x30>
 800054e:	4620      	mov	r0, r4
 8000550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000554:	f000 bd7e 	b.w	8001054 <_fflush_r>
 8000558:	bd10      	pop	{r4, pc}
 800055a:	bf00      	nop
 800055c:	2000007c 	.word	0x2000007c
 8000560:	200000e4 	.word	0x200000e4
 8000564:	2000014c 	.word	0x2000014c

08000568 <global_stdio_init.part.0>:
 8000568:	b510      	push	{r4, lr}
 800056a:	4b0b      	ldr	r3, [pc, #44]	@ (8000598 <global_stdio_init.part.0+0x30>)
 800056c:	4c0b      	ldr	r4, [pc, #44]	@ (800059c <global_stdio_init.part.0+0x34>)
 800056e:	4a0c      	ldr	r2, [pc, #48]	@ (80005a0 <global_stdio_init.part.0+0x38>)
 8000570:	601a      	str	r2, [r3, #0]
 8000572:	4620      	mov	r0, r4
 8000574:	2200      	movs	r2, #0
 8000576:	2104      	movs	r1, #4
 8000578:	f7ff ff94 	bl	80004a4 <std>
 800057c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000580:	2201      	movs	r2, #1
 8000582:	2109      	movs	r1, #9
 8000584:	f7ff ff8e 	bl	80004a4 <std>
 8000588:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800058c:	2202      	movs	r2, #2
 800058e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000592:	2112      	movs	r1, #18
 8000594:	f7ff bf86 	b.w	80004a4 <std>
 8000598:	200001b4 	.word	0x200001b4
 800059c:	2000007c 	.word	0x2000007c
 80005a0:	08000511 	.word	0x08000511

080005a4 <__sfp_lock_acquire>:
 80005a4:	4801      	ldr	r0, [pc, #4]	@ (80005ac <__sfp_lock_acquire+0x8>)
 80005a6:	f000 b90e 	b.w	80007c6 <__retarget_lock_acquire_recursive>
 80005aa:	bf00      	nop
 80005ac:	200001bd 	.word	0x200001bd

080005b0 <__sfp_lock_release>:
 80005b0:	4801      	ldr	r0, [pc, #4]	@ (80005b8 <__sfp_lock_release+0x8>)
 80005b2:	f000 b909 	b.w	80007c8 <__retarget_lock_release_recursive>
 80005b6:	bf00      	nop
 80005b8:	200001bd 	.word	0x200001bd

080005bc <__sinit>:
 80005bc:	b510      	push	{r4, lr}
 80005be:	4604      	mov	r4, r0
 80005c0:	f7ff fff0 	bl	80005a4 <__sfp_lock_acquire>
 80005c4:	6a23      	ldr	r3, [r4, #32]
 80005c6:	b11b      	cbz	r3, 80005d0 <__sinit+0x14>
 80005c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005cc:	f7ff bff0 	b.w	80005b0 <__sfp_lock_release>
 80005d0:	4b04      	ldr	r3, [pc, #16]	@ (80005e4 <__sinit+0x28>)
 80005d2:	6223      	str	r3, [r4, #32]
 80005d4:	4b04      	ldr	r3, [pc, #16]	@ (80005e8 <__sinit+0x2c>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	2b00      	cmp	r3, #0
 80005da:	d1f5      	bne.n	80005c8 <__sinit+0xc>
 80005dc:	f7ff ffc4 	bl	8000568 <global_stdio_init.part.0>
 80005e0:	e7f2      	b.n	80005c8 <__sinit+0xc>
 80005e2:	bf00      	nop
 80005e4:	08000529 	.word	0x08000529
 80005e8:	200001b4 	.word	0x200001b4

080005ec <_fwalk_sglue>:
 80005ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005f0:	4607      	mov	r7, r0
 80005f2:	4688      	mov	r8, r1
 80005f4:	4614      	mov	r4, r2
 80005f6:	2600      	movs	r6, #0
 80005f8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005fc:	f1b9 0901 	subs.w	r9, r9, #1
 8000600:	d505      	bpl.n	800060e <_fwalk_sglue+0x22>
 8000602:	6824      	ldr	r4, [r4, #0]
 8000604:	2c00      	cmp	r4, #0
 8000606:	d1f7      	bne.n	80005f8 <_fwalk_sglue+0xc>
 8000608:	4630      	mov	r0, r6
 800060a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800060e:	89ab      	ldrh	r3, [r5, #12]
 8000610:	2b01      	cmp	r3, #1
 8000612:	d907      	bls.n	8000624 <_fwalk_sglue+0x38>
 8000614:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000618:	3301      	adds	r3, #1
 800061a:	d003      	beq.n	8000624 <_fwalk_sglue+0x38>
 800061c:	4629      	mov	r1, r5
 800061e:	4638      	mov	r0, r7
 8000620:	47c0      	blx	r8
 8000622:	4306      	orrs	r6, r0
 8000624:	3568      	adds	r5, #104	@ 0x68
 8000626:	e7e9      	b.n	80005fc <_fwalk_sglue+0x10>

08000628 <iprintf>:
 8000628:	b40f      	push	{r0, r1, r2, r3}
 800062a:	b507      	push	{r0, r1, r2, lr}
 800062c:	4906      	ldr	r1, [pc, #24]	@ (8000648 <iprintf+0x20>)
 800062e:	ab04      	add	r3, sp, #16
 8000630:	6808      	ldr	r0, [r1, #0]
 8000632:	f853 2b04 	ldr.w	r2, [r3], #4
 8000636:	6881      	ldr	r1, [r0, #8]
 8000638:	9301      	str	r3, [sp, #4]
 800063a:	f000 f9e7 	bl	8000a0c <_vfiprintf_r>
 800063e:	b003      	add	sp, #12
 8000640:	f85d eb04 	ldr.w	lr, [sp], #4
 8000644:	b004      	add	sp, #16
 8000646:	4770      	bx	lr
 8000648:	2000000c 	.word	0x2000000c

0800064c <__sread>:
 800064c:	b510      	push	{r4, lr}
 800064e:	460c      	mov	r4, r1
 8000650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000654:	f000 f868 	bl	8000728 <_read_r>
 8000658:	2800      	cmp	r0, #0
 800065a:	bfab      	itete	ge
 800065c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800065e:	89a3      	ldrhlt	r3, [r4, #12]
 8000660:	181b      	addge	r3, r3, r0
 8000662:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000666:	bfac      	ite	ge
 8000668:	6563      	strge	r3, [r4, #84]	@ 0x54
 800066a:	81a3      	strhlt	r3, [r4, #12]
 800066c:	bd10      	pop	{r4, pc}

0800066e <__swrite>:
 800066e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000672:	461f      	mov	r7, r3
 8000674:	898b      	ldrh	r3, [r1, #12]
 8000676:	05db      	lsls	r3, r3, #23
 8000678:	4605      	mov	r5, r0
 800067a:	460c      	mov	r4, r1
 800067c:	4616      	mov	r6, r2
 800067e:	d505      	bpl.n	800068c <__swrite+0x1e>
 8000680:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000684:	2302      	movs	r3, #2
 8000686:	2200      	movs	r2, #0
 8000688:	f000 f83c 	bl	8000704 <_lseek_r>
 800068c:	89a3      	ldrh	r3, [r4, #12]
 800068e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000692:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000696:	81a3      	strh	r3, [r4, #12]
 8000698:	4632      	mov	r2, r6
 800069a:	463b      	mov	r3, r7
 800069c:	4628      	mov	r0, r5
 800069e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006a2:	f000 b853 	b.w	800074c <_write_r>

080006a6 <__sseek>:
 80006a6:	b510      	push	{r4, lr}
 80006a8:	460c      	mov	r4, r1
 80006aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ae:	f000 f829 	bl	8000704 <_lseek_r>
 80006b2:	1c43      	adds	r3, r0, #1
 80006b4:	89a3      	ldrh	r3, [r4, #12]
 80006b6:	bf15      	itete	ne
 80006b8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80006ba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80006be:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80006c2:	81a3      	strheq	r3, [r4, #12]
 80006c4:	bf18      	it	ne
 80006c6:	81a3      	strhne	r3, [r4, #12]
 80006c8:	bd10      	pop	{r4, pc}

080006ca <__sclose>:
 80006ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ce:	f000 b809 	b.w	80006e4 <_close_r>

080006d2 <memset>:
 80006d2:	4402      	add	r2, r0
 80006d4:	4603      	mov	r3, r0
 80006d6:	4293      	cmp	r3, r2
 80006d8:	d100      	bne.n	80006dc <memset+0xa>
 80006da:	4770      	bx	lr
 80006dc:	f803 1b01 	strb.w	r1, [r3], #1
 80006e0:	e7f9      	b.n	80006d6 <memset+0x4>
	...

080006e4 <_close_r>:
 80006e4:	b538      	push	{r3, r4, r5, lr}
 80006e6:	4d06      	ldr	r5, [pc, #24]	@ (8000700 <_close_r+0x1c>)
 80006e8:	2300      	movs	r3, #0
 80006ea:	4604      	mov	r4, r0
 80006ec:	4608      	mov	r0, r1
 80006ee:	602b      	str	r3, [r5, #0]
 80006f0:	f7ff fe47 	bl	8000382 <_close>
 80006f4:	1c43      	adds	r3, r0, #1
 80006f6:	d102      	bne.n	80006fe <_close_r+0x1a>
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	b103      	cbz	r3, 80006fe <_close_r+0x1a>
 80006fc:	6023      	str	r3, [r4, #0]
 80006fe:	bd38      	pop	{r3, r4, r5, pc}
 8000700:	200001b8 	.word	0x200001b8

08000704 <_lseek_r>:
 8000704:	b538      	push	{r3, r4, r5, lr}
 8000706:	4d07      	ldr	r5, [pc, #28]	@ (8000724 <_lseek_r+0x20>)
 8000708:	4604      	mov	r4, r0
 800070a:	4608      	mov	r0, r1
 800070c:	4611      	mov	r1, r2
 800070e:	2200      	movs	r2, #0
 8000710:	602a      	str	r2, [r5, #0]
 8000712:	461a      	mov	r2, r3
 8000714:	f7ff fe59 	bl	80003ca <_lseek>
 8000718:	1c43      	adds	r3, r0, #1
 800071a:	d102      	bne.n	8000722 <_lseek_r+0x1e>
 800071c:	682b      	ldr	r3, [r5, #0]
 800071e:	b103      	cbz	r3, 8000722 <_lseek_r+0x1e>
 8000720:	6023      	str	r3, [r4, #0]
 8000722:	bd38      	pop	{r3, r4, r5, pc}
 8000724:	200001b8 	.word	0x200001b8

08000728 <_read_r>:
 8000728:	b538      	push	{r3, r4, r5, lr}
 800072a:	4d07      	ldr	r5, [pc, #28]	@ (8000748 <_read_r+0x20>)
 800072c:	4604      	mov	r4, r0
 800072e:	4608      	mov	r0, r1
 8000730:	4611      	mov	r1, r2
 8000732:	2200      	movs	r2, #0
 8000734:	602a      	str	r2, [r5, #0]
 8000736:	461a      	mov	r2, r3
 8000738:	f7ff fe06 	bl	8000348 <_read>
 800073c:	1c43      	adds	r3, r0, #1
 800073e:	d102      	bne.n	8000746 <_read_r+0x1e>
 8000740:	682b      	ldr	r3, [r5, #0]
 8000742:	b103      	cbz	r3, 8000746 <_read_r+0x1e>
 8000744:	6023      	str	r3, [r4, #0]
 8000746:	bd38      	pop	{r3, r4, r5, pc}
 8000748:	200001b8 	.word	0x200001b8

0800074c <_write_r>:
 800074c:	b538      	push	{r3, r4, r5, lr}
 800074e:	4d07      	ldr	r5, [pc, #28]	@ (800076c <_write_r+0x20>)
 8000750:	4604      	mov	r4, r0
 8000752:	4608      	mov	r0, r1
 8000754:	4611      	mov	r1, r2
 8000756:	2200      	movs	r2, #0
 8000758:	602a      	str	r2, [r5, #0]
 800075a:	461a      	mov	r2, r3
 800075c:	f7ff fdb6 	bl	80002cc <_write>
 8000760:	1c43      	adds	r3, r0, #1
 8000762:	d102      	bne.n	800076a <_write_r+0x1e>
 8000764:	682b      	ldr	r3, [r5, #0]
 8000766:	b103      	cbz	r3, 800076a <_write_r+0x1e>
 8000768:	6023      	str	r3, [r4, #0]
 800076a:	bd38      	pop	{r3, r4, r5, pc}
 800076c:	200001b8 	.word	0x200001b8

08000770 <__errno>:
 8000770:	4b01      	ldr	r3, [pc, #4]	@ (8000778 <__errno+0x8>)
 8000772:	6818      	ldr	r0, [r3, #0]
 8000774:	4770      	bx	lr
 8000776:	bf00      	nop
 8000778:	2000000c 	.word	0x2000000c

0800077c <__libc_init_array>:
 800077c:	b570      	push	{r4, r5, r6, lr}
 800077e:	4d0d      	ldr	r5, [pc, #52]	@ (80007b4 <__libc_init_array+0x38>)
 8000780:	4c0d      	ldr	r4, [pc, #52]	@ (80007b8 <__libc_init_array+0x3c>)
 8000782:	1b64      	subs	r4, r4, r5
 8000784:	10a4      	asrs	r4, r4, #2
 8000786:	2600      	movs	r6, #0
 8000788:	42a6      	cmp	r6, r4
 800078a:	d109      	bne.n	80007a0 <__libc_init_array+0x24>
 800078c:	4d0b      	ldr	r5, [pc, #44]	@ (80007bc <__libc_init_array+0x40>)
 800078e:	4c0c      	ldr	r4, [pc, #48]	@ (80007c0 <__libc_init_array+0x44>)
 8000790:	f000 fdb0 	bl	80012f4 <_init>
 8000794:	1b64      	subs	r4, r4, r5
 8000796:	10a4      	asrs	r4, r4, #2
 8000798:	2600      	movs	r6, #0
 800079a:	42a6      	cmp	r6, r4
 800079c:	d105      	bne.n	80007aa <__libc_init_array+0x2e>
 800079e:	bd70      	pop	{r4, r5, r6, pc}
 80007a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80007a4:	4798      	blx	r3
 80007a6:	3601      	adds	r6, #1
 80007a8:	e7ee      	b.n	8000788 <__libc_init_array+0xc>
 80007aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ae:	4798      	blx	r3
 80007b0:	3601      	adds	r6, #1
 80007b2:	e7f2      	b.n	800079a <__libc_init_array+0x1e>
 80007b4:	08001370 	.word	0x08001370
 80007b8:	08001370 	.word	0x08001370
 80007bc:	08001370 	.word	0x08001370
 80007c0:	08001374 	.word	0x08001374

080007c4 <__retarget_lock_init_recursive>:
 80007c4:	4770      	bx	lr

080007c6 <__retarget_lock_acquire_recursive>:
 80007c6:	4770      	bx	lr

080007c8 <__retarget_lock_release_recursive>:
 80007c8:	4770      	bx	lr
	...

080007cc <_free_r>:
 80007cc:	b538      	push	{r3, r4, r5, lr}
 80007ce:	4605      	mov	r5, r0
 80007d0:	2900      	cmp	r1, #0
 80007d2:	d041      	beq.n	8000858 <_free_r+0x8c>
 80007d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007d8:	1f0c      	subs	r4, r1, #4
 80007da:	2b00      	cmp	r3, #0
 80007dc:	bfb8      	it	lt
 80007de:	18e4      	addlt	r4, r4, r3
 80007e0:	f000 f8e0 	bl	80009a4 <__malloc_lock>
 80007e4:	4a1d      	ldr	r2, [pc, #116]	@ (800085c <_free_r+0x90>)
 80007e6:	6813      	ldr	r3, [r2, #0]
 80007e8:	b933      	cbnz	r3, 80007f8 <_free_r+0x2c>
 80007ea:	6063      	str	r3, [r4, #4]
 80007ec:	6014      	str	r4, [r2, #0]
 80007ee:	4628      	mov	r0, r5
 80007f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007f4:	f000 b8dc 	b.w	80009b0 <__malloc_unlock>
 80007f8:	42a3      	cmp	r3, r4
 80007fa:	d908      	bls.n	800080e <_free_r+0x42>
 80007fc:	6820      	ldr	r0, [r4, #0]
 80007fe:	1821      	adds	r1, r4, r0
 8000800:	428b      	cmp	r3, r1
 8000802:	bf01      	itttt	eq
 8000804:	6819      	ldreq	r1, [r3, #0]
 8000806:	685b      	ldreq	r3, [r3, #4]
 8000808:	1809      	addeq	r1, r1, r0
 800080a:	6021      	streq	r1, [r4, #0]
 800080c:	e7ed      	b.n	80007ea <_free_r+0x1e>
 800080e:	461a      	mov	r2, r3
 8000810:	685b      	ldr	r3, [r3, #4]
 8000812:	b10b      	cbz	r3, 8000818 <_free_r+0x4c>
 8000814:	42a3      	cmp	r3, r4
 8000816:	d9fa      	bls.n	800080e <_free_r+0x42>
 8000818:	6811      	ldr	r1, [r2, #0]
 800081a:	1850      	adds	r0, r2, r1
 800081c:	42a0      	cmp	r0, r4
 800081e:	d10b      	bne.n	8000838 <_free_r+0x6c>
 8000820:	6820      	ldr	r0, [r4, #0]
 8000822:	4401      	add	r1, r0
 8000824:	1850      	adds	r0, r2, r1
 8000826:	4283      	cmp	r3, r0
 8000828:	6011      	str	r1, [r2, #0]
 800082a:	d1e0      	bne.n	80007ee <_free_r+0x22>
 800082c:	6818      	ldr	r0, [r3, #0]
 800082e:	685b      	ldr	r3, [r3, #4]
 8000830:	6053      	str	r3, [r2, #4]
 8000832:	4408      	add	r0, r1
 8000834:	6010      	str	r0, [r2, #0]
 8000836:	e7da      	b.n	80007ee <_free_r+0x22>
 8000838:	d902      	bls.n	8000840 <_free_r+0x74>
 800083a:	230c      	movs	r3, #12
 800083c:	602b      	str	r3, [r5, #0]
 800083e:	e7d6      	b.n	80007ee <_free_r+0x22>
 8000840:	6820      	ldr	r0, [r4, #0]
 8000842:	1821      	adds	r1, r4, r0
 8000844:	428b      	cmp	r3, r1
 8000846:	bf04      	itt	eq
 8000848:	6819      	ldreq	r1, [r3, #0]
 800084a:	685b      	ldreq	r3, [r3, #4]
 800084c:	6063      	str	r3, [r4, #4]
 800084e:	bf04      	itt	eq
 8000850:	1809      	addeq	r1, r1, r0
 8000852:	6021      	streq	r1, [r4, #0]
 8000854:	6054      	str	r4, [r2, #4]
 8000856:	e7ca      	b.n	80007ee <_free_r+0x22>
 8000858:	bd38      	pop	{r3, r4, r5, pc}
 800085a:	bf00      	nop
 800085c:	200001c4 	.word	0x200001c4

08000860 <sbrk_aligned>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	4e0f      	ldr	r6, [pc, #60]	@ (80008a0 <sbrk_aligned+0x40>)
 8000864:	460c      	mov	r4, r1
 8000866:	6831      	ldr	r1, [r6, #0]
 8000868:	4605      	mov	r5, r0
 800086a:	b911      	cbnz	r1, 8000872 <sbrk_aligned+0x12>
 800086c:	f000 fcae 	bl	80011cc <_sbrk_r>
 8000870:	6030      	str	r0, [r6, #0]
 8000872:	4621      	mov	r1, r4
 8000874:	4628      	mov	r0, r5
 8000876:	f000 fca9 	bl	80011cc <_sbrk_r>
 800087a:	1c43      	adds	r3, r0, #1
 800087c:	d103      	bne.n	8000886 <sbrk_aligned+0x26>
 800087e:	f04f 34ff 	mov.w	r4, #4294967295
 8000882:	4620      	mov	r0, r4
 8000884:	bd70      	pop	{r4, r5, r6, pc}
 8000886:	1cc4      	adds	r4, r0, #3
 8000888:	f024 0403 	bic.w	r4, r4, #3
 800088c:	42a0      	cmp	r0, r4
 800088e:	d0f8      	beq.n	8000882 <sbrk_aligned+0x22>
 8000890:	1a21      	subs	r1, r4, r0
 8000892:	4628      	mov	r0, r5
 8000894:	f000 fc9a 	bl	80011cc <_sbrk_r>
 8000898:	3001      	adds	r0, #1
 800089a:	d1f2      	bne.n	8000882 <sbrk_aligned+0x22>
 800089c:	e7ef      	b.n	800087e <sbrk_aligned+0x1e>
 800089e:	bf00      	nop
 80008a0:	200001c0 	.word	0x200001c0

080008a4 <_malloc_r>:
 80008a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008a8:	1ccd      	adds	r5, r1, #3
 80008aa:	f025 0503 	bic.w	r5, r5, #3
 80008ae:	3508      	adds	r5, #8
 80008b0:	2d0c      	cmp	r5, #12
 80008b2:	bf38      	it	cc
 80008b4:	250c      	movcc	r5, #12
 80008b6:	2d00      	cmp	r5, #0
 80008b8:	4606      	mov	r6, r0
 80008ba:	db01      	blt.n	80008c0 <_malloc_r+0x1c>
 80008bc:	42a9      	cmp	r1, r5
 80008be:	d904      	bls.n	80008ca <_malloc_r+0x26>
 80008c0:	230c      	movs	r3, #12
 80008c2:	6033      	str	r3, [r6, #0]
 80008c4:	2000      	movs	r0, #0
 80008c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008ca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80009a0 <_malloc_r+0xfc>
 80008ce:	f000 f869 	bl	80009a4 <__malloc_lock>
 80008d2:	f8d8 3000 	ldr.w	r3, [r8]
 80008d6:	461c      	mov	r4, r3
 80008d8:	bb44      	cbnz	r4, 800092c <_malloc_r+0x88>
 80008da:	4629      	mov	r1, r5
 80008dc:	4630      	mov	r0, r6
 80008de:	f7ff ffbf 	bl	8000860 <sbrk_aligned>
 80008e2:	1c43      	adds	r3, r0, #1
 80008e4:	4604      	mov	r4, r0
 80008e6:	d158      	bne.n	800099a <_malloc_r+0xf6>
 80008e8:	f8d8 4000 	ldr.w	r4, [r8]
 80008ec:	4627      	mov	r7, r4
 80008ee:	2f00      	cmp	r7, #0
 80008f0:	d143      	bne.n	800097a <_malloc_r+0xd6>
 80008f2:	2c00      	cmp	r4, #0
 80008f4:	d04b      	beq.n	800098e <_malloc_r+0xea>
 80008f6:	6823      	ldr	r3, [r4, #0]
 80008f8:	4639      	mov	r1, r7
 80008fa:	4630      	mov	r0, r6
 80008fc:	eb04 0903 	add.w	r9, r4, r3
 8000900:	f000 fc64 	bl	80011cc <_sbrk_r>
 8000904:	4581      	cmp	r9, r0
 8000906:	d142      	bne.n	800098e <_malloc_r+0xea>
 8000908:	6821      	ldr	r1, [r4, #0]
 800090a:	1a6d      	subs	r5, r5, r1
 800090c:	4629      	mov	r1, r5
 800090e:	4630      	mov	r0, r6
 8000910:	f7ff ffa6 	bl	8000860 <sbrk_aligned>
 8000914:	3001      	adds	r0, #1
 8000916:	d03a      	beq.n	800098e <_malloc_r+0xea>
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	442b      	add	r3, r5
 800091c:	6023      	str	r3, [r4, #0]
 800091e:	f8d8 3000 	ldr.w	r3, [r8]
 8000922:	685a      	ldr	r2, [r3, #4]
 8000924:	bb62      	cbnz	r2, 8000980 <_malloc_r+0xdc>
 8000926:	f8c8 7000 	str.w	r7, [r8]
 800092a:	e00f      	b.n	800094c <_malloc_r+0xa8>
 800092c:	6822      	ldr	r2, [r4, #0]
 800092e:	1b52      	subs	r2, r2, r5
 8000930:	d420      	bmi.n	8000974 <_malloc_r+0xd0>
 8000932:	2a0b      	cmp	r2, #11
 8000934:	d917      	bls.n	8000966 <_malloc_r+0xc2>
 8000936:	1961      	adds	r1, r4, r5
 8000938:	42a3      	cmp	r3, r4
 800093a:	6025      	str	r5, [r4, #0]
 800093c:	bf18      	it	ne
 800093e:	6059      	strne	r1, [r3, #4]
 8000940:	6863      	ldr	r3, [r4, #4]
 8000942:	bf08      	it	eq
 8000944:	f8c8 1000 	streq.w	r1, [r8]
 8000948:	5162      	str	r2, [r4, r5]
 800094a:	604b      	str	r3, [r1, #4]
 800094c:	4630      	mov	r0, r6
 800094e:	f000 f82f 	bl	80009b0 <__malloc_unlock>
 8000952:	f104 000b 	add.w	r0, r4, #11
 8000956:	1d23      	adds	r3, r4, #4
 8000958:	f020 0007 	bic.w	r0, r0, #7
 800095c:	1ac2      	subs	r2, r0, r3
 800095e:	bf1c      	itt	ne
 8000960:	1a1b      	subne	r3, r3, r0
 8000962:	50a3      	strne	r3, [r4, r2]
 8000964:	e7af      	b.n	80008c6 <_malloc_r+0x22>
 8000966:	6862      	ldr	r2, [r4, #4]
 8000968:	42a3      	cmp	r3, r4
 800096a:	bf0c      	ite	eq
 800096c:	f8c8 2000 	streq.w	r2, [r8]
 8000970:	605a      	strne	r2, [r3, #4]
 8000972:	e7eb      	b.n	800094c <_malloc_r+0xa8>
 8000974:	4623      	mov	r3, r4
 8000976:	6864      	ldr	r4, [r4, #4]
 8000978:	e7ae      	b.n	80008d8 <_malloc_r+0x34>
 800097a:	463c      	mov	r4, r7
 800097c:	687f      	ldr	r7, [r7, #4]
 800097e:	e7b6      	b.n	80008ee <_malloc_r+0x4a>
 8000980:	461a      	mov	r2, r3
 8000982:	685b      	ldr	r3, [r3, #4]
 8000984:	42a3      	cmp	r3, r4
 8000986:	d1fb      	bne.n	8000980 <_malloc_r+0xdc>
 8000988:	2300      	movs	r3, #0
 800098a:	6053      	str	r3, [r2, #4]
 800098c:	e7de      	b.n	800094c <_malloc_r+0xa8>
 800098e:	230c      	movs	r3, #12
 8000990:	6033      	str	r3, [r6, #0]
 8000992:	4630      	mov	r0, r6
 8000994:	f000 f80c 	bl	80009b0 <__malloc_unlock>
 8000998:	e794      	b.n	80008c4 <_malloc_r+0x20>
 800099a:	6005      	str	r5, [r0, #0]
 800099c:	e7d6      	b.n	800094c <_malloc_r+0xa8>
 800099e:	bf00      	nop
 80009a0:	200001c4 	.word	0x200001c4

080009a4 <__malloc_lock>:
 80009a4:	4801      	ldr	r0, [pc, #4]	@ (80009ac <__malloc_lock+0x8>)
 80009a6:	f7ff bf0e 	b.w	80007c6 <__retarget_lock_acquire_recursive>
 80009aa:	bf00      	nop
 80009ac:	200001bc 	.word	0x200001bc

080009b0 <__malloc_unlock>:
 80009b0:	4801      	ldr	r0, [pc, #4]	@ (80009b8 <__malloc_unlock+0x8>)
 80009b2:	f7ff bf09 	b.w	80007c8 <__retarget_lock_release_recursive>
 80009b6:	bf00      	nop
 80009b8:	200001bc 	.word	0x200001bc

080009bc <__sfputc_r>:
 80009bc:	6893      	ldr	r3, [r2, #8]
 80009be:	3b01      	subs	r3, #1
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	b410      	push	{r4}
 80009c4:	6093      	str	r3, [r2, #8]
 80009c6:	da07      	bge.n	80009d8 <__sfputc_r+0x1c>
 80009c8:	6994      	ldr	r4, [r2, #24]
 80009ca:	42a3      	cmp	r3, r4
 80009cc:	db01      	blt.n	80009d2 <__sfputc_r+0x16>
 80009ce:	290a      	cmp	r1, #10
 80009d0:	d102      	bne.n	80009d8 <__sfputc_r+0x1c>
 80009d2:	bc10      	pop	{r4}
 80009d4:	f000 bb66 	b.w	80010a4 <__swbuf_r>
 80009d8:	6813      	ldr	r3, [r2, #0]
 80009da:	1c58      	adds	r0, r3, #1
 80009dc:	6010      	str	r0, [r2, #0]
 80009de:	7019      	strb	r1, [r3, #0]
 80009e0:	4608      	mov	r0, r1
 80009e2:	bc10      	pop	{r4}
 80009e4:	4770      	bx	lr

080009e6 <__sfputs_r>:
 80009e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009e8:	4606      	mov	r6, r0
 80009ea:	460f      	mov	r7, r1
 80009ec:	4614      	mov	r4, r2
 80009ee:	18d5      	adds	r5, r2, r3
 80009f0:	42ac      	cmp	r4, r5
 80009f2:	d101      	bne.n	80009f8 <__sfputs_r+0x12>
 80009f4:	2000      	movs	r0, #0
 80009f6:	e007      	b.n	8000a08 <__sfputs_r+0x22>
 80009f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009fc:	463a      	mov	r2, r7
 80009fe:	4630      	mov	r0, r6
 8000a00:	f7ff ffdc 	bl	80009bc <__sfputc_r>
 8000a04:	1c43      	adds	r3, r0, #1
 8000a06:	d1f3      	bne.n	80009f0 <__sfputs_r+0xa>
 8000a08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a0c <_vfiprintf_r>:
 8000a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a10:	460d      	mov	r5, r1
 8000a12:	b09d      	sub	sp, #116	@ 0x74
 8000a14:	4614      	mov	r4, r2
 8000a16:	4698      	mov	r8, r3
 8000a18:	4606      	mov	r6, r0
 8000a1a:	b118      	cbz	r0, 8000a24 <_vfiprintf_r+0x18>
 8000a1c:	6a03      	ldr	r3, [r0, #32]
 8000a1e:	b90b      	cbnz	r3, 8000a24 <_vfiprintf_r+0x18>
 8000a20:	f7ff fdcc 	bl	80005bc <__sinit>
 8000a24:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a26:	07d9      	lsls	r1, r3, #31
 8000a28:	d405      	bmi.n	8000a36 <_vfiprintf_r+0x2a>
 8000a2a:	89ab      	ldrh	r3, [r5, #12]
 8000a2c:	059a      	lsls	r2, r3, #22
 8000a2e:	d402      	bmi.n	8000a36 <_vfiprintf_r+0x2a>
 8000a30:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a32:	f7ff fec8 	bl	80007c6 <__retarget_lock_acquire_recursive>
 8000a36:	89ab      	ldrh	r3, [r5, #12]
 8000a38:	071b      	lsls	r3, r3, #28
 8000a3a:	d501      	bpl.n	8000a40 <_vfiprintf_r+0x34>
 8000a3c:	692b      	ldr	r3, [r5, #16]
 8000a3e:	b99b      	cbnz	r3, 8000a68 <_vfiprintf_r+0x5c>
 8000a40:	4629      	mov	r1, r5
 8000a42:	4630      	mov	r0, r6
 8000a44:	f000 fb6c 	bl	8001120 <__swsetup_r>
 8000a48:	b170      	cbz	r0, 8000a68 <_vfiprintf_r+0x5c>
 8000a4a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a4c:	07dc      	lsls	r4, r3, #31
 8000a4e:	d504      	bpl.n	8000a5a <_vfiprintf_r+0x4e>
 8000a50:	f04f 30ff 	mov.w	r0, #4294967295
 8000a54:	b01d      	add	sp, #116	@ 0x74
 8000a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a5a:	89ab      	ldrh	r3, [r5, #12]
 8000a5c:	0598      	lsls	r0, r3, #22
 8000a5e:	d4f7      	bmi.n	8000a50 <_vfiprintf_r+0x44>
 8000a60:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a62:	f7ff feb1 	bl	80007c8 <__retarget_lock_release_recursive>
 8000a66:	e7f3      	b.n	8000a50 <_vfiprintf_r+0x44>
 8000a68:	2300      	movs	r3, #0
 8000a6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000a6c:	2320      	movs	r3, #32
 8000a6e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000a72:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a76:	2330      	movs	r3, #48	@ 0x30
 8000a78:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000c28 <_vfiprintf_r+0x21c>
 8000a7c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a80:	f04f 0901 	mov.w	r9, #1
 8000a84:	4623      	mov	r3, r4
 8000a86:	469a      	mov	sl, r3
 8000a88:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a8c:	b10a      	cbz	r2, 8000a92 <_vfiprintf_r+0x86>
 8000a8e:	2a25      	cmp	r2, #37	@ 0x25
 8000a90:	d1f9      	bne.n	8000a86 <_vfiprintf_r+0x7a>
 8000a92:	ebba 0b04 	subs.w	fp, sl, r4
 8000a96:	d00b      	beq.n	8000ab0 <_vfiprintf_r+0xa4>
 8000a98:	465b      	mov	r3, fp
 8000a9a:	4622      	mov	r2, r4
 8000a9c:	4629      	mov	r1, r5
 8000a9e:	4630      	mov	r0, r6
 8000aa0:	f7ff ffa1 	bl	80009e6 <__sfputs_r>
 8000aa4:	3001      	adds	r0, #1
 8000aa6:	f000 80a7 	beq.w	8000bf8 <_vfiprintf_r+0x1ec>
 8000aaa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000aac:	445a      	add	r2, fp
 8000aae:	9209      	str	r2, [sp, #36]	@ 0x24
 8000ab0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	f000 809f 	beq.w	8000bf8 <_vfiprintf_r+0x1ec>
 8000aba:	2300      	movs	r3, #0
 8000abc:	f04f 32ff 	mov.w	r2, #4294967295
 8000ac0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ac4:	f10a 0a01 	add.w	sl, sl, #1
 8000ac8:	9304      	str	r3, [sp, #16]
 8000aca:	9307      	str	r3, [sp, #28]
 8000acc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ad0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000ad2:	4654      	mov	r4, sl
 8000ad4:	2205      	movs	r2, #5
 8000ad6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ada:	4853      	ldr	r0, [pc, #332]	@ (8000c28 <_vfiprintf_r+0x21c>)
 8000adc:	f7ff fb80 	bl	80001e0 <memchr>
 8000ae0:	9a04      	ldr	r2, [sp, #16]
 8000ae2:	b9d8      	cbnz	r0, 8000b1c <_vfiprintf_r+0x110>
 8000ae4:	06d1      	lsls	r1, r2, #27
 8000ae6:	bf44      	itt	mi
 8000ae8:	2320      	movmi	r3, #32
 8000aea:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000aee:	0713      	lsls	r3, r2, #28
 8000af0:	bf44      	itt	mi
 8000af2:	232b      	movmi	r3, #43	@ 0x2b
 8000af4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000af8:	f89a 3000 	ldrb.w	r3, [sl]
 8000afc:	2b2a      	cmp	r3, #42	@ 0x2a
 8000afe:	d015      	beq.n	8000b2c <_vfiprintf_r+0x120>
 8000b00:	9a07      	ldr	r2, [sp, #28]
 8000b02:	4654      	mov	r4, sl
 8000b04:	2000      	movs	r0, #0
 8000b06:	f04f 0c0a 	mov.w	ip, #10
 8000b0a:	4621      	mov	r1, r4
 8000b0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b10:	3b30      	subs	r3, #48	@ 0x30
 8000b12:	2b09      	cmp	r3, #9
 8000b14:	d94b      	bls.n	8000bae <_vfiprintf_r+0x1a2>
 8000b16:	b1b0      	cbz	r0, 8000b46 <_vfiprintf_r+0x13a>
 8000b18:	9207      	str	r2, [sp, #28]
 8000b1a:	e014      	b.n	8000b46 <_vfiprintf_r+0x13a>
 8000b1c:	eba0 0308 	sub.w	r3, r0, r8
 8000b20:	fa09 f303 	lsl.w	r3, r9, r3
 8000b24:	4313      	orrs	r3, r2
 8000b26:	9304      	str	r3, [sp, #16]
 8000b28:	46a2      	mov	sl, r4
 8000b2a:	e7d2      	b.n	8000ad2 <_vfiprintf_r+0xc6>
 8000b2c:	9b03      	ldr	r3, [sp, #12]
 8000b2e:	1d19      	adds	r1, r3, #4
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	9103      	str	r1, [sp, #12]
 8000b34:	2b00      	cmp	r3, #0
 8000b36:	bfbb      	ittet	lt
 8000b38:	425b      	neglt	r3, r3
 8000b3a:	f042 0202 	orrlt.w	r2, r2, #2
 8000b3e:	9307      	strge	r3, [sp, #28]
 8000b40:	9307      	strlt	r3, [sp, #28]
 8000b42:	bfb8      	it	lt
 8000b44:	9204      	strlt	r2, [sp, #16]
 8000b46:	7823      	ldrb	r3, [r4, #0]
 8000b48:	2b2e      	cmp	r3, #46	@ 0x2e
 8000b4a:	d10a      	bne.n	8000b62 <_vfiprintf_r+0x156>
 8000b4c:	7863      	ldrb	r3, [r4, #1]
 8000b4e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b50:	d132      	bne.n	8000bb8 <_vfiprintf_r+0x1ac>
 8000b52:	9b03      	ldr	r3, [sp, #12]
 8000b54:	1d1a      	adds	r2, r3, #4
 8000b56:	681b      	ldr	r3, [r3, #0]
 8000b58:	9203      	str	r2, [sp, #12]
 8000b5a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b5e:	3402      	adds	r4, #2
 8000b60:	9305      	str	r3, [sp, #20]
 8000b62:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000c2c <_vfiprintf_r+0x220>
 8000b66:	7821      	ldrb	r1, [r4, #0]
 8000b68:	2203      	movs	r2, #3
 8000b6a:	4650      	mov	r0, sl
 8000b6c:	f7ff fb38 	bl	80001e0 <memchr>
 8000b70:	b138      	cbz	r0, 8000b82 <_vfiprintf_r+0x176>
 8000b72:	9b04      	ldr	r3, [sp, #16]
 8000b74:	eba0 000a 	sub.w	r0, r0, sl
 8000b78:	2240      	movs	r2, #64	@ 0x40
 8000b7a:	4082      	lsls	r2, r0
 8000b7c:	4313      	orrs	r3, r2
 8000b7e:	3401      	adds	r4, #1
 8000b80:	9304      	str	r3, [sp, #16]
 8000b82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b86:	482a      	ldr	r0, [pc, #168]	@ (8000c30 <_vfiprintf_r+0x224>)
 8000b88:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b8c:	2206      	movs	r2, #6
 8000b8e:	f7ff fb27 	bl	80001e0 <memchr>
 8000b92:	2800      	cmp	r0, #0
 8000b94:	d03f      	beq.n	8000c16 <_vfiprintf_r+0x20a>
 8000b96:	4b27      	ldr	r3, [pc, #156]	@ (8000c34 <_vfiprintf_r+0x228>)
 8000b98:	bb1b      	cbnz	r3, 8000be2 <_vfiprintf_r+0x1d6>
 8000b9a:	9b03      	ldr	r3, [sp, #12]
 8000b9c:	3307      	adds	r3, #7
 8000b9e:	f023 0307 	bic.w	r3, r3, #7
 8000ba2:	3308      	adds	r3, #8
 8000ba4:	9303      	str	r3, [sp, #12]
 8000ba6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000ba8:	443b      	add	r3, r7
 8000baa:	9309      	str	r3, [sp, #36]	@ 0x24
 8000bac:	e76a      	b.n	8000a84 <_vfiprintf_r+0x78>
 8000bae:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bb2:	460c      	mov	r4, r1
 8000bb4:	2001      	movs	r0, #1
 8000bb6:	e7a8      	b.n	8000b0a <_vfiprintf_r+0xfe>
 8000bb8:	2300      	movs	r3, #0
 8000bba:	3401      	adds	r4, #1
 8000bbc:	9305      	str	r3, [sp, #20]
 8000bbe:	4619      	mov	r1, r3
 8000bc0:	f04f 0c0a 	mov.w	ip, #10
 8000bc4:	4620      	mov	r0, r4
 8000bc6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bca:	3a30      	subs	r2, #48	@ 0x30
 8000bcc:	2a09      	cmp	r2, #9
 8000bce:	d903      	bls.n	8000bd8 <_vfiprintf_r+0x1cc>
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	d0c6      	beq.n	8000b62 <_vfiprintf_r+0x156>
 8000bd4:	9105      	str	r1, [sp, #20]
 8000bd6:	e7c4      	b.n	8000b62 <_vfiprintf_r+0x156>
 8000bd8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bdc:	4604      	mov	r4, r0
 8000bde:	2301      	movs	r3, #1
 8000be0:	e7f0      	b.n	8000bc4 <_vfiprintf_r+0x1b8>
 8000be2:	ab03      	add	r3, sp, #12
 8000be4:	9300      	str	r3, [sp, #0]
 8000be6:	462a      	mov	r2, r5
 8000be8:	4b13      	ldr	r3, [pc, #76]	@ (8000c38 <_vfiprintf_r+0x22c>)
 8000bea:	a904      	add	r1, sp, #16
 8000bec:	4630      	mov	r0, r6
 8000bee:	f3af 8000 	nop.w
 8000bf2:	4607      	mov	r7, r0
 8000bf4:	1c78      	adds	r0, r7, #1
 8000bf6:	d1d6      	bne.n	8000ba6 <_vfiprintf_r+0x19a>
 8000bf8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bfa:	07d9      	lsls	r1, r3, #31
 8000bfc:	d405      	bmi.n	8000c0a <_vfiprintf_r+0x1fe>
 8000bfe:	89ab      	ldrh	r3, [r5, #12]
 8000c00:	059a      	lsls	r2, r3, #22
 8000c02:	d402      	bmi.n	8000c0a <_vfiprintf_r+0x1fe>
 8000c04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c06:	f7ff fddf 	bl	80007c8 <__retarget_lock_release_recursive>
 8000c0a:	89ab      	ldrh	r3, [r5, #12]
 8000c0c:	065b      	lsls	r3, r3, #25
 8000c0e:	f53f af1f 	bmi.w	8000a50 <_vfiprintf_r+0x44>
 8000c12:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000c14:	e71e      	b.n	8000a54 <_vfiprintf_r+0x48>
 8000c16:	ab03      	add	r3, sp, #12
 8000c18:	9300      	str	r3, [sp, #0]
 8000c1a:	462a      	mov	r2, r5
 8000c1c:	4b06      	ldr	r3, [pc, #24]	@ (8000c38 <_vfiprintf_r+0x22c>)
 8000c1e:	a904      	add	r1, sp, #16
 8000c20:	4630      	mov	r0, r6
 8000c22:	f000 f879 	bl	8000d18 <_printf_i>
 8000c26:	e7e4      	b.n	8000bf2 <_vfiprintf_r+0x1e6>
 8000c28:	08001335 	.word	0x08001335
 8000c2c:	0800133b 	.word	0x0800133b
 8000c30:	0800133f 	.word	0x0800133f
 8000c34:	00000000 	.word	0x00000000
 8000c38:	080009e7 	.word	0x080009e7

08000c3c <_printf_common>:
 8000c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c40:	4616      	mov	r6, r2
 8000c42:	4698      	mov	r8, r3
 8000c44:	688a      	ldr	r2, [r1, #8]
 8000c46:	690b      	ldr	r3, [r1, #16]
 8000c48:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000c4c:	4293      	cmp	r3, r2
 8000c4e:	bfb8      	it	lt
 8000c50:	4613      	movlt	r3, r2
 8000c52:	6033      	str	r3, [r6, #0]
 8000c54:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c58:	4607      	mov	r7, r0
 8000c5a:	460c      	mov	r4, r1
 8000c5c:	b10a      	cbz	r2, 8000c62 <_printf_common+0x26>
 8000c5e:	3301      	adds	r3, #1
 8000c60:	6033      	str	r3, [r6, #0]
 8000c62:	6823      	ldr	r3, [r4, #0]
 8000c64:	0699      	lsls	r1, r3, #26
 8000c66:	bf42      	ittt	mi
 8000c68:	6833      	ldrmi	r3, [r6, #0]
 8000c6a:	3302      	addmi	r3, #2
 8000c6c:	6033      	strmi	r3, [r6, #0]
 8000c6e:	6825      	ldr	r5, [r4, #0]
 8000c70:	f015 0506 	ands.w	r5, r5, #6
 8000c74:	d106      	bne.n	8000c84 <_printf_common+0x48>
 8000c76:	f104 0a19 	add.w	sl, r4, #25
 8000c7a:	68e3      	ldr	r3, [r4, #12]
 8000c7c:	6832      	ldr	r2, [r6, #0]
 8000c7e:	1a9b      	subs	r3, r3, r2
 8000c80:	42ab      	cmp	r3, r5
 8000c82:	dc26      	bgt.n	8000cd2 <_printf_common+0x96>
 8000c84:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c88:	6822      	ldr	r2, [r4, #0]
 8000c8a:	3b00      	subs	r3, #0
 8000c8c:	bf18      	it	ne
 8000c8e:	2301      	movne	r3, #1
 8000c90:	0692      	lsls	r2, r2, #26
 8000c92:	d42b      	bmi.n	8000cec <_printf_common+0xb0>
 8000c94:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c98:	4641      	mov	r1, r8
 8000c9a:	4638      	mov	r0, r7
 8000c9c:	47c8      	blx	r9
 8000c9e:	3001      	adds	r0, #1
 8000ca0:	d01e      	beq.n	8000ce0 <_printf_common+0xa4>
 8000ca2:	6823      	ldr	r3, [r4, #0]
 8000ca4:	6922      	ldr	r2, [r4, #16]
 8000ca6:	f003 0306 	and.w	r3, r3, #6
 8000caa:	2b04      	cmp	r3, #4
 8000cac:	bf02      	ittt	eq
 8000cae:	68e5      	ldreq	r5, [r4, #12]
 8000cb0:	6833      	ldreq	r3, [r6, #0]
 8000cb2:	1aed      	subeq	r5, r5, r3
 8000cb4:	68a3      	ldr	r3, [r4, #8]
 8000cb6:	bf0c      	ite	eq
 8000cb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cbc:	2500      	movne	r5, #0
 8000cbe:	4293      	cmp	r3, r2
 8000cc0:	bfc4      	itt	gt
 8000cc2:	1a9b      	subgt	r3, r3, r2
 8000cc4:	18ed      	addgt	r5, r5, r3
 8000cc6:	2600      	movs	r6, #0
 8000cc8:	341a      	adds	r4, #26
 8000cca:	42b5      	cmp	r5, r6
 8000ccc:	d11a      	bne.n	8000d04 <_printf_common+0xc8>
 8000cce:	2000      	movs	r0, #0
 8000cd0:	e008      	b.n	8000ce4 <_printf_common+0xa8>
 8000cd2:	2301      	movs	r3, #1
 8000cd4:	4652      	mov	r2, sl
 8000cd6:	4641      	mov	r1, r8
 8000cd8:	4638      	mov	r0, r7
 8000cda:	47c8      	blx	r9
 8000cdc:	3001      	adds	r0, #1
 8000cde:	d103      	bne.n	8000ce8 <_printf_common+0xac>
 8000ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ce4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ce8:	3501      	adds	r5, #1
 8000cea:	e7c6      	b.n	8000c7a <_printf_common+0x3e>
 8000cec:	18e1      	adds	r1, r4, r3
 8000cee:	1c5a      	adds	r2, r3, #1
 8000cf0:	2030      	movs	r0, #48	@ 0x30
 8000cf2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000cf6:	4422      	add	r2, r4
 8000cf8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000cfc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d00:	3302      	adds	r3, #2
 8000d02:	e7c7      	b.n	8000c94 <_printf_common+0x58>
 8000d04:	2301      	movs	r3, #1
 8000d06:	4622      	mov	r2, r4
 8000d08:	4641      	mov	r1, r8
 8000d0a:	4638      	mov	r0, r7
 8000d0c:	47c8      	blx	r9
 8000d0e:	3001      	adds	r0, #1
 8000d10:	d0e6      	beq.n	8000ce0 <_printf_common+0xa4>
 8000d12:	3601      	adds	r6, #1
 8000d14:	e7d9      	b.n	8000cca <_printf_common+0x8e>
	...

08000d18 <_printf_i>:
 8000d18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d1c:	7e0f      	ldrb	r7, [r1, #24]
 8000d1e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000d20:	2f78      	cmp	r7, #120	@ 0x78
 8000d22:	4691      	mov	r9, r2
 8000d24:	4680      	mov	r8, r0
 8000d26:	460c      	mov	r4, r1
 8000d28:	469a      	mov	sl, r3
 8000d2a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000d2e:	d807      	bhi.n	8000d40 <_printf_i+0x28>
 8000d30:	2f62      	cmp	r7, #98	@ 0x62
 8000d32:	d80a      	bhi.n	8000d4a <_printf_i+0x32>
 8000d34:	2f00      	cmp	r7, #0
 8000d36:	f000 80d1 	beq.w	8000edc <_printf_i+0x1c4>
 8000d3a:	2f58      	cmp	r7, #88	@ 0x58
 8000d3c:	f000 80b8 	beq.w	8000eb0 <_printf_i+0x198>
 8000d40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d44:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000d48:	e03a      	b.n	8000dc0 <_printf_i+0xa8>
 8000d4a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000d4e:	2b15      	cmp	r3, #21
 8000d50:	d8f6      	bhi.n	8000d40 <_printf_i+0x28>
 8000d52:	a101      	add	r1, pc, #4	@ (adr r1, 8000d58 <_printf_i+0x40>)
 8000d54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d58:	08000db1 	.word	0x08000db1
 8000d5c:	08000dc5 	.word	0x08000dc5
 8000d60:	08000d41 	.word	0x08000d41
 8000d64:	08000d41 	.word	0x08000d41
 8000d68:	08000d41 	.word	0x08000d41
 8000d6c:	08000d41 	.word	0x08000d41
 8000d70:	08000dc5 	.word	0x08000dc5
 8000d74:	08000d41 	.word	0x08000d41
 8000d78:	08000d41 	.word	0x08000d41
 8000d7c:	08000d41 	.word	0x08000d41
 8000d80:	08000d41 	.word	0x08000d41
 8000d84:	08000ec3 	.word	0x08000ec3
 8000d88:	08000def 	.word	0x08000def
 8000d8c:	08000e7d 	.word	0x08000e7d
 8000d90:	08000d41 	.word	0x08000d41
 8000d94:	08000d41 	.word	0x08000d41
 8000d98:	08000ee5 	.word	0x08000ee5
 8000d9c:	08000d41 	.word	0x08000d41
 8000da0:	08000def 	.word	0x08000def
 8000da4:	08000d41 	.word	0x08000d41
 8000da8:	08000d41 	.word	0x08000d41
 8000dac:	08000e85 	.word	0x08000e85
 8000db0:	6833      	ldr	r3, [r6, #0]
 8000db2:	1d1a      	adds	r2, r3, #4
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	6032      	str	r2, [r6, #0]
 8000db8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000dbc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000dc0:	2301      	movs	r3, #1
 8000dc2:	e09c      	b.n	8000efe <_printf_i+0x1e6>
 8000dc4:	6833      	ldr	r3, [r6, #0]
 8000dc6:	6820      	ldr	r0, [r4, #0]
 8000dc8:	1d19      	adds	r1, r3, #4
 8000dca:	6031      	str	r1, [r6, #0]
 8000dcc:	0606      	lsls	r6, r0, #24
 8000dce:	d501      	bpl.n	8000dd4 <_printf_i+0xbc>
 8000dd0:	681d      	ldr	r5, [r3, #0]
 8000dd2:	e003      	b.n	8000ddc <_printf_i+0xc4>
 8000dd4:	0645      	lsls	r5, r0, #25
 8000dd6:	d5fb      	bpl.n	8000dd0 <_printf_i+0xb8>
 8000dd8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ddc:	2d00      	cmp	r5, #0
 8000dde:	da03      	bge.n	8000de8 <_printf_i+0xd0>
 8000de0:	232d      	movs	r3, #45	@ 0x2d
 8000de2:	426d      	negs	r5, r5
 8000de4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000de8:	4858      	ldr	r0, [pc, #352]	@ (8000f4c <_printf_i+0x234>)
 8000dea:	230a      	movs	r3, #10
 8000dec:	e011      	b.n	8000e12 <_printf_i+0xfa>
 8000dee:	6821      	ldr	r1, [r4, #0]
 8000df0:	6833      	ldr	r3, [r6, #0]
 8000df2:	0608      	lsls	r0, r1, #24
 8000df4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000df8:	d402      	bmi.n	8000e00 <_printf_i+0xe8>
 8000dfa:	0649      	lsls	r1, r1, #25
 8000dfc:	bf48      	it	mi
 8000dfe:	b2ad      	uxthmi	r5, r5
 8000e00:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e02:	4852      	ldr	r0, [pc, #328]	@ (8000f4c <_printf_i+0x234>)
 8000e04:	6033      	str	r3, [r6, #0]
 8000e06:	bf14      	ite	ne
 8000e08:	230a      	movne	r3, #10
 8000e0a:	2308      	moveq	r3, #8
 8000e0c:	2100      	movs	r1, #0
 8000e0e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000e12:	6866      	ldr	r6, [r4, #4]
 8000e14:	60a6      	str	r6, [r4, #8]
 8000e16:	2e00      	cmp	r6, #0
 8000e18:	db05      	blt.n	8000e26 <_printf_i+0x10e>
 8000e1a:	6821      	ldr	r1, [r4, #0]
 8000e1c:	432e      	orrs	r6, r5
 8000e1e:	f021 0104 	bic.w	r1, r1, #4
 8000e22:	6021      	str	r1, [r4, #0]
 8000e24:	d04b      	beq.n	8000ebe <_printf_i+0x1a6>
 8000e26:	4616      	mov	r6, r2
 8000e28:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e2c:	fb03 5711 	mls	r7, r3, r1, r5
 8000e30:	5dc7      	ldrb	r7, [r0, r7]
 8000e32:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e36:	462f      	mov	r7, r5
 8000e38:	42bb      	cmp	r3, r7
 8000e3a:	460d      	mov	r5, r1
 8000e3c:	d9f4      	bls.n	8000e28 <_printf_i+0x110>
 8000e3e:	2b08      	cmp	r3, #8
 8000e40:	d10b      	bne.n	8000e5a <_printf_i+0x142>
 8000e42:	6823      	ldr	r3, [r4, #0]
 8000e44:	07df      	lsls	r7, r3, #31
 8000e46:	d508      	bpl.n	8000e5a <_printf_i+0x142>
 8000e48:	6923      	ldr	r3, [r4, #16]
 8000e4a:	6861      	ldr	r1, [r4, #4]
 8000e4c:	4299      	cmp	r1, r3
 8000e4e:	bfde      	ittt	le
 8000e50:	2330      	movle	r3, #48	@ 0x30
 8000e52:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e56:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e5a:	1b92      	subs	r2, r2, r6
 8000e5c:	6122      	str	r2, [r4, #16]
 8000e5e:	f8cd a000 	str.w	sl, [sp]
 8000e62:	464b      	mov	r3, r9
 8000e64:	aa03      	add	r2, sp, #12
 8000e66:	4621      	mov	r1, r4
 8000e68:	4640      	mov	r0, r8
 8000e6a:	f7ff fee7 	bl	8000c3c <_printf_common>
 8000e6e:	3001      	adds	r0, #1
 8000e70:	d14a      	bne.n	8000f08 <_printf_i+0x1f0>
 8000e72:	f04f 30ff 	mov.w	r0, #4294967295
 8000e76:	b004      	add	sp, #16
 8000e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e7c:	6823      	ldr	r3, [r4, #0]
 8000e7e:	f043 0320 	orr.w	r3, r3, #32
 8000e82:	6023      	str	r3, [r4, #0]
 8000e84:	4832      	ldr	r0, [pc, #200]	@ (8000f50 <_printf_i+0x238>)
 8000e86:	2778      	movs	r7, #120	@ 0x78
 8000e88:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e8c:	6823      	ldr	r3, [r4, #0]
 8000e8e:	6831      	ldr	r1, [r6, #0]
 8000e90:	061f      	lsls	r7, r3, #24
 8000e92:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e96:	d402      	bmi.n	8000e9e <_printf_i+0x186>
 8000e98:	065f      	lsls	r7, r3, #25
 8000e9a:	bf48      	it	mi
 8000e9c:	b2ad      	uxthmi	r5, r5
 8000e9e:	6031      	str	r1, [r6, #0]
 8000ea0:	07d9      	lsls	r1, r3, #31
 8000ea2:	bf44      	itt	mi
 8000ea4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ea8:	6023      	strmi	r3, [r4, #0]
 8000eaa:	b11d      	cbz	r5, 8000eb4 <_printf_i+0x19c>
 8000eac:	2310      	movs	r3, #16
 8000eae:	e7ad      	b.n	8000e0c <_printf_i+0xf4>
 8000eb0:	4826      	ldr	r0, [pc, #152]	@ (8000f4c <_printf_i+0x234>)
 8000eb2:	e7e9      	b.n	8000e88 <_printf_i+0x170>
 8000eb4:	6823      	ldr	r3, [r4, #0]
 8000eb6:	f023 0320 	bic.w	r3, r3, #32
 8000eba:	6023      	str	r3, [r4, #0]
 8000ebc:	e7f6      	b.n	8000eac <_printf_i+0x194>
 8000ebe:	4616      	mov	r6, r2
 8000ec0:	e7bd      	b.n	8000e3e <_printf_i+0x126>
 8000ec2:	6833      	ldr	r3, [r6, #0]
 8000ec4:	6825      	ldr	r5, [r4, #0]
 8000ec6:	6961      	ldr	r1, [r4, #20]
 8000ec8:	1d18      	adds	r0, r3, #4
 8000eca:	6030      	str	r0, [r6, #0]
 8000ecc:	062e      	lsls	r6, r5, #24
 8000ece:	681b      	ldr	r3, [r3, #0]
 8000ed0:	d501      	bpl.n	8000ed6 <_printf_i+0x1be>
 8000ed2:	6019      	str	r1, [r3, #0]
 8000ed4:	e002      	b.n	8000edc <_printf_i+0x1c4>
 8000ed6:	0668      	lsls	r0, r5, #25
 8000ed8:	d5fb      	bpl.n	8000ed2 <_printf_i+0x1ba>
 8000eda:	8019      	strh	r1, [r3, #0]
 8000edc:	2300      	movs	r3, #0
 8000ede:	6123      	str	r3, [r4, #16]
 8000ee0:	4616      	mov	r6, r2
 8000ee2:	e7bc      	b.n	8000e5e <_printf_i+0x146>
 8000ee4:	6833      	ldr	r3, [r6, #0]
 8000ee6:	1d1a      	adds	r2, r3, #4
 8000ee8:	6032      	str	r2, [r6, #0]
 8000eea:	681e      	ldr	r6, [r3, #0]
 8000eec:	6862      	ldr	r2, [r4, #4]
 8000eee:	2100      	movs	r1, #0
 8000ef0:	4630      	mov	r0, r6
 8000ef2:	f7ff f975 	bl	80001e0 <memchr>
 8000ef6:	b108      	cbz	r0, 8000efc <_printf_i+0x1e4>
 8000ef8:	1b80      	subs	r0, r0, r6
 8000efa:	6060      	str	r0, [r4, #4]
 8000efc:	6863      	ldr	r3, [r4, #4]
 8000efe:	6123      	str	r3, [r4, #16]
 8000f00:	2300      	movs	r3, #0
 8000f02:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f06:	e7aa      	b.n	8000e5e <_printf_i+0x146>
 8000f08:	6923      	ldr	r3, [r4, #16]
 8000f0a:	4632      	mov	r2, r6
 8000f0c:	4649      	mov	r1, r9
 8000f0e:	4640      	mov	r0, r8
 8000f10:	47d0      	blx	sl
 8000f12:	3001      	adds	r0, #1
 8000f14:	d0ad      	beq.n	8000e72 <_printf_i+0x15a>
 8000f16:	6823      	ldr	r3, [r4, #0]
 8000f18:	079b      	lsls	r3, r3, #30
 8000f1a:	d413      	bmi.n	8000f44 <_printf_i+0x22c>
 8000f1c:	68e0      	ldr	r0, [r4, #12]
 8000f1e:	9b03      	ldr	r3, [sp, #12]
 8000f20:	4298      	cmp	r0, r3
 8000f22:	bfb8      	it	lt
 8000f24:	4618      	movlt	r0, r3
 8000f26:	e7a6      	b.n	8000e76 <_printf_i+0x15e>
 8000f28:	2301      	movs	r3, #1
 8000f2a:	4632      	mov	r2, r6
 8000f2c:	4649      	mov	r1, r9
 8000f2e:	4640      	mov	r0, r8
 8000f30:	47d0      	blx	sl
 8000f32:	3001      	adds	r0, #1
 8000f34:	d09d      	beq.n	8000e72 <_printf_i+0x15a>
 8000f36:	3501      	adds	r5, #1
 8000f38:	68e3      	ldr	r3, [r4, #12]
 8000f3a:	9903      	ldr	r1, [sp, #12]
 8000f3c:	1a5b      	subs	r3, r3, r1
 8000f3e:	42ab      	cmp	r3, r5
 8000f40:	dcf2      	bgt.n	8000f28 <_printf_i+0x210>
 8000f42:	e7eb      	b.n	8000f1c <_printf_i+0x204>
 8000f44:	2500      	movs	r5, #0
 8000f46:	f104 0619 	add.w	r6, r4, #25
 8000f4a:	e7f5      	b.n	8000f38 <_printf_i+0x220>
 8000f4c:	08001346 	.word	0x08001346
 8000f50:	08001357 	.word	0x08001357

08000f54 <__sflush_r>:
 8000f54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f5a:	0716      	lsls	r6, r2, #28
 8000f5c:	4605      	mov	r5, r0
 8000f5e:	460c      	mov	r4, r1
 8000f60:	d454      	bmi.n	800100c <__sflush_r+0xb8>
 8000f62:	684b      	ldr	r3, [r1, #4]
 8000f64:	2b00      	cmp	r3, #0
 8000f66:	dc02      	bgt.n	8000f6e <__sflush_r+0x1a>
 8000f68:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000f6a:	2b00      	cmp	r3, #0
 8000f6c:	dd48      	ble.n	8001000 <__sflush_r+0xac>
 8000f6e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f70:	2e00      	cmp	r6, #0
 8000f72:	d045      	beq.n	8001000 <__sflush_r+0xac>
 8000f74:	2300      	movs	r3, #0
 8000f76:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000f7a:	682f      	ldr	r7, [r5, #0]
 8000f7c:	6a21      	ldr	r1, [r4, #32]
 8000f7e:	602b      	str	r3, [r5, #0]
 8000f80:	d030      	beq.n	8000fe4 <__sflush_r+0x90>
 8000f82:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f84:	89a3      	ldrh	r3, [r4, #12]
 8000f86:	0759      	lsls	r1, r3, #29
 8000f88:	d505      	bpl.n	8000f96 <__sflush_r+0x42>
 8000f8a:	6863      	ldr	r3, [r4, #4]
 8000f8c:	1ad2      	subs	r2, r2, r3
 8000f8e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f90:	b10b      	cbz	r3, 8000f96 <__sflush_r+0x42>
 8000f92:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f94:	1ad2      	subs	r2, r2, r3
 8000f96:	2300      	movs	r3, #0
 8000f98:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f9a:	6a21      	ldr	r1, [r4, #32]
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	47b0      	blx	r6
 8000fa0:	1c43      	adds	r3, r0, #1
 8000fa2:	89a3      	ldrh	r3, [r4, #12]
 8000fa4:	d106      	bne.n	8000fb4 <__sflush_r+0x60>
 8000fa6:	6829      	ldr	r1, [r5, #0]
 8000fa8:	291d      	cmp	r1, #29
 8000faa:	d82b      	bhi.n	8001004 <__sflush_r+0xb0>
 8000fac:	4a28      	ldr	r2, [pc, #160]	@ (8001050 <__sflush_r+0xfc>)
 8000fae:	40ca      	lsrs	r2, r1
 8000fb0:	07d6      	lsls	r6, r2, #31
 8000fb2:	d527      	bpl.n	8001004 <__sflush_r+0xb0>
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	6062      	str	r2, [r4, #4]
 8000fb8:	04d9      	lsls	r1, r3, #19
 8000fba:	6922      	ldr	r2, [r4, #16]
 8000fbc:	6022      	str	r2, [r4, #0]
 8000fbe:	d504      	bpl.n	8000fca <__sflush_r+0x76>
 8000fc0:	1c42      	adds	r2, r0, #1
 8000fc2:	d101      	bne.n	8000fc8 <__sflush_r+0x74>
 8000fc4:	682b      	ldr	r3, [r5, #0]
 8000fc6:	b903      	cbnz	r3, 8000fca <__sflush_r+0x76>
 8000fc8:	6560      	str	r0, [r4, #84]	@ 0x54
 8000fca:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000fcc:	602f      	str	r7, [r5, #0]
 8000fce:	b1b9      	cbz	r1, 8001000 <__sflush_r+0xac>
 8000fd0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000fd4:	4299      	cmp	r1, r3
 8000fd6:	d002      	beq.n	8000fde <__sflush_r+0x8a>
 8000fd8:	4628      	mov	r0, r5
 8000fda:	f7ff fbf7 	bl	80007cc <_free_r>
 8000fde:	2300      	movs	r3, #0
 8000fe0:	6363      	str	r3, [r4, #52]	@ 0x34
 8000fe2:	e00d      	b.n	8001000 <__sflush_r+0xac>
 8000fe4:	2301      	movs	r3, #1
 8000fe6:	4628      	mov	r0, r5
 8000fe8:	47b0      	blx	r6
 8000fea:	4602      	mov	r2, r0
 8000fec:	1c50      	adds	r0, r2, #1
 8000fee:	d1c9      	bne.n	8000f84 <__sflush_r+0x30>
 8000ff0:	682b      	ldr	r3, [r5, #0]
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d0c6      	beq.n	8000f84 <__sflush_r+0x30>
 8000ff6:	2b1d      	cmp	r3, #29
 8000ff8:	d001      	beq.n	8000ffe <__sflush_r+0xaa>
 8000ffa:	2b16      	cmp	r3, #22
 8000ffc:	d11d      	bne.n	800103a <__sflush_r+0xe6>
 8000ffe:	602f      	str	r7, [r5, #0]
 8001000:	2000      	movs	r0, #0
 8001002:	e021      	b.n	8001048 <__sflush_r+0xf4>
 8001004:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001008:	b21b      	sxth	r3, r3
 800100a:	e01a      	b.n	8001042 <__sflush_r+0xee>
 800100c:	690f      	ldr	r7, [r1, #16]
 800100e:	2f00      	cmp	r7, #0
 8001010:	d0f6      	beq.n	8001000 <__sflush_r+0xac>
 8001012:	0793      	lsls	r3, r2, #30
 8001014:	680e      	ldr	r6, [r1, #0]
 8001016:	bf08      	it	eq
 8001018:	694b      	ldreq	r3, [r1, #20]
 800101a:	600f      	str	r7, [r1, #0]
 800101c:	bf18      	it	ne
 800101e:	2300      	movne	r3, #0
 8001020:	1bf6      	subs	r6, r6, r7
 8001022:	608b      	str	r3, [r1, #8]
 8001024:	2e00      	cmp	r6, #0
 8001026:	ddeb      	ble.n	8001000 <__sflush_r+0xac>
 8001028:	6a21      	ldr	r1, [r4, #32]
 800102a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800102e:	4633      	mov	r3, r6
 8001030:	463a      	mov	r2, r7
 8001032:	4628      	mov	r0, r5
 8001034:	47e0      	blx	ip
 8001036:	2800      	cmp	r0, #0
 8001038:	dc07      	bgt.n	800104a <__sflush_r+0xf6>
 800103a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800103e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001042:	81a3      	strh	r3, [r4, #12]
 8001044:	f04f 30ff 	mov.w	r0, #4294967295
 8001048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800104a:	4407      	add	r7, r0
 800104c:	1a36      	subs	r6, r6, r0
 800104e:	e7e9      	b.n	8001024 <__sflush_r+0xd0>
 8001050:	20400001 	.word	0x20400001

08001054 <_fflush_r>:
 8001054:	b538      	push	{r3, r4, r5, lr}
 8001056:	690b      	ldr	r3, [r1, #16]
 8001058:	4605      	mov	r5, r0
 800105a:	460c      	mov	r4, r1
 800105c:	b913      	cbnz	r3, 8001064 <_fflush_r+0x10>
 800105e:	2500      	movs	r5, #0
 8001060:	4628      	mov	r0, r5
 8001062:	bd38      	pop	{r3, r4, r5, pc}
 8001064:	b118      	cbz	r0, 800106e <_fflush_r+0x1a>
 8001066:	6a03      	ldr	r3, [r0, #32]
 8001068:	b90b      	cbnz	r3, 800106e <_fflush_r+0x1a>
 800106a:	f7ff faa7 	bl	80005bc <__sinit>
 800106e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001072:	2b00      	cmp	r3, #0
 8001074:	d0f3      	beq.n	800105e <_fflush_r+0xa>
 8001076:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001078:	07d0      	lsls	r0, r2, #31
 800107a:	d404      	bmi.n	8001086 <_fflush_r+0x32>
 800107c:	0599      	lsls	r1, r3, #22
 800107e:	d402      	bmi.n	8001086 <_fflush_r+0x32>
 8001080:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001082:	f7ff fba0 	bl	80007c6 <__retarget_lock_acquire_recursive>
 8001086:	4628      	mov	r0, r5
 8001088:	4621      	mov	r1, r4
 800108a:	f7ff ff63 	bl	8000f54 <__sflush_r>
 800108e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001090:	07da      	lsls	r2, r3, #31
 8001092:	4605      	mov	r5, r0
 8001094:	d4e4      	bmi.n	8001060 <_fflush_r+0xc>
 8001096:	89a3      	ldrh	r3, [r4, #12]
 8001098:	059b      	lsls	r3, r3, #22
 800109a:	d4e1      	bmi.n	8001060 <_fflush_r+0xc>
 800109c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800109e:	f7ff fb93 	bl	80007c8 <__retarget_lock_release_recursive>
 80010a2:	e7dd      	b.n	8001060 <_fflush_r+0xc>

080010a4 <__swbuf_r>:
 80010a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010a6:	460e      	mov	r6, r1
 80010a8:	4614      	mov	r4, r2
 80010aa:	4605      	mov	r5, r0
 80010ac:	b118      	cbz	r0, 80010b6 <__swbuf_r+0x12>
 80010ae:	6a03      	ldr	r3, [r0, #32]
 80010b0:	b90b      	cbnz	r3, 80010b6 <__swbuf_r+0x12>
 80010b2:	f7ff fa83 	bl	80005bc <__sinit>
 80010b6:	69a3      	ldr	r3, [r4, #24]
 80010b8:	60a3      	str	r3, [r4, #8]
 80010ba:	89a3      	ldrh	r3, [r4, #12]
 80010bc:	071a      	lsls	r2, r3, #28
 80010be:	d501      	bpl.n	80010c4 <__swbuf_r+0x20>
 80010c0:	6923      	ldr	r3, [r4, #16]
 80010c2:	b943      	cbnz	r3, 80010d6 <__swbuf_r+0x32>
 80010c4:	4621      	mov	r1, r4
 80010c6:	4628      	mov	r0, r5
 80010c8:	f000 f82a 	bl	8001120 <__swsetup_r>
 80010cc:	b118      	cbz	r0, 80010d6 <__swbuf_r+0x32>
 80010ce:	f04f 37ff 	mov.w	r7, #4294967295
 80010d2:	4638      	mov	r0, r7
 80010d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010d6:	6823      	ldr	r3, [r4, #0]
 80010d8:	6922      	ldr	r2, [r4, #16]
 80010da:	1a98      	subs	r0, r3, r2
 80010dc:	6963      	ldr	r3, [r4, #20]
 80010de:	b2f6      	uxtb	r6, r6
 80010e0:	4283      	cmp	r3, r0
 80010e2:	4637      	mov	r7, r6
 80010e4:	dc05      	bgt.n	80010f2 <__swbuf_r+0x4e>
 80010e6:	4621      	mov	r1, r4
 80010e8:	4628      	mov	r0, r5
 80010ea:	f7ff ffb3 	bl	8001054 <_fflush_r>
 80010ee:	2800      	cmp	r0, #0
 80010f0:	d1ed      	bne.n	80010ce <__swbuf_r+0x2a>
 80010f2:	68a3      	ldr	r3, [r4, #8]
 80010f4:	3b01      	subs	r3, #1
 80010f6:	60a3      	str	r3, [r4, #8]
 80010f8:	6823      	ldr	r3, [r4, #0]
 80010fa:	1c5a      	adds	r2, r3, #1
 80010fc:	6022      	str	r2, [r4, #0]
 80010fe:	701e      	strb	r6, [r3, #0]
 8001100:	6962      	ldr	r2, [r4, #20]
 8001102:	1c43      	adds	r3, r0, #1
 8001104:	429a      	cmp	r2, r3
 8001106:	d004      	beq.n	8001112 <__swbuf_r+0x6e>
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	07db      	lsls	r3, r3, #31
 800110c:	d5e1      	bpl.n	80010d2 <__swbuf_r+0x2e>
 800110e:	2e0a      	cmp	r6, #10
 8001110:	d1df      	bne.n	80010d2 <__swbuf_r+0x2e>
 8001112:	4621      	mov	r1, r4
 8001114:	4628      	mov	r0, r5
 8001116:	f7ff ff9d 	bl	8001054 <_fflush_r>
 800111a:	2800      	cmp	r0, #0
 800111c:	d0d9      	beq.n	80010d2 <__swbuf_r+0x2e>
 800111e:	e7d6      	b.n	80010ce <__swbuf_r+0x2a>

08001120 <__swsetup_r>:
 8001120:	b538      	push	{r3, r4, r5, lr}
 8001122:	4b29      	ldr	r3, [pc, #164]	@ (80011c8 <__swsetup_r+0xa8>)
 8001124:	4605      	mov	r5, r0
 8001126:	6818      	ldr	r0, [r3, #0]
 8001128:	460c      	mov	r4, r1
 800112a:	b118      	cbz	r0, 8001134 <__swsetup_r+0x14>
 800112c:	6a03      	ldr	r3, [r0, #32]
 800112e:	b90b      	cbnz	r3, 8001134 <__swsetup_r+0x14>
 8001130:	f7ff fa44 	bl	80005bc <__sinit>
 8001134:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001138:	0719      	lsls	r1, r3, #28
 800113a:	d422      	bmi.n	8001182 <__swsetup_r+0x62>
 800113c:	06da      	lsls	r2, r3, #27
 800113e:	d407      	bmi.n	8001150 <__swsetup_r+0x30>
 8001140:	2209      	movs	r2, #9
 8001142:	602a      	str	r2, [r5, #0]
 8001144:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001148:	81a3      	strh	r3, [r4, #12]
 800114a:	f04f 30ff 	mov.w	r0, #4294967295
 800114e:	e033      	b.n	80011b8 <__swsetup_r+0x98>
 8001150:	0758      	lsls	r0, r3, #29
 8001152:	d512      	bpl.n	800117a <__swsetup_r+0x5a>
 8001154:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001156:	b141      	cbz	r1, 800116a <__swsetup_r+0x4a>
 8001158:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800115c:	4299      	cmp	r1, r3
 800115e:	d002      	beq.n	8001166 <__swsetup_r+0x46>
 8001160:	4628      	mov	r0, r5
 8001162:	f7ff fb33 	bl	80007cc <_free_r>
 8001166:	2300      	movs	r3, #0
 8001168:	6363      	str	r3, [r4, #52]	@ 0x34
 800116a:	89a3      	ldrh	r3, [r4, #12]
 800116c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001170:	81a3      	strh	r3, [r4, #12]
 8001172:	2300      	movs	r3, #0
 8001174:	6063      	str	r3, [r4, #4]
 8001176:	6923      	ldr	r3, [r4, #16]
 8001178:	6023      	str	r3, [r4, #0]
 800117a:	89a3      	ldrh	r3, [r4, #12]
 800117c:	f043 0308 	orr.w	r3, r3, #8
 8001180:	81a3      	strh	r3, [r4, #12]
 8001182:	6923      	ldr	r3, [r4, #16]
 8001184:	b94b      	cbnz	r3, 800119a <__swsetup_r+0x7a>
 8001186:	89a3      	ldrh	r3, [r4, #12]
 8001188:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800118c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001190:	d003      	beq.n	800119a <__swsetup_r+0x7a>
 8001192:	4621      	mov	r1, r4
 8001194:	4628      	mov	r0, r5
 8001196:	f000 f84f 	bl	8001238 <__smakebuf_r>
 800119a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800119e:	f013 0201 	ands.w	r2, r3, #1
 80011a2:	d00a      	beq.n	80011ba <__swsetup_r+0x9a>
 80011a4:	2200      	movs	r2, #0
 80011a6:	60a2      	str	r2, [r4, #8]
 80011a8:	6962      	ldr	r2, [r4, #20]
 80011aa:	4252      	negs	r2, r2
 80011ac:	61a2      	str	r2, [r4, #24]
 80011ae:	6922      	ldr	r2, [r4, #16]
 80011b0:	b942      	cbnz	r2, 80011c4 <__swsetup_r+0xa4>
 80011b2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80011b6:	d1c5      	bne.n	8001144 <__swsetup_r+0x24>
 80011b8:	bd38      	pop	{r3, r4, r5, pc}
 80011ba:	0799      	lsls	r1, r3, #30
 80011bc:	bf58      	it	pl
 80011be:	6962      	ldrpl	r2, [r4, #20]
 80011c0:	60a2      	str	r2, [r4, #8]
 80011c2:	e7f4      	b.n	80011ae <__swsetup_r+0x8e>
 80011c4:	2000      	movs	r0, #0
 80011c6:	e7f7      	b.n	80011b8 <__swsetup_r+0x98>
 80011c8:	2000000c 	.word	0x2000000c

080011cc <_sbrk_r>:
 80011cc:	b538      	push	{r3, r4, r5, lr}
 80011ce:	4d06      	ldr	r5, [pc, #24]	@ (80011e8 <_sbrk_r+0x1c>)
 80011d0:	2300      	movs	r3, #0
 80011d2:	4604      	mov	r4, r0
 80011d4:	4608      	mov	r0, r1
 80011d6:	602b      	str	r3, [r5, #0]
 80011d8:	f7ff f904 	bl	80003e4 <_sbrk>
 80011dc:	1c43      	adds	r3, r0, #1
 80011de:	d102      	bne.n	80011e6 <_sbrk_r+0x1a>
 80011e0:	682b      	ldr	r3, [r5, #0]
 80011e2:	b103      	cbz	r3, 80011e6 <_sbrk_r+0x1a>
 80011e4:	6023      	str	r3, [r4, #0]
 80011e6:	bd38      	pop	{r3, r4, r5, pc}
 80011e8:	200001b8 	.word	0x200001b8

080011ec <__swhatbuf_r>:
 80011ec:	b570      	push	{r4, r5, r6, lr}
 80011ee:	460c      	mov	r4, r1
 80011f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011f4:	2900      	cmp	r1, #0
 80011f6:	b096      	sub	sp, #88	@ 0x58
 80011f8:	4615      	mov	r5, r2
 80011fa:	461e      	mov	r6, r3
 80011fc:	da0d      	bge.n	800121a <__swhatbuf_r+0x2e>
 80011fe:	89a3      	ldrh	r3, [r4, #12]
 8001200:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001204:	f04f 0100 	mov.w	r1, #0
 8001208:	bf14      	ite	ne
 800120a:	2340      	movne	r3, #64	@ 0x40
 800120c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001210:	2000      	movs	r0, #0
 8001212:	6031      	str	r1, [r6, #0]
 8001214:	602b      	str	r3, [r5, #0]
 8001216:	b016      	add	sp, #88	@ 0x58
 8001218:	bd70      	pop	{r4, r5, r6, pc}
 800121a:	466a      	mov	r2, sp
 800121c:	f000 f848 	bl	80012b0 <_fstat_r>
 8001220:	2800      	cmp	r0, #0
 8001222:	dbec      	blt.n	80011fe <__swhatbuf_r+0x12>
 8001224:	9901      	ldr	r1, [sp, #4]
 8001226:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800122a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800122e:	4259      	negs	r1, r3
 8001230:	4159      	adcs	r1, r3
 8001232:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001236:	e7eb      	b.n	8001210 <__swhatbuf_r+0x24>

08001238 <__smakebuf_r>:
 8001238:	898b      	ldrh	r3, [r1, #12]
 800123a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800123c:	079d      	lsls	r5, r3, #30
 800123e:	4606      	mov	r6, r0
 8001240:	460c      	mov	r4, r1
 8001242:	d507      	bpl.n	8001254 <__smakebuf_r+0x1c>
 8001244:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001248:	6023      	str	r3, [r4, #0]
 800124a:	6123      	str	r3, [r4, #16]
 800124c:	2301      	movs	r3, #1
 800124e:	6163      	str	r3, [r4, #20]
 8001250:	b003      	add	sp, #12
 8001252:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001254:	ab01      	add	r3, sp, #4
 8001256:	466a      	mov	r2, sp
 8001258:	f7ff ffc8 	bl	80011ec <__swhatbuf_r>
 800125c:	9f00      	ldr	r7, [sp, #0]
 800125e:	4605      	mov	r5, r0
 8001260:	4639      	mov	r1, r7
 8001262:	4630      	mov	r0, r6
 8001264:	f7ff fb1e 	bl	80008a4 <_malloc_r>
 8001268:	b948      	cbnz	r0, 800127e <__smakebuf_r+0x46>
 800126a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800126e:	059a      	lsls	r2, r3, #22
 8001270:	d4ee      	bmi.n	8001250 <__smakebuf_r+0x18>
 8001272:	f023 0303 	bic.w	r3, r3, #3
 8001276:	f043 0302 	orr.w	r3, r3, #2
 800127a:	81a3      	strh	r3, [r4, #12]
 800127c:	e7e2      	b.n	8001244 <__smakebuf_r+0xc>
 800127e:	89a3      	ldrh	r3, [r4, #12]
 8001280:	6020      	str	r0, [r4, #0]
 8001282:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001286:	81a3      	strh	r3, [r4, #12]
 8001288:	9b01      	ldr	r3, [sp, #4]
 800128a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800128e:	b15b      	cbz	r3, 80012a8 <__smakebuf_r+0x70>
 8001290:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001294:	4630      	mov	r0, r6
 8001296:	f000 f81d 	bl	80012d4 <_isatty_r>
 800129a:	b128      	cbz	r0, 80012a8 <__smakebuf_r+0x70>
 800129c:	89a3      	ldrh	r3, [r4, #12]
 800129e:	f023 0303 	bic.w	r3, r3, #3
 80012a2:	f043 0301 	orr.w	r3, r3, #1
 80012a6:	81a3      	strh	r3, [r4, #12]
 80012a8:	89a3      	ldrh	r3, [r4, #12]
 80012aa:	431d      	orrs	r5, r3
 80012ac:	81a5      	strh	r5, [r4, #12]
 80012ae:	e7cf      	b.n	8001250 <__smakebuf_r+0x18>

080012b0 <_fstat_r>:
 80012b0:	b538      	push	{r3, r4, r5, lr}
 80012b2:	4d07      	ldr	r5, [pc, #28]	@ (80012d0 <_fstat_r+0x20>)
 80012b4:	2300      	movs	r3, #0
 80012b6:	4604      	mov	r4, r0
 80012b8:	4608      	mov	r0, r1
 80012ba:	4611      	mov	r1, r2
 80012bc:	602b      	str	r3, [r5, #0]
 80012be:	f7ff f86b 	bl	8000398 <_fstat>
 80012c2:	1c43      	adds	r3, r0, #1
 80012c4:	d102      	bne.n	80012cc <_fstat_r+0x1c>
 80012c6:	682b      	ldr	r3, [r5, #0]
 80012c8:	b103      	cbz	r3, 80012cc <_fstat_r+0x1c>
 80012ca:	6023      	str	r3, [r4, #0]
 80012cc:	bd38      	pop	{r3, r4, r5, pc}
 80012ce:	bf00      	nop
 80012d0:	200001b8 	.word	0x200001b8

080012d4 <_isatty_r>:
 80012d4:	b538      	push	{r3, r4, r5, lr}
 80012d6:	4d06      	ldr	r5, [pc, #24]	@ (80012f0 <_isatty_r+0x1c>)
 80012d8:	2300      	movs	r3, #0
 80012da:	4604      	mov	r4, r0
 80012dc:	4608      	mov	r0, r1
 80012de:	602b      	str	r3, [r5, #0]
 80012e0:	f7ff f869 	bl	80003b6 <_isatty>
 80012e4:	1c43      	adds	r3, r0, #1
 80012e6:	d102      	bne.n	80012ee <_isatty_r+0x1a>
 80012e8:	682b      	ldr	r3, [r5, #0]
 80012ea:	b103      	cbz	r3, 80012ee <_isatty_r+0x1a>
 80012ec:	6023      	str	r3, [r4, #0]
 80012ee:	bd38      	pop	{r3, r4, r5, pc}
 80012f0:	200001b8 	.word	0x200001b8

080012f4 <_init>:
 80012f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012f6:	bf00      	nop
 80012f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012fa:	bc08      	pop	{r3}
 80012fc:	469e      	mov	lr, r3
 80012fe:	4770      	bx	lr

08001300 <_fini>:
 8001300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001302:	bf00      	nop
 8001304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001306:	bc08      	pop	{r3}
 8001308:	469e      	mov	lr, r3
 800130a:	4770      	bx	lr
