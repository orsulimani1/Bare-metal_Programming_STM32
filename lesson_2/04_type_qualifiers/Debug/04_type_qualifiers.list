
04_type_qualifiers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000154  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002ec  080002f4  000012f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002ec  080002ec  000012f4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080002ec  080002ec  000012f4  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080002ec  080002f4  000012f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002ec  080002ec  000012ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002f0  080002f0  000012f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002f4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002f4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000128  00000000  00000000  00001324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000be  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00001510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000038  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fac  00000000  00000000  00001590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000004f3  00000000  00000000  0000253c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003d59  00000000  00000000  00002a2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006788  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  000067cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  00006820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080002d4 	.word	0x080002d4

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080002d4 	.word	0x080002d4

080001d8 <main>:
//	get the RRC value
	*p_clk_ctrl_reg |= (0x1 << 3);
//	clear p_gpioD_mode_reg
	*p_gpioD_mode_reg &= ~(0x3 << 24);
//	set the p_gpioD_mode_reg
	*p_gpioD_mode_reg |= (0x1 << 24);
 80001d8:	4a15      	ldr	r2, [pc, #84]	@ (8000230 <main+0x58>)
{
 80001da:	b410      	push	{r4}
	*p_clk_ctrl_reg |= (0x1 << 3);
 80001dc:	4c15      	ldr	r4, [pc, #84]	@ (8000234 <main+0x5c>)
	*p_gpioD_mode_reg &= ~(0x3 << 24);
 80001de:	f8d2 3c00 	ldr.w	r3, [r2, #3072]	@ 0xc00
	*p_clk_ctrl_reg |= (0x1 << 3);
 80001e2:	f8d4 0830 	ldr.w	r0, [r4, #2096]	@ 0x830
//	set the pin output
	*p_gpioD_out_reg |= (0x1 << 12);
 80001e6:	f8d2 1c14 	ldr.w	r1, [r2, #3092]	@ 0xc14
	*p_gpioD_mode_reg &= ~(0x3 << 24);
 80001ea:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
	*p_clk_ctrl_reg |= (0x1 << 3);
 80001ee:	f040 0008 	orr.w	r0, r0, #8
	*p_gpioD_out_reg |= (0x1 << 12);
 80001f2:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
	*p_gpioD_mode_reg |= (0x1 << 24);
 80001f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
{
 80001fa:	b083      	sub	sp, #12
	*p_clk_ctrl_reg |= (0x1 << 3);
 80001fc:	f8c4 0830 	str.w	r0, [r4, #2096]	@ 0x830
	*p_gpioD_out_reg |= (0x1 << 12);
 8000200:	f8c2 1c14 	str.w	r1, [r2, #3092]	@ 0xc14
	*p_gpioD_mode_reg |= (0x1 << 24);
 8000204:	f8c2 3c00 	str.w	r3, [r2, #3072]	@ 0xc00
    while(1) {
        // Toggle LED
        *p_gpioD_out_reg ^= (0x1 << 12);

        // Delay (volatile counter prevents optimization)
        for(volatile uint32_t i = 0; i < 5000; i++);
 8000208:	2000      	movs	r0, #0
 800020a:	f241 3187 	movw	r1, #4999	@ 0x1387
        *p_gpioD_out_reg ^= (0x1 << 12);
 800020e:	f8d2 3c14 	ldr.w	r3, [r2, #3092]	@ 0xc14
 8000212:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8000216:	f8c2 3c14 	str.w	r3, [r2, #3092]	@ 0xc14
        for(volatile uint32_t i = 0; i < 5000; i++);
 800021a:	9001      	str	r0, [sp, #4]
 800021c:	9b01      	ldr	r3, [sp, #4]
 800021e:	428b      	cmp	r3, r1
 8000220:	d8f5      	bhi.n	800020e <main+0x36>
 8000222:	9b01      	ldr	r3, [sp, #4]
 8000224:	3301      	adds	r3, #1
 8000226:	9301      	str	r3, [sp, #4]
 8000228:	9b01      	ldr	r3, [sp, #4]
 800022a:	428b      	cmp	r3, r1
 800022c:	d9f9      	bls.n	8000222 <main+0x4a>
 800022e:	e7ee      	b.n	800020e <main+0x36>
 8000230:	40020000 	.word	0x40020000
 8000234:	40023000 	.word	0x40023000

08000238 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000238:	480d      	ldr	r0, [pc, #52]	@ (8000270 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800023c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000240:	480c      	ldr	r0, [pc, #48]	@ (8000274 <LoopForever+0x6>)
  ldr r1, =_edata
 8000242:	490d      	ldr	r1, [pc, #52]	@ (8000278 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000244:	4a0d      	ldr	r2, [pc, #52]	@ (800027c <LoopForever+0xe>)
  movs r3, #0
 8000246:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000248:	e002      	b.n	8000250 <LoopCopyDataInit>

0800024a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800024c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024e:	3304      	adds	r3, #4

08000250 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000250:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000252:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000254:	d3f9      	bcc.n	800024a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000256:	4a0a      	ldr	r2, [pc, #40]	@ (8000280 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000258:	4c0a      	ldr	r4, [pc, #40]	@ (8000284 <LoopForever+0x16>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800025c:	e001      	b.n	8000262 <LoopFillZerobss>

0800025e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800025e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000260:	3204      	adds	r2, #4

08000262 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000262:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000264:	d3fb      	bcc.n	800025e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000266:	f000 f811 	bl	800028c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026a:	f7ff ffb5 	bl	80001d8 <main>

0800026e <LoopForever>:

LoopForever:
  b LoopForever
 800026e:	e7fe      	b.n	800026e <LoopForever>
  ldr   r0, =_estack
 8000270:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000274:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000278:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800027c:	080002f4 	.word	0x080002f4
  ldr r2, =_sbss
 8000280:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000284:	2000001c 	.word	0x2000001c

08000288 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000288:	e7fe      	b.n	8000288 <ADC_IRQHandler>
	...

0800028c <__libc_init_array>:
 800028c:	b570      	push	{r4, r5, r6, lr}
 800028e:	4d0d      	ldr	r5, [pc, #52]	@ (80002c4 <__libc_init_array+0x38>)
 8000290:	4c0d      	ldr	r4, [pc, #52]	@ (80002c8 <__libc_init_array+0x3c>)
 8000292:	1b64      	subs	r4, r4, r5
 8000294:	10a4      	asrs	r4, r4, #2
 8000296:	2600      	movs	r6, #0
 8000298:	42a6      	cmp	r6, r4
 800029a:	d109      	bne.n	80002b0 <__libc_init_array+0x24>
 800029c:	4d0b      	ldr	r5, [pc, #44]	@ (80002cc <__libc_init_array+0x40>)
 800029e:	4c0c      	ldr	r4, [pc, #48]	@ (80002d0 <__libc_init_array+0x44>)
 80002a0:	f000 f818 	bl	80002d4 <_init>
 80002a4:	1b64      	subs	r4, r4, r5
 80002a6:	10a4      	asrs	r4, r4, #2
 80002a8:	2600      	movs	r6, #0
 80002aa:	42a6      	cmp	r6, r4
 80002ac:	d105      	bne.n	80002ba <__libc_init_array+0x2e>
 80002ae:	bd70      	pop	{r4, r5, r6, pc}
 80002b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b4:	4798      	blx	r3
 80002b6:	3601      	adds	r6, #1
 80002b8:	e7ee      	b.n	8000298 <__libc_init_array+0xc>
 80002ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80002be:	4798      	blx	r3
 80002c0:	3601      	adds	r6, #1
 80002c2:	e7f2      	b.n	80002aa <__libc_init_array+0x1e>
 80002c4:	080002ec 	.word	0x080002ec
 80002c8:	080002ec 	.word	0x080002ec
 80002cc:	080002ec 	.word	0x080002ec
 80002d0:	080002f0 	.word	0x080002f0

080002d4 <_init>:
 80002d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002d6:	bf00      	nop
 80002d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002da:	bc08      	pop	{r3}
 80002dc:	469e      	mov	lr, r3
 80002de:	4770      	bx	lr

080002e0 <_fini>:
 80002e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e2:	bf00      	nop
 80002e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e6:	bc08      	pop	{r3}
 80002e8:	469e      	mov	lr, r3
 80002ea:	4770      	bx	lr
