/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	uint8_t  u8_array[4]  = {0x11, 0x22, 0x33, 0x44};
	uint16_t u16_array[4] = {0x1122, 0x3344, 0x5566, 0x7788};
	uint32_t u32_array[4] = {0x11223344, 0x55667788, 0x99AABBCC, 0xDDEEFF00};

	// Pointers to the arrays
	uint8_t  *p8  = u8_array;
	uint8_t  *p10 = u8_array[2];
	uint16_t *p16 = u16_array;
	uint32_t *p32 = u32_array;

	printf("p8 address  0x%08X *p8  = 0x%08X\n", p8, *p8);     // Prints 0x11
	printf("p16 address 0x%08X *p16 = 0x%08X\n", p16, *p16);    // Prints 0x1122
	printf("p32 address 0x%08X *p32 = 0x%08X\n",p32,  *p32);    // Prints 0x11223344

	// Advance each pointer by 2 elements
	p8 += 2;   // Advances by 2 * sizeof(uint8_t)  = 2 bytes
	p16 += 2;  // Advances by 2 * sizeof(uint16_t) = 4 bytes
	p32 += 2;  // Advances by 2 * sizeof(uint32_t) = 8 bytes
	printf("p8 address  0x%08X *p8  = 0x%08X\n", p8, *p8);     // Prints 0x33
	printf("p16 address 0x%08X *p16 = 0x%08X\n", p16, *p16);   // Prints 0x5566
	printf("p32 address 0x%08X *p32 = 0x%08X\n",p32,  *p32);   // Prints 0x99AABBCC
	printf("p8 address  0x%08X p10 address 0x%08X address diff %d\n", p8, p10, p10-p8);

	for(;;);
}
